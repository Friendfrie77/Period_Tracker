{"version":3,"sources":["components/Spinner.jsx","utils/password-regex.js","pages/signupPage/SignUp.jsx","state/index.js","images/logo2.svg","images/logo.svg","pages/navbar/Nav.jsx","components/Countdown.jsx","components/Datestrip.jsx","pages/footer/Footer.jsx","pages/homePage/PeriodNotActive.jsx","pages/homePage/PeriodActive.jsx","components/BlankCountdown.jsx","pages/homePage/PeriodHere.jsx","pages/homePage/NeedInfo.jsx","utils/sendUserInfo.js","utils/fetchUserInfo.js","utils/calcPeriodInfo.js","pages/homePage/Home.jsx","pages/loginPage/Login.jsx","pages/index/Index.jsx","components/ProfileCal.jsx","classes/events.js","components/PageFade.jsx","pages/profilePage/DeleteAccout.jsx","pages/profilePage/ChangePassword.jsx","pages/profilePage/Notication.jsx","pages/profilePage/Settings.jsx","pages/profilePage/Proflie.jsx","pages/periodInfo/PeriodInfo.jsx","pages/accountSetupPage/AccountSetup.jsx","components/Test.jsx","App.js","index.js"],"names":["spinner","_jsx","className","children","passwordRegex","newPassword","confirmNewPassword","length","isvaild","msg","search","SignUp","props","loading","Spinner","_jsxs","AiOutlineClose","onClick","onShow","Form","onSubmit","validate","values","errors","email","username","password","passwordconfirm","regex","setErr","render","_ref","handleSubmit","submitting","form","pristine","err","Field","name","_ref2","input","meta","_objectSpread","type","required","htmlFor","error","touched","_ref3","_ref4","_ref5","disabled","authSlice","createSlice","initialState","user","token","cycle","avgLength","periodStartDate","periodEndDate","daysTillPeriod","canBleed","isBleeding","daysleft","previousPeriod","startDate","endDate","count","notification","reducers","setLogin","state","action","payload","setLogout","setPeriod","setCycle","setNewPeriod","setUserInfo","setCanBleed","setIsBleeding","setDays","setNotificationStatus","_authSlice$actions","actions","Nav","dispatch","useDispatch","useSelector","src","logo2","height","width","id","NavLink","to","CiLogout","renderTime","dimension","time","Countdown","_useReducer","useReducer","x","_useReducer2","_slicedToArray","daySeconds","Moment","format","todaysDate","Date","now","startTime","getTime","endTime","duration","remainingTime","half","quarter","CountdownCircleTimer","isPlaying","size","strokeWidth","colors","color1","color2","color3","colorsTime","initialRemainingTime","elapsedTime","color","style","Math","ceil","Datestrip","_useState","useState","startValue","parse","endValue","rangeDates","_useState2","date","setDate","useEffect","Datepicker","Footer","year","getFullYear","href","target","PeriodNotActive","userName","PeriodActive","forceUpdate","message","PeriodHere","BlankCountdown","NeedInfo","sendPeriodStatus","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","post","concat","process","headers","stop","_x","_x2","_x3","_x4","apply","arguments","sendUpdatedPeriod","_callee2","_context2","abrupt","_x5","_x6","_x7","_x8","removeCurrentDates","_callee4","_context4","_x12","_x13","sendPeriodInfo","_callee5","_context5","_x14","_x15","_x16","_x17","_x18","_x19","fetchUserInfo","_fetchUserInfo","result","userInfo","sent","data","avgPeriodLength","totalDays","totalCycle","oldStartDate","cycleCount","periodLogged","forEach","diff","monthDif","abs","round","estimateDate","lastPeriod","estimateLastPeriod","add","Home","setBleeding","_useState3","_useState4","needInfo","setInfo","cycleStartDate","subtract","setUser","avgLengths","_cycle","_avgLength","estimateDates","periodStarted","newEndDate","update","bloodGod","periodEnded","_callee3","_context3","_toConsumableArray","home","Login","navigate","useNavigate","setLoading","errormsg","setError","_useState5","_useState6","_onSubmit","loginTry","catch","response","accessToken","content","Index","loginOpen","newAccount","setAccount","_useState7","_useState8","setErrMsg","openLogin","openNewAccount","regNewAccount","results","login","t0","status","ProfileCal","localizer","momentLocalizer","moment","console","log","event","Calendar","events","startAccessor","start","endAccessor","end","views","Event","_createClass","title","allDay","_classCallCheck","this","Events","key","value","push","get","PageFade","DeleteAccout","deleteAccount","deletedEmail","onChange","emailChange","openDeleteBox","ChangePassword","setVaildPassword","errorMsg","setErrorMsg","oldPassword","oldPasswordChange","newPasswordChange","confirmPassword","passVaild","close","Notication","phoneNumber","setPhoneNumber","teleElement","useRef","current","submit","res","_number","_res","number","PhoneInput","country","Settings","openPassword","openNotication","Proflie","open","setOpen","deleteBox","setDelete","showPasswordChange","setPasswordChange","openNoticationBox","setNotication","_useState9","_useState10","setDeletedEmail","_useState11","_useState12","setOldPassword","_useState13","_useState14","setNewPassword","_useState15","_useState16","setConfirmPassword","_useState17","_useState18","periodEvent","_useState19","allEvents","_useState20","pEvents","checkUserInfo","periods","_start","_end","newEvent","settingToggle","noticationBox","openPasswordChange","changePassword","PeriodInfo","removeDate","setRemove","setMessage","periodMessage","setPMessage","removePeriod","setDates","dates","addPeriod","sendDates","getDate","map","element","period","userData","DateRange","editableDateInputs","showMonthAndYearPickers","fixedHeight","item","selection","moveRangeOnFirstSelection","ranges","selected","AccountSetup","isLoading","accountInfo","Test","App","isAuth","Boolean","BrowserRouter","Routes","Route","path","SignupForm","Navigate","persistConfig","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","createRoot","document","getElementById","React","StrictMode","Provider","PersistGate","persistor","persistStore"],"mappings":"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","file":"static/js/main.d2af95ed.chunk.js","sourcesContent":["import React from 'react'\n\nconst spinner = () => {\n  return (\n    <div className='loading'>\n      <div className='spinner'></div>\n    </div>\n  )\n}\n\nexport default spinner\n","function passwordRegex (newPassword, confirmNewPassword){\n    if(newPassword === confirmNewPassword){\n        if(newPassword.length < 6){\n            return ({isvaild:false, msg: 'Password must be longer than 6 characters'})\n        }else if(newPassword.search(/[a-z]/i) < 0){\n            return ({isvaild:false, msg: 'Password must contain at least one letter'})\n        }else if(newPassword.search(/[0-9]/i) < 0){\n            return ({isvaild:false, msg: 'Password must contain at least one number'})\n        }else if(newPassword.search(/^(?=.*[~`!@#$%^&*()--+={}\\[\\]|\\\\:;\"'<>,.?/_₹]).*$/i) < 0){\n            return ({isvaild:false, msg: 'Password must contain at least one special symbol'})\n        }else{\n            return true\n        }\n    }else{\n        return ({isvaild:false, msg: 'New passwords do not match'})\n    }\n}\n\nexport {passwordRegex}","import {Form, Field} from 'react-final-form';\nimport Spinner from '../../components/Spinner';\nimport {AiOutlineClose} from 'react-icons/ai';\nimport {passwordRegex} from '../../utils/password-regex';\n\nexport default function SignUp(props){\n    const content = props.loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n             onSubmit={props.onSubmit}\n             validate = {values => {\n                const errors = {}\n                if (!values.email){\n                    errors.email = 'Required'\n                }\n                if (!values.username){\n                    errors.username = 'Required'\n                }\n                if (!values.password){\n                    errors.password = 'Required'\n                }\n                if (!values.passwordconfirm){\n                    errors.passwordconfirm = 'Required'\n                } else{\n                    const regex = passwordRegex(values.password, values.passwordconfirm)\n                    if(!regex.isvaild){\n                        props.setErr(regex.msg)\n                    }\n                }\n                return errors\n             }}\n             render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                <form onSubmit={handleSubmit}>\n                    <span className='message-warning'>{props.err}</span>\n                    <h1>Sign Up</h1>\n                    <Field name='email'>\n                        {({input, meta}) => (\n                        <div className='email-input'>\n                            <input {...input} type= 'email' required/>\n                            <label htmlFor='email' className='login-lable'>\n                                <span className='login-span'>Email<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field name='username'>\n                        {({input, meta})=> (\n                        <div className='username-input'>\n                            <input {...input} type='text' required />\n                            <label htmlFor='username' className='login-lable'>\n                                <span className='login-span'>Username<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='password'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='password' className='login-lable'>\n                                <span className='login-span'>Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='passwordconfirm'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='passwordconfirm' className='login-lable'>\n                                <span className='login-span'>Confirm Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\n                </form>\n            )}\n            />\n        </section>\n    )\n    return content\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    user: null,\n    email: null,\n    token : null,\n    cycle: null,\n    avgLength: null,\n    periodStartDate: null,\n    periodEndDate: null,\n    daysTillPeriod: null,\n    canBleed: false,\n    isBleeding: false, \n    daysleft: null,\n    previousPeriod: [{\n        startDate: null,\n        endDate: null,\n        count: null\n    }],\n    notification: false,\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setLogin: (state, action) =>{\n            state.user = action.payload.user;\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate\n            state.daysTillPeriod = action.payload.cycle;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n            state.notification = action.payload.notification;\n        },\n        setLogout: (state) =>{\n            state.user = null;\n            state.token = null;\n            state.cycle = null;\n            state.daysTillPeriod = null;\n            state.periodStartDate = null;\n            state.periodEndDate = null;\n            state.daysTillPeriod = null;\n            state.canBleed = false;\n            state.isBleeding = false;\n            state.previousPeriod = null;\n            state.notification = false;\n        },\n        setPeriod: (state, action) =>{\n            state.previousPeriod = action.payload.previousPeriod\n        },\n        setCycle: (state, action) =>{\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n        },\n        setNewPeriod: (state, action) => {\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n        },\n        setUserInfo: (state, action) =>{\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setCanBleed: (state, action) =>{\n            state.canBleed = action.payload.canBleed;\n        },\n        setIsBleeding: (state, action) =>{\n            state.isBleeding = action.payload.isBleeding;\n        },\n        setDays: (state, action) =>{\n            state.daysleft = action.payload.daysleft;\n        },\n        setNotificationStatus: (state, action) =>{\n            state.notification = action.payload.notification\n        }\n    }\n})\n\nexport const {setLogin, setLogout, setPeriod, setCycle, setNewPeriod, setUserInfo, setIsBleeding, setCanBleed, setDays, setNotificationStatus} = authSlice.actions;\n\nexport default authSlice.reducer;","export default __webpack_public_path__ + \"static/media/logo2.18d8e11e.svg\";","export default __webpack_public_path__ + \"static/media/logo.8824417b.svg\";","import {useRef} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CiLogout } from 'react-icons/ci'\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nimport logo from '../../images/logo.svg'\nimport logo2 from '../../images/logo2.svg'\nconst Nav = () => {\n    const dispatch = useDispatch();\n    const cycle = useSelector((state) => state.cycle);\n    const avgLength = useSelector((state) => state.avgLength)\n    const previousPeriod = useSelector((state) => state.previousPeriod)\n\n    const logout = () =>{\n        dispatch(\n            setLogout()\n        )\n    }\n\n  return (\n    <nav className='nav'>\n        <div className='logo'>\n            <img src={logo2} height='50px' width='50px'></img>\n        </div>\n        <input id='mobile-nav-toggle' type='checkbox' /> \n        <label className='mobile-nav-container' htmlFor='mobile-nav-toggle'>\n            <div className='mobile-nav' id ='mobile-nav'></div>\n        </label>\n        <ul className='nav-links' id='nav-links'>\n            <li className='stats'>\n                <h3>Information at a Glance</h3>\n                <span>Cycle Lenght: {cycle} days</span><br/>\n                <span>Average Length: {avgLength} days </span><br />\n                <span>Periods Logged: {previousPeriod.length}</span>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/home'>\n                    Home\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/profile'>\n                    Profile\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/periodinfo'>\n                    Period Info\n                </NavLink>\n            </li>\n            <li className='logout'>\n                <button onClick={logout}>\n                    <CiLogout></CiLogout>\n                </button>\n            </li>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React, { useEffect, useState, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Moment from 'moment';\nimport { CountdownCircleTimer} from \"react-countdown-circle-timer\";\n\nconst renderTime = (dimension, time) =>{\n    return(\n        <div className='countdown-wrapper'>\n            <div className='days-left'><span>{time}&nbsp;{dimension}</span></div>\n        </div>\n    )\n}\nconst Countdown = (props) => {\n    const [update, forceUpdate] = useReducer(x => x + 1, 0);\n    const getTime = (time) =>Math.ceil((time / daySeconds));\n    const daySeconds = 86400\n    const startDate = Moment(props.startDate).format('YYYY-MM-DD')\n    const endDate = Moment(props.endDate).format('YYYY-MM-DD')\n    let todaysDate = Date.now() / 1000;\n    const startTime = new Date(startDate).getTime() / 1000;\n    const endTime = new Date(endDate).getTime() / 1000;\n    const duration = endTime - startTime;\n    const remainingTime = (endTime - todaysDate);\n    const half = (duration/2)\n    const quarter = (duration/4)\n    const timerProps = {\n    isPlaying: true,\n    size: 500,\n    strokeWidth: 10,\n    };\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors={[props.color1, props.color2, props.color3, props.color3]}\n              colorsTime={[duration , half, quarter, 0]}\n              duration={duration}\n              initialRemainingTime={remainingTime}\n            >\n            {({elapsedTime ,color}) => (\n                <span style={{color}}>\n                    {renderTime('days', getTime(duration- (duration - remainingTime)))}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import { Datepicker, DatepickerEvent} from \"@meinefinsternis/react-horizontal-date-picker\";\nimport { useState, useEffect} from \"react\";\nfunction Datestrip(props) {\n  const [date, setDate] = useState({\n    startValue: Date.parse(props.startValue),\n    endValue: new Date(props.endValue),\n    rangeDates: [],\n  });\n  useEffect(() =>{\n    setDate({\n      startValue: Date.parse(props.startValue),\n      endValue: new Date(props.endValue)\n    })\n  }, [props.startValue, props.endValue])\n  return (\n    <div className=\"horizontal-date-picker\">\n      <Datepicker\n        startValue={date.startValue}\n        endValue = {date.endValue}\n      />\n    </div>\n  )\n}\n\nexport default Datestrip\n","import React from 'react'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n  const footer = (\n    <footer>\n      <span>&copy; {year} <a href='albertfriend.dev' target='_blank'>Albert Friend</a></span>\n    </footer>\n  )\n  return footer \n}\n\nexport default Footer\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodNotActive = (props) => {\n  return (\n    <div className='page-wrapper'>\n      <Nav/>\n      <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <Datestrip\n                  startValue = {props.periodStartDate}\n                  endValue = {props.periodEndDate}\n            />\n          <div className=\"period-countdown\">\n              <h2>Your next period is in </h2>\n              <Countdown startDate = {props.startDate} endDate = {props.endDate} color1='#40bf32' color2= '#e0e20c' color3= '#FA2C00' ></Countdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' className='button' onClick={props.onClick}>Yes</button>\n          </div>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PeriodNotActive\n","import React, {useEffect, useReducer} from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodActive = (props) => {\n  const [update, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() =>{\n    forceUpdate()\n  }, [props.startDate, props.endDate, props.periodStartDate, props.periodEndDate])\n  // console.log(props.startDate, props.endDate, props.periodStartDate, props.periodEndDate)\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n        <section className='home'>\n            <h1 className='welcome-text'>Welcome back, {props.userName}</h1>\n            <Datestrip\n                startValue = {props.periodStartDate}\n                endValue = {props.periodEndDate}\n            />\n            <div className=\"period-countdown\">\n                <h2>Your period should be over in</h2>\n                <Countdown startDate = {props.startDate} endDate = {props.endDate} color1='#40bf32' color2= '#e0e20c' color3= '#FA2C00'></Countdown>\n            </div>\n            <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period ended?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n            </div>\n        </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default PeriodActive\n","import React from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst Countdown = (props) => {\n    const renderTime = (message) =>{\n        return(\n            <div className='countdown-wrapper'>\n                <div className='days-left'><span>{props.message}</span></div>\n            </div>\n        )\n    }\n    const timerProps = {\n        isPlaying: true,\n        size: 500,\n        strokeWidth: 10\n      }\n\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors='#EAE8FF'\n            >\n            {({color}) => (\n                <span style={{color}}>\n                    {renderTime(props.message)}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodHere = (props) => {\n    return (\n        <div className='page-wrapper'>\n            <Nav />\n            <section className=\"home content\">\n                <h1>Welcome back, {props.userName}</h1>\n                <Datestrip\n                    startValue = {props.periodStartDate}\n                    endValue = {props.periodEndDate}\n                />\n                <div className=\"period-countdown\">\n                    <h2>Your period might be here</h2>\n                    <div className='inner-circle'>\n                        <BlankCountdown startDate = {props.startDate} endDate = {props.endDate}></BlankCountdown>\n                    <span>Today</span>\n                    </div>\n                </div>\n                <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period started?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n                </div>\n            </section>\n            <Footer />\n        </div>\n      )\n}\n\nexport default PeriodHere\n","import Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Footer from '../footer/Footer';\nconst NeedInfo = (props) => {\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n          <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <div className=\"period-countdown\">\n              <h2>Error</h2>\n              <BlankCountdown message = {props.message}></BlankCountdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n          </div>\n          </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default NeedInfo\n\n","import axios from \"axios\";\n\nconst sendPeriodStatus = async (email, isBleeding, canBleed, token) => {\n    axios.post(`${process.env.REACT_APP_APIURL}/user/setperiodinfo`,{\n      email, isBleeding, canBleed\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\nconst sendUpdatedPeriod = async (email, periodStartDate, periodEndDate, token) => {\nconst user = axios.post(`${process.env.REACT_APP_APIURL}/user/updateperiod`, {\n    email, periodStartDate, periodEndDate\n},{\n    headers: {'Authorization': `Bearer ${token}`},\n})\nreturn user\n}\n\nconst sendPreviousPeriod = async (email, previousPeriod, token) => {\naxios.post(`${process.env.REACT_APP_APIURL}/user/addpreviousperiod`, {\n    email, previousPeriod\n},{\n    headers: {'Authorization': `Bearer ${token}`},\n})\n}\n\nconst removeCurrentDates = async(email, token) =>{\n    const user = axios.post(`${process.env.REACT_APP_APIURL}/user/nullperioddates`, {\n        email\n    },{\n        headers: {'Authorization': `Bearer ${token}`},\n    })\n    return user\n}\n\nconst sendPeriodInfo = async (email, startDate, endDate, cycle, avgLength, token) =>{\n    axios.post(`${process.env.REACT_APP_APIURL}/user/addperiod`, {\n      email, startDate, endDate, cycle, avgLength\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n  export{sendPeriodStatus, sendUpdatedPeriod, sendPreviousPeriod, removeCurrentDates, sendPeriodInfo}","import axios from \"axios\";\n\nasync function fetchUserInfo(email, token){\n    const result = axios.post(`${process.env.REACT_APP_APIURL}/user/getuserinfo`,{\n      email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      }\n    )\n    const user = await result\n    if (user){\n        const userInfo = {\n          periodStartDate: user.data.user.periodStartDate,\n          avgLength: user.data.user.avgLength,\n          cycle: user.data.user.cycle,\n          periodEndDate: user.data.user.periodEndDate,\n          previousPeriod: user.data.user.previousPeriod,\n          canBleed: user.data.user.canBleed,\n          isBleeding: user.data.user.isBleeding\n        }\n      return(userInfo)\n    }\n    else{\n        return(null)\n    }\n}\n\nexport {fetchUserInfo}","import Moment from 'moment';\n\nfunction avgPeriodLength(previousPeriod){\n    let totalDays = 0\n    let totalCycle = 0\n    let oldStartDate = null;\n    let cycleCount = 0\n    const periodLogged = previousPeriod.length;\n    if (periodLogged === 1){\n        return (false)\n    }\n    previousPeriod.forEach(date => {\n      totalDays += Moment(date.endDate).diff(date.startDate, 'days')\n      if (oldStartDate != null){\n        const monthDif = Moment(oldStartDate).diff(date.startDate, 'month', true);\n        if (Math.abs(monthDif) < 1.5){\n          totalCycle += Math.abs(Moment(date.startDate).diff(oldStartDate, 'days'))\n          cycleCount += 1\n        }\n      }else{\n        oldStartDate = Moment(date.startDate);\n      }\n    })\n    const avgLength =(Math.round(totalDays/periodLogged))\n    const cycle = (Math.round(totalCycle/cycleCount))\n    return{avgLength, cycle}\n}\n\nfunction estimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength){\n    let lastPeriod = null\n    let startDate;\n    let endDate;\n    let todaysDate = new Date()\n    todaysDate = Moment(todaysDate).format()\n    if((!periodStartDate || !periodEndDate) && previousPeriod && cycle && avgLength){\n        previousPeriod.forEach(date => {\n          if (lastPeriod === null){\n            lastPeriod = date.startDate\n          }else if(lastPeriod < date.startDate){\n            lastPeriod = date.startDate\n          }\n        })\n        const monthDif = Moment(todaysDate).diff(lastPeriod, 'month')\n        if(cycle && avgLength){\n          if( monthDif > 1){\n            const estimateLastPeriod = Moment(lastPeriod).add((monthDif), 'months')\n            startDate = Moment(estimateLastPeriod).add(cycle, 'days');\n            endDate = Moment(estimateLastPeriod).add(avgLength, 'days');\n          }else{\n            lastPeriod = Moment(lastPeriod).format()\n            startDate = Moment(lastPeriod).add(cycle, 'days');\n            endDate = Moment(startDate).add(avgLength, 'days')\n          }\n        }\n        return({startDate, endDate})\n      }else{\n        return(false)\n      }\n    }\n\n    function countdownToPeriod(startDate, endDate){\n      // const daySeconds = 86400\n      // const fiveDays = 432000\n      let todaysDate = Date.now() / 1000;\n      const startDay = Moment(startDate).format('YYYY-MM-DD')\n      const endDay = Moment(endDate).format('YYYY-MM-DD')\n      const startTime = new Date(startDay).getTime() / 1000;\n      const endTime = new Date(endDay).getTime() / 1000;\n      const duration = endTime - startTime;\n      const remainingTime = endTime - todaysDate;\n      return{startTime, duration, remainingTime}\n    }\n// function countdownCalc(startDate, endDate){\n//   const daySeconds = 86400;\n//   const fiveDays = 432000;\n//   let todaysDate = Date.now() / 1000;\n//   if(startDate && endDate){\n    // const startDay = Moment(startDate).format('YYYY-MM-DD')\n    // const endDay = Moment(endDate).format('YYYY-MM-DD')\n    // const startTime = new Date(startDay).getTime() / 1000;\n    // const endTime = new Date(endDay).getTime() / 1000;\n    // const duration = endTime - startTime;\n    // const remainingTime = endTime - todaysDate;\n    // return {duration, remainingTime}\n//   }else{\n//     return false\n//   }\n// }\nexport {avgPeriodLength, estimateDate, countdownToPeriod}","import { useEffect, useState, useReducer } from \"react\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport { setCycle, setIsBleeding, setNewPeriod, setUserInfo, setCanBleed, setPeriod} from '../../state';\nimport Moment from 'moment';\nimport axios from \"axios\";\nimport PeriodNotActive from \"./PeriodNotActive\";\nimport PeriodActive from \"./PeriodActive\";\nimport PeriodHere from \"./PeriodHere\";\nimport NeedInfo from \"./NeedInfo\";\nimport { sendPeriodStatus, sendUpdatedPeriod, sendPreviousPeriod, removeCurrentDates, sendPeriodInfo} from \"../../utils/sendUserInfo\";\nimport { fetchUserInfo } from '../../utils/fetchUserInfo'\nimport { avgPeriodLength, estimateDate} from \"../../utils/calcPeriodInfo\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const cycle = useSelector((state) => state.cycle)\n  const userName = useSelector((state) => state.user)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const avgLength = useSelector((state) => state.avgLength)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const [isBleeding, setBleeding] = useState(useSelector((state) => state.isBleeding))\n  const canBleed = useSelector((state) => state.canBleed)\n  const [needInfo, setInfo] = useState(true)\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n  let todaysDate = new Date()\n  todaysDate = Moment(todaysDate).format('YYYY-MM-DD')\n  const cycleStartDate = Moment(periodStartDate).subtract(cycle, 'days')\n  const setUser = async () =>{\n    const userInfo = await fetchUserInfo(email, token)\n    dispatch(\n      setUserInfo({\n        periodStartDate: userInfo.periodStartDate,\n        periodEndDate: userInfo.periodEndDate,\n        canBleed: userInfo.canBleed,\n        isBleeding: userInfo.isBleeding,\n        previousPeriod: userInfo.previousPeriod,\n      })\n    )\n    const avgLengths = await avgPeriodLength(previousPeriod)\n    if (avgLengths){\n      const cycle = avgLengths.cycle;\n      const avgLength = avgLengths.avgLength\n      dispatch(\n        setCycle({\n          cycle: cycle,\n          avgLength: avgLength\n        })\n      )\n    }\n    const estimateDates = await estimateDate(periodStartDate, periodEndDate, previousPeriod, avgLengths.cycle, avgLengths.avgLength)\n    if (estimateDates){\n      const startDate = Moment(estimateDates.startDate).format('YYYY-MM-DD')\n      const endDate = Moment(estimateDates.endDate).format('YYYY-MM-DD')\n      dispatch(\n        setNewPeriod({\n          periodStartDate: startDate,\n          periodEndDate: endDate\n        })\n      )\n      if(startDate && endDate){\n        const test = await sendPeriodInfo(email, estimateDates.startDate, estimateDates.endDate, avgLengths.cycle, avgLengths.avgLength, token)\n      }\n    }\n    setInfo(false)\n    if (Moment(periodStartDate).format('YYYY-MM-DD') == todaysDate || Moment(periodStartDate).format('YYYY-MM-DD') < todaysDate && !isBleeding){\n      dispatch(\n        setCanBleed({\n          canBleed: true\n        })\n      )\n    }\n  }\n\nconst periodStarted = async () =>{\n  if (Moment(periodStartDate).format('YYYY-MM-DD') != todaysDate){\n    const newEndDate = Moment(todaysDate).add(avgLength, 'days').format('YYYY-MM-DD')\n    if(!(email == 'test@test.com')){\n      const update = sendUpdatedPeriod(email, todaysDate, newEndDate, token)\n      const bloodGod = await update\n      dispatch(\n        setCanBleed({\n          canBleed: bloodGod.data.canBleed\n        })\n      )\n      dispatch(\n        setIsBleeding({\n          isBleeding: bloodGod.data.isBleeding\n        })\n      )\n      setBleeding(true)\n    }else{\n      dispatch(\n        setNewPeriod({\n          periodStartDate: todaysDate,\n          periodEndDate: newEndDate\n        })\n      )\n      setBleeding(true)\n    }\n  }\n}\n\nconst periodEnded = async () =>{\n  if (periodEndDate != todaysDate){\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: todaysDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }else{\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: periodEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }\n  sendPeriodStatus(email, false, canBleed, token)\n  removeCurrentDates(email, token)\n  setBleeding(false)\n}\nconst test = () =>{\n  console.log('test')\n  window.location.reload(true)\n}\nuseEffect(()=>{\n  setUser()\n},[isBleeding, periodStartDate])  \n\nconst home = (isBleeding, canBleed, needInfo) =>{\n  if (!isBleeding && !canBleed && !needInfo){\n    return <PeriodNotActive cycle = {cycle} userName = {userName} endDate = {periodStartDate} startDate = {cycleStartDate} onClick = {periodStarted} periodStartDate={periodStartDate} periodEndDate = {periodEndDate}/>\n  } else if(canBleed){\n    return <PeriodHere userName = {userName} onClick = {periodStarted} endDate = {periodStartDate} startDate = {todaysDate} startValue={periodStartDate} endValue = {periodEndDate}/>\n  } else if(needInfo){\n    return <NeedInfo userName = {userName} onClick = {null} message = 'More logs are required' />\n  }else{\n    return <PeriodActive userName = {userName} onClick = {periodEnded} endDate = {periodEndDate} startDate = {periodStartDate} periodStartDate={periodStartDate} periodEndDate = {periodEndDate} />\n  }\n}\n\nreturn home(isBleeding, canBleed, needInfo)\n\n}\nexport default Home\n","import {Form, Field} from 'react-final-form';\nimport { Link, useResolvedPath } from 'react-router-dom';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../../state';\nimport Spinner from '../../components/Spinner';\nimport { useSelector } from \"react-redux\";\nimport {AiOutlineClose} from 'react-icons/ai'\nimport { invalid } from 'moment';\nfunction Login(props){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const [errormsg, setError] = useState()\n    const [regError, setRegError] = useState();\n    async function onSubmit(values){\n        setLoading(true)\n        let email = values.email\n        let password = values.password\n        const loginTry = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n            email, password\n        }).catch(function (error){\n            if(error.response){\n                setError(error.response.data.error)\n            }\n            setLoading(false)\n        });\n        const user = await loginTry\n        if (user){\n            dispatch(\n                setLogin({\n                  user: user.data.user.username,\n                  email: user.data.user.email,\n                  token: user.data.accessToken,\n                  cycle: user.data.user.cycle,\n                  avgLength: user.data.avgLength,\n                  periodStartDate: user.data.user.periodStartDate,\n                  periodEndDate: user.data.user.periodEndDate,\n                  previousPeriod: user.data.user.previousPeriod,\n                  isBleeding: user.data.user.isBleeding,\n                  canBleed: user.data.user.canBleed,\n                  notification: user.data.user.notification\n                })\n              );\n              navigate('/home')\n        };\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n                onSubmit={onSubmit}\n                validate = {values => {\n                    const errors= {}\n                    if (!values.email){\n                        errors.email = 'Required'\n                    }\n                    if (!values.password){\n                        errors.password = 'Required'\n                    }\n                    return errors\n                }}\n                render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                    <form onSubmit={handleSubmit}>\n                        <h1>Sign In</h1>\n                        <span className='message warning'>{errormsg}</span>\n                        <Field name='email'>\n                            {({input, meta})=> (\n                            <div className='email-input'>\n                                <input {...input} type='email' required />\n                                <label htmlFor='email' className='login-lable'>\n                                    <span className='login-span'>Email<small>*</small></span>\n                                </label>\n                                {meta.error && meta.touched && setError('Invaild email')}\n                            </div>\n                            )}\n                        </Field>\n                        <Field name='password'>\n                            {({input, meta}) => (\n                                <div className='password-input'>\n                                    <input {...input} type ='password' required></input>\n                                    <label htmlFor='password' className='login-lable'>\n                                        <span className='login-span'>Password<small>*</small></span>\n                                    </label>\n                                    {meta.error && meta.touched && setError('Required')}\n                                </div>\n                            )}\n                        </Field>\n                        <div className='remember-me'>\n                            <input type='checkbox' id='remember' name='chkbox'></input>\n                            <label htmlFor='chkbox'>Remember Me</label>\n                        </div>\n                        <button type='submit' disabled={submitting}>Submit</button>\n                    </form>\n                )}\n            />\n        </section>\n    )\n    return content\n};\n\nexport default Login","import React, { useEffect, useState } from 'react';\nimport Login from '../loginPage/Login';\nimport SignUp from '../signupPage/SignUp';\nimport axios from 'axios'\nimport {useNavigate} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nfunction Index() {\n    const [loginOpen, setLogin] = useState(false)\n    const [newAccount, setAccount] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [err, setErrMsg] = useState('');\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const openLogin = () =>{\n        setLogin(!loginOpen)\n    }\n    const openNewAccount = () =>{\n        setAccount(!newAccount)\n    }\n    const errMsg = (msg) =>{\n        setErrMsg(msg)\n    }\n    const regNewAccount = async (values) =>{\n        let email = values.email\n        let username = values.username\n        let password = values.password\n        setLoading(true)\n        try{\n            const results = await axios.post(`${process.env.REACT_APP_APIURL}/register`,{\n                email, username, password\n            })\n            const result = await results\n            if (result){\n                const login = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n                    email, password\n            });\n            const user = await login\n            if (user){\n                dispatch(\n                    setLogin({\n                        user: user.data.user.username,\n                        email: user.data.user.email,\n                        token: user.data.accessToken,\n                        cycle: user.data.user.cycle,\n                        avgLength: user.data.avgLength,\n                        periodStartDate: user.data.user.periodStartDate,\n                        periodEndDate: user.data.user.periodEndDate,\n                        previousPeriod: user.data.user.previousPeriod,\n                        isBleeding: user.data.user.isBleeding,\n                        canBleed: user.data.user.canBleed,\n                        notification: user.data.user.notification\n                    })\n                  );\n                  navigate('/AccountSetup')\n                }\n            }\n        }catch(err){\n            if(err.response.status === 401){\n                setErrMsg(err.response.data.msg)\n                setLoading(false)\n            }\n        }\n    }\n\n    const content = (\n        <section className='index-wrapper content'>\n            <div className='index-background-img'></div>\n            <h1>Welcome,</h1>\n            <p>You can use this simple web application to track your menstrual cycle. More features are being added soon. Please note this application is still in the early stages, as a result, the accuracy of the tracking is still being tweaked, and pages might be a little slow to load.</p>\n            <hr></hr>\n            <div className='login-button-container'>\n                <span>Already have an account? <button onClick={openLogin}>Login here</button></span>\n                <span className='signup'>or you can<button onClick={openNewAccount}>make one here</button></span>\n            </div>\n            {loginOpen &&\n                <div className='page-fade'>\n                    <Login onShow={openLogin}/>\n                </div>\n            }\n            {newAccount &&\n                <div className='page-fade'>\n                    <SignUp onShow={openNewAccount} onSubmit = {regNewAccount} loading ={loading} setErr = {errMsg} err = {err}/>\n                </div>\n            }\n        </section>\n    )\n  return content\n}\n\nexport default Index\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from \"moment\";\nimport { useMemo } from 'react';\n\nfunction ProfileCal(props) {\n    const localizer = momentLocalizer(moment)\n    const views = 'month'\n    console.log(props.event)\n  return (\n    <div className=\"profile-cal\">\n      <Calendar\n        localizer={localizer}\n        events={props.event}\n        startAccessor= {props.start}\n        endAccessor= {props.end}\n        views = {views}\n        // selectable = {false}\n      />\n    </div>\n  )\n}\n\nexport default ProfileCal\n","export class Event{\n    constructor(title, start, end, allDay){\n        this.title = title;\n        this.start = start;\n        this.end = end;\n        this.allDay = allDay;\n    }\n}\n\nexport class Events{\n    constructor(){\n        this.events=[]\n    }\n    newEvent(title, start, end, allDay){\n        this.events.push(new Event(title, start, end, allDay))\n    }\n    get allEvents(){\n        return this.events\n    }\n}\n\n","import React from 'react'\n\nfunction PageFade(props) {\n  return (\n    <div className='page-fade'>\n      {props.content}\n    </div>\n  )\n}\nexport default PageFade","import React from 'react'\n\nconst DeleteAccout = (props) => {\n  return (\n    <div className='warning-box'>\n        <h1>Please enter your email adress to delete your account.</h1>\n        <form onSubmit={props.deleteAccount} className='delete-account'>\n        <div className='email-input'>\n            <input type='email' value={props.deletedEmail} onChange={props.emailChange}></input>\n            <label htmlFor='email' className='login-lable'>\n            <span className='login-span'>Email</span>\n            </label>\n        </div>\n        <button className='button' type='submit'>Delete</button>\n        <button className='button' onClick={props.openDeleteBox}>Cancel</button>\n        </form>\n  </div>\n  )\n}\n\nexport default DeleteAccout\n","import { useState } from 'react'\nimport { passwordRegex } from '../../utils/password-regex'\n\nfunction ChangePassword(props) {\n  const [vaildPassword, setVaildPassword] = useState()\n  const [errorMsg, setErrorMsg] = useState()\n  const test = () =>{\n    const passVaild = passwordRegex(props.newPassword, props.confirmNewPassword)\n    if(!passVaild.isvaild){\n      setErrorMsg(passVaild.msg)\n    }else{\n      setVaildPassword(true)\n      props.ChangePassword()\n    }\n  }\n  return (\n    <div className='warning-box'>\n      <h1>Would you like to change your password?</h1>\n      <div className='password-change'>\n        <span className='warning'>{errorMsg}</span>\n        <div className='password-input'>\n          <input type = 'password' value={props.oldPassword} onChange={props.oldPasswordChange}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>Old Password<small>*</small></span>\n          </label>\n        </div>\n        <div className='password-input'>\n          <input type = 'password' value={props.newPassword} onChange={props.newPasswordChange}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>New Password<small>*</small></span>\n          </label>\n        </div>\n        <div className='password-input'>\n          <input type = 'password' value={props.confirmNewPassword} onChange={props.confirmPassword}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>Confirm Password<small>*</small></span>\n          </label>\n        </div>\n        <button className='button' type='submit' onClick={test}>Submit</button> \n      </div>\n      <button className='text-button' onClick = {props.close}>Go back</button>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import {useState, useRef, useEffect} from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios, { Axios } from 'axios';\nimport { setNotificationStatus } from '../../state';\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/high-res.css'\nfunction Notication(props) {\n    const dispatch = useDispatch();\n    const notification = useSelector((state) => state.notification);\n    const email = useSelector((state) => state.email);\n    const token = useSelector((state) => state.token);\n    const [message, setmMessage] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const close = props.close\n    const teleElement = useRef()\n    useEffect(() =>{\n        teleElement.current = phoneNumber\n    },[phoneNumber])\n    const numberChange = (number) =>{\n        setPhoneNumber(number)\n        console.log(phoneNumber)\n    }\n    const submit = async () =>{\n        if (notification){\n            const status = false\n            const number = null\n            const res = await axios.post(`${process.env.REACT_APP_APIURL}/user/setnotificationstatus`,{\n                email, status, number\n            },{\n                headers: {'Authorization': `Bearer ${token}`},\n            })\n            dispatch(\n                setNotificationStatus({\n                    notification: res.data.notification\n                })\n            )\n            close()\n        }else if(!notification){\n            const status = true;\n            const number = phoneNumber\n            const res = await axios.post(`${process.env.REACT_APP_APIURL}/user/setnotificationstatus`,{\n                email, status, number\n            },{\n                headers: {'Authorization': `Bearer ${token}`},\n            })\n            dispatch(\n                setNotificationStatus({\n                    notification: res.data.notification\n                })\n            )\n            close()\n        }\n    }\n    const test = () =>{\n        console.log(phoneNumber)\n    }\n  return (\n    <div className='warning-box'>\n        {notification &&\n            <div className='notification'>\n                <h1>Would you like to stop notifications?</h1>\n                <div className='button-container'>\n                    <button className='button' onClick={submit}>Yes</button>\n                    <button className='button' onClick={props.close}>No</button>\n                </div>\n            </div>\n\n        }\n        {!notification &&\n            <div className='notification'>\n                <h1>Would you like to receive text notification?</h1>\n                <div className='button-container'>\n                    <div className='toggle-on'>\n                        <PhoneInput\n                            onChange={numberChange}\n                            country={'us'}\n                            value = {phoneNumber}\n                        />\n                    </div>\n                    <button className='button' type='submit' onClick={submit}>Submit</button>\n                    <button className='text-button' onClick={props.close}>Go Back</button>\n                </div>\n            </div>\n        }\n    </div>\n  )\n}\n\nexport default Notication\n","import React from 'react'\nfunction Settings(props) {\n  return (\n    <div className='warning-box'>\n        <div className='inner-account-settings'>\n            <div className='setting-option'>\n                <button onClick={props.openPassword}>Password Change</button>\n            </div>\n            <div className='setting-option'>\n                <button onClick={props.openNotication}>Toggle Notication</button>\n            </div>\n            <div className='setting-option'>\n                <button onClick={props.openDeleteBox}>Delete Account</button>\n            </div>\n            <button className='text-button' onClick={props.close}>Go Back</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import {useState, useEffect} from 'react';\nimport Moment from 'moment';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Nav from '../navbar/Nav'\nimport {useNavigate} from 'react-router-dom';\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport {fetchUserInfo} from '../../utils/fetchUserInfo'\nimport Footer from '../footer/Footer';\nimport ProfileCal from '../../components/ProfileCal';\nimport {Events } from '../../classes/events';\nimport PageFade from '../../components/PageFade'\nimport DeleteAccout from './DeleteAccout';\nimport ChangePassword from './ChangePassword';\nimport Notication from './Notication';\nimport Settings from './Settings';\nimport { passwordRegex } from '../../utils/password-regex';\nconst Proflie = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  // const user = fetchUserInfo(email, token)\n  const [open, setOpen] = useState(false);\n  const [deleteBox, setDelete] = useState(false);\n  const [showPasswordChange, setPasswordChange] = useState(false);\n  const [openNoticationBox, setNotication] = useState(false);\n  const [deletedEmail, setDeletedEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmPassword] = useState('');\n  const [erroMsg, setErrorMsg] = useState('');\n  const notification = useSelector((state) => state.notification);\n  console.log(notification)\n  let periodEvent = new Events()\n  const [pEvents, setEvents] = useState(periodEvent.allEvents)\n  const checkUserInfo = async () => {\n    if (pEvents.length == 0){\n      for(const periods in previousPeriod){\n        let start = Moment(previousPeriod[periods].startDate)\n        let end = Moment(previousPeriod[periods].endDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n      if (periodStartDate && periodEndDate){\n        let start = Moment(periodStartDate)\n        let end = Moment(periodEndDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n    }\n  }\n  const emailChange = (email) => {\n    setDeletedEmail(email.target.value)\n    console.log(email.target.value)\n  }\n  const oldPasswordChange = (password) =>{\n    setOldPassword(password.target.value)\n  }\n  const newPasswordChange = (password) =>{\n    setNewPassword(password.target.value)\n  }\n  const confirmPassword = (password) =>{\n    setConfirmPassword(password.target.value)\n  }\n  const settingToggle = () =>{\n    setOpen(!open)\n  }\n  const noticationBox = () => {\n    setNotication(!openNoticationBox)\n  }\n  const openDeleteBox = () =>{\n    setDelete(!deleteBox)\n  }\n  const openPasswordChange = () =>{\n    setPasswordChange(!showPasswordChange)\n  }\n  const deleteAccount = () =>{\n    if (deletedEmail === email){\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/deleteuser`, {\n        email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      dispatch(\n        setLogout()\n      )\n      navigate('/')\n    }\n  }\n  const changePassword = () =>{\n    const regex = passwordRegex(newPassword, confirmNewPassword)\n    if (!regex.isvaild){\n      setErrorMsg(regex.msg)\n    }else{\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/changepassword`,{\n        email, oldPassword, newPassword\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n    }\n  }\n  useEffect(() =>{\n    checkUserInfo()\n  },[])\n\n  const content = (\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='profile content'>\n        <h1 className='welcome-text'>Hello {userName},</h1>\n        <div className='calander'>\n          <h2>Here is how you month looks</h2>\n          <ProfileCal\n            event= {pEvents}\n          />\n        </div>\n        <div className='account-settings'>\n          <button onClick={settingToggle}>Settings</button>\n          {open &&\n            <PageFade content = {<Settings openPassword = {openPasswordChange} openNotication = {noticationBox} openDeleteBox= {openDeleteBox} close={settingToggle} />} />\n          }\n        </div>\n        {deleteBox &&\n        <PageFade content = {<DeleteAccout deleteAccount ={deleteAccount} deletedEmail={deletedEmail} emailChange={emailChange} openDeleteBox={openDeleteBox}/>} />\n        }\n        {openNoticationBox &&\n         <PageFade content= {<Notication close ={noticationBox} />} />\n        }\n        {showPasswordChange &&\n          <PageFade content= {<ChangePassword changePassword = {changePassword} oldPassword = {oldPassword} oldPasswordChange= {oldPasswordChange} newPassword = {newPassword} newPasswordChange = {newPasswordChange} confirmNewPassword = {confirmNewPassword} confirmPassword = {confirmPassword} close={openPasswordChange}/>} />\n        }\n      </section>\n      <Footer />\n    </div>\n  )\n  return content\n}\n\nexport default Proflie\n\n\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport Footer from '../footer/Footer';\nimport {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Moment from 'moment';\nimport axios from 'axios';\nimport { setPeriod } from '../../state';\n\n\nfunction PeriodInfo() {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const userInfo = useSelector((state) => state.previousPeriod)\n  const [removeDate, setRemove] = useState()\n  const [message, setMessage] = useState()\n  const [periodMessage, setPMessage] = useState()\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const optionChange = (event) =>{\n    setRemove(event.target.value)\n  }\n\n  const removePeriod = async () =>{\n    if (!removeDate){\n      setMessage('Please select a date')\n    }else{\n      const res =  await axios.post(`${process.env.REACT_APP_APIURL}/user/removePeriod`,{\n        email, removeDate},{\n          headers: {'Authorization': `Bearer ${token}`},\n        })\n        if (res.status === 201){\n          dispatch(\n            setPeriod({\n              previousPeriod: res.data.previousPeriod\n            })\n          )\n          setMessage(res.data.message)\n        }\n      }\n    }\n    const userData = (date) =>{\n      if (date[0].endDate){\n        const start = date[0].startDate.getDate()\n        const end = date[0].endDate.getDate()\n        if (start != end){\n          const startDate = Moment(date[0].startDate).format()\n          const endDate = Moment(date[0].endDate).format()\n          if (userInfo.length != 0){\n            const dates = userInfo.map(function(element){return element;})\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: userInfo.length,\n            }\n            dates.push(period)\n            setDates(dates)\n          }else{\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: 0,\n            }\n            let dates = [period]\n            setDates(dates)\n          }\n        }\n      }\n    }\n    const setDates = (dates) =>{\n      dispatch(\n        setPeriod({\n          previousPeriod: dates\n        })\n      );\n    }\n    const addPeriod = async () =>{\n      const sendDates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n        email, userInfo},{\n          headers: {'Authorization': `Bearer ${token}`},\n        }\n      )\n      const res = await sendDates\n      setPMessage(`${res.data.message}!`)\n    };\n    \n    useEffect(()=>{\n      userData(date)\n    },[date]);\n  const content =\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='info content'>\n        <div className='logging-period'>\n          <h1>Do you have any more period(s) to log?</h1>\n          <span className='message'>{periodMessage}</span>\n          <DateRange\n              editableDateInputs={true}\n              showMonthAndYearPickers={false}\n              fixedHeight = {true}\n              onChange={item => setDate([item.selection])}\n              moveRangeOnFirstSelection={false}\n              ranges={date}\n              // scroll = {{enabled: true}}\n            />\n          <button className='button' onClick={addPeriod}>Add</button>\n        </div>\n        <div className='remove-period'>\n          <span className='message'>{message}</span>\n          <h2>Or would you like to remove some?</h2>\n          <fieldset>\n            <label htmlFor = 'periods'>Select a period to remove:</label>\n            <select name='periods' className='periods' onChange={optionChange}>\n              <option disabled selected>Select a date</option>\n              {userInfo.map((date, key) => <option value={key} key={date + key}>{`${Moment(date.startDate).format('MMMM Do YYYY')} - ${Moment(date.endDate).format('MMMM Do YYYY')}`}</option>\n              )}\n            </select>\n          </fieldset>\n          <button className='button' onClick={removePeriod}>Remove</button>\n        </div>\n      </section>\n      <Footer />\n    </div>\n\n  return content;\n}\n\nexport default PeriodInfo\n","import {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useDispatch } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport Moment from 'moment';\nimport {setPeriod} from '../../state';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Spinner from '../../components/Spinner'\nimport Waves from '../../components/Waves'\n\n\nconst AccountSetup = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const [isLoading, setLoading] = useState(false)\n  const userInfo = useSelector((state) => state.previousPeriod);\n  const email = useSelector((state) => state.email)\n  const token = useSelector((state) => state.token)\n\n  const userData = (date) =>{\n    if (date[0].endDate){\n      const start = date[0].startDate.getDate()\n      const end = date[0].endDate.getDate()\n      if (start != end){\n        const startDate = Moment(date[0].startDate).format()\n        const endDate = Moment(date[0].endDate).format()\n        if (userInfo.length != 0){\n          const dates = userInfo.map(function(element){return element;})\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: userInfo.length,\n          }\n          dates.push(period)\n          setDates(dates)\n        }else{\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: 0,\n          }\n          let dates = [period]\n          setDates(dates)\n        }\n      }\n    }\n  }\n  const setDates = (dates) =>{\n    dispatch(\n      setPeriod({\n        previousPeriod: dates\n      })\n    );\n  }\n\n  useEffect(()=>{\n    userData(date)\n  },[date]);\n  const accountInfo = async () =>{\n    setLoading(true)\n    try{\n      const dates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n          email,\n          userInfo\n          },{\n            headers: {'Authorization': `Bearer ${token}`},\n          }\n          );\n          if (dates){\n            navigate('/Home')\n          }\n    }catch(err){\n      console.log(err)\n    }\n  }\n  const setup = isLoading ? <Spinner /> : (\n        <section className='setup-wrapper'>\n          <h1>When was your last few periods?</h1>\n          <p>Just select them below, and once your done hit next. Please try to make them as close as you can.</p>\n          <DateRange\n            editableDateInputs={true}\n            showMonthAndYearPickers={false}\n            fixedHeight = {true}\n            onChange={item => setDate([item.selection])}\n            moveRangeOnFirstSelection={false}\n            ranges={date}\n            // scroll = {{enabled: true}}\n          />\n          <button type='submit' className='nextButton' onClick={accountInfo}>Next</button>\n        </section>\n  )\n  return setup\n}\n\nexport default AccountSetup\n","import Datestrip from './Datestrip';\nimport { useDispatch,useSelector } from 'react-redux';\nimport Spinner from './Spinner';\n\nconst Test = () => {    \n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n    const calendar = (\n      <Spinner />\n    )\n    return calendar\n}\n\nexport default Test\n","import { BrowserRouter, Navigate, Routes, Route } from \"react-router-dom\";\nimport SignupForm from './pages/signupPage/SignUp'\nimport { useSelector } from \"react-redux\";\nimport Home from './pages/homePage/Home'\nimport Index from './pages/index/Index'\nimport Proflie from \"./pages/profilePage/Proflie\";\nimport PeriodInfo from \"./pages/periodInfo/PeriodInfo\";\nimport AccountSetup from \"./pages/accountSetupPage/AccountSetup\";\nimport Test from \"./components/Test\";\nfunction App() {\n    const isAuth = Boolean(useSelector((state) => state.token));\n    const newAccount = useSelector((state) => state.previousPeriod);\n    let isNew;\n    // function newAccountCheck(newAccount){\n    //     if (newAccount.length < 1){\n    //         isNew = true;\n    //     }else{\n    //         isNew = false;\n    //     }\n    // }\n    // newAccountCheck(newAccount)\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/accountsetup' element={ <AccountSetup/>} />\n                <Route path='/signup' element={<SignupForm />} />\n                <Route path='/' element={<Index />} />\n                <Route path='/profile' element={ isAuth ? <Proflie /> : <Navigate to='/' />} />\n                <Route path='/periodinfo' element={isAuth ? <PeriodInfo /> : <Navigate to='/' />} />\n                <Route path='/home' element= {isAuth ? <Home /> : <Navigate to='/' />}/>\n                <Route path='/Test1' element= {<Test />} />\n            </Routes>\n        </BrowserRouter>\n);\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\nimport './styles/styles.css';\nimport App from './App';\nimport { configureStore, ConfigureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport authReducer from \"./state\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}