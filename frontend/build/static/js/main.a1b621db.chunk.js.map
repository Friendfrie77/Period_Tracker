{"version":3,"sources":["state/index.js","components/Spinner.jsx","pages/signupPage/SignUp.jsx","hooks/fetchUserInfo.js","pages/navbar/Nav.jsx","components/Countdown.jsx","pages/homePage/PeriodNotActive.jsx","pages/homePage/PeriodActive.jsx","components/BlankCountdown.jsx","pages/homePage/PeriodHere.jsx","pages/homePage/NeedInfo.jsx","pages/homePage/Home.jsx","hooks/calcPeriodInfo.js","pages/loginPage/Login.jsx","pages/footer/Footer.jsx","pages/profilePage/Proflie.jsx","pages/periodInfo/PeriodInfo.jsx","pages/accountSetupPage/AccountSetup.jsx","components/Test.jsx","App.js","index.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","cycle","avgLength","periodStartDate","periodEndDate","daysTillPeriod","canBleed","isBleeding","daysleft","previousPeriod","startDate","endDate","count","reducers","setLogin","state","action","payload","setLogout","setPeriod","setCycle","setNewPeriod","setUserInfo","setCanBleed","setIsBleeding","setDays","actions","spinner","className","SignUp","navigate","useNavigate","dispatch","useDispatch","useState","setErrMsg","loading","setLoading","onSubmit","values","username","password","axios","post","process","results","login","data","accessToken","console","log","Spinner","validate","errors","passwordconfirm","render","handleSubmit","submitting","form","pristine","input","meta","type","required","htmlFor","error","touched","disabled","result","headers","userInfo","Nav","useSelector","id","length","to","onClick","renderTime","dimension","time","Countdown","props","Moment","format","daySeconds","todaysDate","Date","now","startTime","getTime","endTime","duration","remainingTime","isPlaying","size","strokeWidth","colors","colorsTime","initialRemainingTime","elapsedTime","color","style","PeriodNotActive","userName","PeriodActive","message","PeriodHere","BlankCountdown","NeedInfo","Home","needInfo","setInfo","useFetchUserInfo","avgLengths","totalDays","totalCycle","oldStartDate","cycleCount","periodLogged","forEach","date","diff","monthDif","Math","abs","round","useAvgPeriodLength","estimateDate","lastPeriod","estimateLastPeriod","add","useEstimateDate","cycleStartDate","subtract","setUser","sendPeriodInfo","sendUpdatedPeriod","test","periodStarted","newEndDate","update","bloodGod","periodEnded","useEffect","home","Login","loginTry","content","Footer","year","getFullYear","href","target","Proflie","open","setOpen","deleteBox","setDelete","showPasswordChange","setPasswordChange","deletedEmail","setDeletedEmail","oldPassword","setOldPassword","newPassword","confirmNewPassword","oldPasswordChange","e","openDeleteBox","editableDateInputs","showMonthAndYearPickers","ranges","value","onChange","PeriodInfo","key","setDate","fixedHeight","item","selection","moveRangeOnFirstSelection","selected","map","AccountSetup","isLoading","setDates","dates","getDate","element","period","push","userData","accountInfo","Test","calendarEl","document","getElementById","Calendar","plugins","resourceTimelinePlugin","initialView","resources","title","App","isAuth","Boolean","path","persistConfig","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","createRoot","StrictMode","persistor","persistStore"],"mappings":"mPAsBaA,EAAYC,YAAY,CACjCC,KAAM,OACNC,aArBiB,CACjBC,KAAM,KACNC,MAAO,KACPC,MAAQ,KACRC,MAAO,KACPC,UAAW,KACXC,gBAAiB,KACjBC,cAAe,KACfC,eAAgB,KAChBC,UAAU,EACVC,YAAY,EACZC,SAAU,KACVC,eAAgB,CAAC,CACbC,UAAW,KACXC,QAAS,KACTC,MAAO,QAOXC,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAMjB,KAAOkB,EAAOC,QAAQnB,KAC5BiB,EAAMhB,MAAQiB,EAAOC,QAAQlB,MAC7BgB,EAAMf,MAAQgB,EAAOC,QAAQjB,MAC7Be,EAAMd,MAAQe,EAAOC,QAAQhB,MAC7Bc,EAAMb,UAAYc,EAAOC,QAAQf,UACjCa,EAAMZ,gBAAkBa,EAAOC,QAAQd,gBACvCY,EAAMX,cAAgBY,EAAOC,QAAQb,cACrCW,EAAMV,eAAiBW,EAAOC,QAAQhB,MACtCc,EAAMT,SAAWU,EAAOC,QAAQX,SAChCS,EAAMR,WAAaS,EAAOC,QAAQV,WAClCQ,EAAMN,eAAiBO,EAAOC,QAAQR,cAC1C,EACAS,UAAW,SAACH,GACRA,EAAMjB,KAAO,KACbiB,EAAMf,MAAQ,KACde,EAAMd,MAAQ,KACdc,EAAMV,eAAiB,KACvBU,EAAMZ,gBAAkB,KACxBY,EAAMX,cAAgB,KACtBW,EAAMV,eAAiB,KACvBU,EAAMT,UAAW,EACjBS,EAAMR,YAAa,EACnBQ,EAAMN,eAAiB,IAC3B,EACAU,UAAW,SAACJ,EAAOC,GACfD,EAAMN,eAAiBO,EAAOC,QAAQR,cAC1C,EACAW,SAAU,SAACL,EAAOC,GACdD,EAAMd,MAAQe,EAAOC,QAAQhB,MAC7Bc,EAAMb,UAAYc,EAAOC,QAAQf,SACrC,EACAmB,aAAc,SAACN,EAAOC,GAClBD,EAAMZ,gBAAkBa,EAAOC,QAAQd,gBACvCY,EAAMX,cAAgBY,EAAOC,QAAQb,aACzC,EACAkB,YAAa,SAACP,EAAOC,GACjBD,EAAMZ,gBAAkBa,EAAOC,QAAQd,gBACvCY,EAAMX,cAAgBY,EAAOC,QAAQb,cACrCW,EAAMd,MAAQe,EAAOC,QAAQhB,MAC7Bc,EAAMb,UAAYc,EAAOC,QAAQf,UACjCa,EAAMT,SAAWU,EAAOC,QAAQX,SAChCS,EAAMR,WAAaS,EAAOC,QAAQV,WAClCQ,EAAMN,eAAiBO,EAAOC,QAAQR,cAC1C,EACAc,YAAa,SAACR,EAAOC,GACjBD,EAAMT,SAAWU,EAAOC,QAAQX,QACpC,EACAkB,cAAe,SAACT,EAAOC,GACnBD,EAAMR,WAAaS,EAAOC,QAAQV,UACtC,EACAkB,QAAS,SAACV,EAAOC,GACbD,EAAMP,SAAWQ,EAAOC,QAAQT,QACpC,KAID,EAAmHd,EAAUgC,QAAtHZ,EAAQ,EAARA,SAAUI,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAW,EAAXA,YAAaE,EAAa,EAAbA,cAAeD,EAAW,EAAXA,YAMnF7B,GANuG,EAAP+B,QAMhG/B,EAAiB,S,eC/EjBiC,EARC,WACd,OACE,qBAAKC,UAAU,UAAS,SACtB,qBAAKA,UAAU,aAGrB,ECAe,SAASC,IACpB,IAAMC,EAAWC,cACXC,EAAWC,cACjB,EAAyBC,qBAAU,mBAAvBC,GAAF,KAAW,MACrB,EAA8BD,oBAAS,GAAM,mBAAtCE,EAAO,KAAEC,EAAU,KAEpBC,EAAQ,iDAAG,WAAOC,GAAM,2FAIV,OAHZxC,EAAQwC,EAAOxC,MACfyC,EAAWD,EAAOC,SAClBC,EAAWF,EAAOE,SACtBJ,GAAW,GAAK,kBAEUK,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,aAAY,CACxE7C,QAAOyC,WAAUC,aACnB,OAFW,OAAPI,EAAO,iBAGQA,EAAO,QAAhB,WACD,CAAC,EAAF,+BACcH,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,eAAc,CACxE7C,QAAO0C,aACZ,KAAD,GAFa,OAALK,EAAK,iBAGIA,EAAK,SAAlBhD,EAAI,UAENkC,EACIlB,EAAS,CACPhB,KAAMA,EAAKiD,KAAKjD,KAAK0C,SACrBzC,MAAOD,EAAKiD,KAAKjD,KAAKC,MACtBC,MAAOF,EAAKiD,KAAKC,YACjB/C,MAAOH,EAAKiD,KAAKjD,KAAKG,MACtBE,gBAAiBL,EAAKiD,KAAKjD,KAAKK,gBAChCC,cAAeN,EAAKiD,KAAKjD,KAAKM,cAC9BK,eAAgBX,EAAKiD,KAAKjD,KAAKW,kBAGnCqB,EAAS,kBACV,0DAGLmB,QAAQC,IAAI,EAAD,IACXf,EAAU,EAAD,IAAK,0DAErB,gBAlCa,sCA8Gd,OA3EgBC,EAAU,cAACe,EAAO,IAC9B,0BAASvB,UAAU,gBAAe,UAC9B,6BAAI,cACJ,cAAC,IAAI,CACJU,SAAUA,EACVc,SAAY,SAAAb,GACT,IAAMc,EAAS,CAAC,EAehB,OAdKd,EAAOxC,QACRsD,EAAOtD,MAAQ,YAEdwC,EAAOC,WACRa,EAAOb,SAAW,YAEjBD,EAAOE,WACRY,EAAOZ,SAAW,YAEjBF,EAAOe,gBAEFf,EAAOE,WAAaF,EAAOe,kBACjCD,EAAOC,gBAAkB,cAFzBD,EAAOC,gBAAkB,WAItBD,CACV,EACAE,OAAU,gBAAEC,EAAY,EAAZA,aAAoBC,GAAF,EAAJC,KAAgB,EAAVD,YAAoB,EAARE,SAAgB,EAANpB,OAAM,OACzD,uBAAMD,SAAUkB,EAAa,UACzB,cAAC,IAAK,CAAC5D,KAAK,QAAO,SACd,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACd,sBAAKjC,UAAU,cAAa,UACxB,iDAAWgC,GAAK,IAAEE,KAAM,QAAQC,UAAQ,KACxC,uBAAOC,QAAQ,QAAQpC,UAAU,cAAa,SAC1C,uBAAMA,UAAU,aAAY,UAAC,QAAK,gCAAO,WAE5CiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGV,cAAC,IAAK,CAACrE,KAAK,WAAU,SACjB,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACd,sBAAKjC,UAAU,iBAAgB,UAC3B,iDAAWgC,GAAK,IAAEE,KAAK,OAAOC,UAAQ,KACtC,uBAAOC,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,WAAQ,gCAAO,WAE/CiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGV,cAAC,IAAK,CAACH,KAAK,WAAWlE,KAAK,WAAU,SACjC,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACd,sBAAKjC,UAAU,iBAAgB,UAC3B,iDAAWgC,GAAK,IAAEE,KAAK,WAAWC,UAAQ,KAC1C,uBAAOC,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,WAAQ,gCAAO,WAE/CiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGV,cAAC,IAAK,CAACH,KAAK,WAAWlE,KAAK,kBAAiB,SACxC,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACd,sBAAKjC,UAAU,iBAAgB,UAC3B,iDAAWgC,GAAK,IAAEE,KAAK,WAAWC,UAAQ,KAC1C,uBAAOC,QAAQ,kBAAkBpC,UAAU,cAAa,SACpD,uBAAMA,UAAU,aAAY,UAAC,mBAAgB,gCAAO,WAEvDiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGV,wBAAQH,KAAK,SAASK,SAAUV,EAAW,SAAC,aACzC,MAMvB,C,6BCzH+B,aAwB9B,OAxB8B,kCAA/B,WAAgC1D,EAAOC,GAAO,IAAF,iFAOvC,OANgBiC,cACXmC,EAAS1B,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,qBAAoB,CAC3E7C,SACE,CACAsE,QAAS,CAAC,cAAgB,UAAD,OAAYrE,MAExC,SACkBoE,EAAM,OAAf,KAAJtE,EAAI,QACD,CAAC,EAAF,cASH,OARKwE,EAAW,CACfnE,gBAAiBL,EAAKiD,KAAKjD,KAAKK,gBAChCD,UAAWJ,EAAKiD,KAAKjD,KAAKI,UAC1BD,MAAOH,EAAKiD,KAAKjD,KAAKG,MACtBG,cAAeN,EAAKiD,KAAKjD,KAAKM,cAC9BK,eAAgBX,EAAKiD,KAAKjD,KAAKW,eAC/BH,SAAUR,EAAKiD,KAAKjD,KAAKQ,SACzBC,WAAYT,EAAKiD,KAAKjD,KAAKS,YAC5B,kBACI+D,GAAQ,iCAGN,MAAI,6CAElB,sB,aC+BcC,EArDH,WACR,IAAMvC,EAAWC,cACXhC,EAAQuE,aAAY,SAACzD,GAAK,OAAKA,EAAMd,KAAK,IAC1CC,EAAYsE,aAAY,SAACzD,GAAK,OAAKA,EAAMb,SAAS,IAClDO,EAAiB+D,aAAY,SAACzD,GAAK,OAAKA,EAAMN,cAAc,IAQpE,OACE,sBAAKmB,UAAU,MAAK,UAChB,qBAAKA,UAAU,OAAM,SAAC,gBAGtB,uBAAO6C,GAAG,oBAAoBX,KAAK,aACnC,uBAAOlC,UAAU,uBAAuBoC,QAAQ,oBAAmB,SAC/D,qBAAKpC,UAAU,aAAa6C,GAAI,iBAEpC,qBAAI7C,UAAU,YAAY6C,GAAG,YAAW,UACpC,qBAAI7C,UAAU,QAAO,UACjB,6BAAI,4BACJ,iCAAM,iBAAe3B,EAAM,WAAY,uBACvC,iCAAM,mBAAiBC,EAAU,YAAa,uBAC9C,iCAAM,mBAAiBO,EAAeiE,aAE1C,oBAAI9C,UAAU,WAAU,SACpB,cAAC,IAAO,CAAC+C,GAAG,QAAO,SAAC,WAIxB,oBAAI/C,UAAU,WAAU,SACpB,cAAC,IAAO,CAAC+C,GAAG,WAAU,SAAC,cAI3B,oBAAI/C,UAAU,WAAU,SACpB,cAAC,IAAO,CAAC+C,GAAG,cAAa,SAAC,kBAI9B,oBAAI/C,UAAU,SAAQ,SAClB,wBAAQgD,QAtCL,WACX5C,EACId,IAER,EAkCoC,SACpB,cAAC,IAAQ,aAM7B,E,QCpDM2D,EAAa,SAACC,EAAWC,GAC3B,OACI,qBAAKnD,UAAU,oBAAmB,SAC9B,qBAAKA,UAAU,YAAW,SAAC,iCAAOmD,EAAK,OAAOD,QAG1D,EAqCeE,EApCG,SAACC,GACf,IAAMvE,EAAYwE,IAAOD,EAAMvE,WAAWyE,OAAO,cAC3CxE,EAAUuE,IAAOD,EAAMtE,SAASwE,OAAO,cAEvCC,EAAa,MAEfC,EAAaC,KAAKC,MAAQ,IACxBC,EAAY,IAAIF,KAAK5E,GAAW+E,UAAY,IAC5CC,EAAU,IAAIJ,KAAK3E,GAAS8E,UAAY,IACxCE,EAAWD,EAAUF,EACrBI,EAAgBF,EAAUL,EAChCpC,QAAQC,IAAI0C,GAMd,OACE,qBAAKhE,UAAU,kBAAiB,SAC5B,cAAC,IAAoB,2BAPN,CACnBiE,WAAW,EACXC,KAAM,IACNC,YAAa,KAKW,IACdC,OAAQ,CAAC,UAAW,UAAW,WAC/BC,WAAY,CAACT,EAjBN,MAiB4B,GACnCG,SAAUA,EACVO,qBAAuBN,EAAc,SAEtC,gBAvBQb,EAuBNoB,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAK,OACjB,sBAAMC,MAAO,CAACD,SAAO,SAChBvB,EAAW,QAzBXE,EAyB2BY,EAAWQ,EAzB7BpB,EAAOK,EAAc,KA0B5B,MAKvB,ECxBekB,EAlBS,SAACrB,GACvB,OACE,0BAASrD,UAAU,OAAM,UACrB,cAAC,EAAG,IACJ,+BAAI,iBAAeqD,EAAMsB,YACzB,qBAAK3E,UAAU,gBACf,sBAAKA,UAAU,mBAAkB,UAC7B,6BAAI,2BACJ,cAAC,EAAS,CAAClB,UAAauE,EAAMvE,UAAWC,QAAWsE,EAAMtE,aAE9D,sBAAKiB,UAAU,eAAc,UACzB,uBAAOoC,QAAU,eAAc,SAAC,6BAChC,wBAAQpE,KAAK,eAAekE,KAAK,SAASc,QAASK,EAAML,QAAQ,SAAC,aAI9E,ECGe4B,EAnBM,SAACvB,GAEpB,OACM,0BAASrD,UAAU,OAAM,UACrB,cAAC,EAAG,IACJ,qBAAIA,UAAU,eAAc,UAAC,iBAAeqD,EAAMsB,YAClD,qBAAK3E,UAAU,gBACf,sBAAKA,UAAU,mBAAkB,UAC7B,6BAAI,kCACJ,cAAC,EAAS,CAAClB,UAAauE,EAAMvE,UAAWC,QAAWsE,EAAMtE,aAE9D,sBAAKiB,UAAU,eAAc,UACzB,uBAAOoC,QAAU,eAAc,SAAC,2BAChC,wBAAQpE,KAAK,eAAekE,KAAK,SAASc,QAASK,EAAML,QAAQ,SAAC,aAIlF,ECaeI,EA9BG,SAACC,GAcjB,OACE,qBAAKrD,UAAU,kBAAiB,SAC5B,cAAC,IAAoB,2BARN,CACfiE,WAAW,EACXC,KAAM,IACNC,YAAa,KAMO,IACdC,OAAO,UAAS,SAEjB,gBAAEI,EAAK,EAALA,MAAK,OACJ,sBAAMC,MAAO,CAACD,SAAO,UACLnB,EAAMwB,QAnB1B,qBAAK7E,UAAU,oBAAmB,SAC9B,qBAAKA,UAAU,YAAW,SAAC,+BAAOqD,EAAMwB,gBAmBjC,MAKvB,ECLeC,EAvBI,SAACzB,GAChB,OACI,sBAAKrD,UAAU,eAAc,UACzB,cAAC,EAAG,IACJ,0BAASA,UAAU,OAAM,UACzB,+BAAI,iBAAeqD,EAAMsB,YACzB,qBAAK3E,UAAU,gBACf,sBAAKA,UAAU,mBAAkB,UAC7B,6BAAI,8BACJ,sBAAKA,UAAU,eAAc,UACzB,cAAC+E,EAAc,CAACjG,UAAauE,EAAMvE,UAAWC,QAAWsE,EAAMtE,UACnE,+BAAM,gBAGV,sBAAKiB,UAAU,eAAc,UACzB,uBAAOoC,QAAU,eAAc,SAAC,6BAChC,wBAAQpE,KAAK,eAAekE,KAAK,SAASc,QAASK,EAAML,QAAQ,SAAC,gBAKlF,ECHegC,EApBE,SAAC3B,GAChB,OACE,sBAAKrD,UAAU,eAAc,UACzB,cAAC,EAAG,IACJ,0BAASA,UAAU,OAAM,UACzB,+BAAI,iBAAeqD,EAAMsB,YACzB,qBAAK3E,UAAU,gBACf,sBAAKA,UAAU,mBAAkB,UAC7B,6BAAI,UACJ,cAAC+E,EAAc,CAACF,QAAWxB,EAAMwB,aAErC,sBAAK7E,UAAU,eAAc,UACzB,uBAAOoC,QAAU,eAAc,SAAC,6BAChC,wBAAQpE,KAAK,eAAekE,KAAK,SAASc,QAASK,EAAML,QAAQ,SAAC,gBAK9E,ECmLeiC,EA1LF,WACX,IAAM7E,EAAWC,cACXhC,EAAQuE,aAAY,SAACzD,GAAK,OAAKA,EAAMd,KAAK,IAC1CsG,EAAW/B,aAAY,SAACzD,GAAK,OAAKA,EAAMjB,IAAI,IAC5CW,EAAiB+D,aAAY,SAACzD,GAAK,OAAKA,EAAMN,cAAc,IAC5DL,EAAgBoE,aAAY,SAACzD,GAAK,OAAKA,EAAMX,aAAa,IAC1DD,EAAkBqE,aAAY,SAACzD,GAAK,OAAKA,EAAMZ,eAAe,IAC9DD,EAAYsE,aAAY,SAACzD,GAAK,OAAKA,EAAMb,SAAS,IAClDF,EAAQwE,aAAY,SAACzD,GAAK,OAAKA,EAAMf,KAAK,IAC1CD,EAAQyE,aAAY,SAACzD,GAAK,OAAKA,EAAMhB,KAAK,IAC1CQ,EAAaiE,aAAY,SAACzD,GAAK,OAAKA,EAAMR,UAAU,IACpDD,EAAWkE,aAAY,SAACzD,GAAK,OAAKA,EAAMT,QAAQ,IACtD,EAA4B4B,oBAAS,GAAK,mBAAnC4E,EAAQ,KAAEC,EAAO,KAEpB1B,EAAa,IAAIC,KACrBD,EAAaH,IAAOG,GAAYF,OAAO,cACvC,IAAMrF,ER3BkC,SAEV,EAAD,kCQyBhBkH,CAAiBjH,EAAOC,GAC/BiH,EC3BR,SAA4BxG,GACxB,IAAIyG,EAAY,EACZC,EAAa,EACbC,EAAe,KACfC,EAAa,EACXC,EAAe7G,EAAeiE,OACpC,OAAqB,IAAjB4C,IAGJ7G,EAAe8G,SAAQ,SAAAC,GAErB,GADAN,GAAahC,IAAOsC,EAAK7G,SAAS8G,KAAKD,EAAK9G,UAAW,QACnC,MAAhB0G,EAAqB,CACvB,IAAMM,EAAWxC,IAAOkC,GAAcK,KAAKD,EAAK9G,UAAW,SAAS,GAChEiH,KAAKC,IAAIF,GAAY,MACvBP,GAAcQ,KAAKC,IAAI1C,IAAOsC,EAAK9G,WAAW+G,KAAKL,EAAc,SACjEC,GAAc,EAElB,MACED,EAAelC,IAAOsC,EAAK9G,UAE/B,IAGM,CAACR,UAFWyH,KAAKE,MAAMX,EAAUI,GAErBrH,MADH0H,KAAKE,MAAMV,EAAWE,IAEzC,CDGqBS,CAAmBrH,GAChCsH,ECFR,SAAyB5H,EAAiBC,EAAeK,EAAgBR,EAAOC,GAC5E,IACIQ,EACAC,EAFAqH,EAAa,KAGb3C,EAAa,IAAIC,KAErB,GADAD,EAAaH,IAAOG,GAAYF,SAC5BhF,GAAoBC,EAsBpB,OAAO,EArBPK,EAAe8G,SAAQ,SAAAC,IACF,OAAfQ,GAEKA,EAAaR,EAAK9G,aADzBsH,EAAaR,EAAK9G,UAItB,IACA,IAAMgH,EAAWxC,IAAOG,GAAYoC,KAAKO,EAAY,SACrD,GAAG/H,GAASC,EACV,GAAIwH,EAAW,EAAE,CACf,IAAMO,EAAqB/C,IAAO8C,GAAYE,IAAKR,EAAW,UAC9DhH,EAAYwE,IAAO+C,GAAoBC,IAAIjI,EAAO,QAClDU,EAAUuE,IAAO+C,GAAoBC,IAAIhI,EAAW,OACtD,MACE8H,EAAa9C,IAAO8C,GAAY7C,SAChCzE,EAAYwE,IAAO8C,GAAYE,IAAIjI,EAAO,QAC1CU,EAAUuE,IAAOxE,GAAWwH,IAAIhI,EAAW,QAG/C,MAAO,CAACQ,YAAWC,UAIvB,CD5BmBwH,CAAgBhI,EAAiBC,EAAeK,EAAgBR,EAAOC,GACtFkI,EAAiBlD,IAAO/E,GAAiBkI,SAASpI,EAAO,QACzDqI,EAAO,iDAAG,WAAOxI,EAAMmH,EAAYc,GAAY,yGAC5BjI,EAAK,KAAD,EAArBwE,EAAQ,OACdtC,EACEV,EAAY,CACVnB,gBAAiBmE,EAASnE,gBAC1BC,cAAekE,EAASlE,cACxBE,SAAUgE,EAAShE,SACnBC,WAAY+D,EAAS/D,WACrBE,eAAgB6D,EAAS7D,kBAGzBwG,IACIhH,EAAQgH,EAAWhH,MACnBC,EAAY+G,EAAW/G,UAC7B8B,EACEZ,EAAS,CACPnB,MAAOA,EACPC,UAAWA,MAIb6H,IACF9E,QAAQC,IAAI6E,GACNrH,EAAYwE,IAAO6C,EAAarH,WAAWyE,OAAO,cAClDxE,EAAUuE,IAAO6C,EAAapH,SAASwE,OAAO,cACpDnD,EACEX,EAAa,CACXlB,gBAAiBO,EACjBN,cAAeO,KAGnBsC,QAAQC,IAAI/C,EAAiBC,GAC7BmI,EAAe7H,EAAWC,IAE5BoG,GAAQ,IACJ7B,IAAO/E,GAAiBgF,OAAO,eAAiBE,GAAcH,IAAO/E,GAAiBgF,OAAO,cAAgBE,IAAe9E,IAC9HyB,EACET,EAAY,CACVjB,UAAU,KAGf,2CACF,gBA1CY,0CA4CPiI,EAAc,iDAAG,WAAO7H,EAAWC,GAAO,2EAC9C+B,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,mBAAmB,CAC3D7C,QAAOW,YAAWC,UAASV,QAAOC,aAClC,CACAmE,QAAS,CAAC,cAAgB,UAAD,OAAYrE,MACrC,2CACH,gBANmB,wCAwBdwI,EAAiB,iDAAG,WAAOrI,EAAiBC,GAAa,iFAK3D,OAJIqI,EAAM/F,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,sBAAsB,CAC1E7C,QAAOI,kBAAiBC,iBACxB,CACAiE,QAAS,CAAC,cAAgB,UAAD,OAAYrE,MACrC,kBACKyI,GAAI,2CACZ,gBAPsB,wCAQnBC,EAAa,iDAAG,yGAChBxD,IAAO/E,GAAiBgF,OAAO,eAAiBE,EAAU,iBAGzC,OAFbsD,EAAazD,IAAOG,GAAY6C,IAAI,OAAQhI,GAAWiF,OAAO,cAC9DyD,EAASJ,EAAkBnD,EAAYsD,GAC7C1F,QAAQC,IAAI0F,GAAO,SACIA,EAAM,OAAvBC,EAAQ,OACd7G,EACET,EAAY,CACVjB,SAAUuI,EAAS9F,KAAKzC,YAG5B0B,EACER,EAAc,CACZjB,WAAYsI,EAAS9F,KAAKxC,cAE7B,wBAE+D,OAA1DqI,EAASJ,EAAkBrI,EAAiBC,GAAc,UACzCwI,EAAM,QAAvBC,EAAQ,OACd7G,EACET,EAAY,CACVjB,SAAUuI,EAAS9F,KAAKzC,YAG5B0B,EACER,EAAc,CACZjB,WAAYsI,EAAS9F,KAAKxC,cAE7B,4CAEJ,kBA9BkB,mCAgCbuI,EAAW,iDAAG,8FACd1I,GAAiBiF,GACbsD,EAAazD,IAAOG,GAAY6C,IAAI,OAAQhI,GAAWiF,OAAO,cACpEnD,EACEb,EAAU,CACRV,eAAe,GAAD,mBAAMA,GAAc,CAChC,CAACC,UAAWP,EAAiBQ,QAASgI,QAI5C3G,EACER,EAAc,CACZjB,YAAY,OAIhByB,EACEb,EAAU,CACRV,eAAe,GAAD,mBAAMA,GAAc,CAChC,CAACC,UAAWP,EAAiBQ,QAASP,QAI5C4B,EACER,EAAc,CACZjB,YAAY,MAGjB,2CACF,kBA7BgB,mCA8BjBwI,qBAAU,WACRT,EAAQxI,EAAKmH,EAAYc,EAC3B,GAAE,IASF9E,QAAQC,IAAI5C,EAAUC,GActB,OAZa,SAACA,EAAYD,EAAUwG,GAClC,OAAKvG,GAAeD,GAAawG,EAEvBxG,EACD,cAAC,EAAU,CAACiG,SAAYA,EAAU3B,QAAW8D,EAAe/H,QAAWR,EAAiBO,UAAa2E,IACpGyB,EACD,cAAC,EAAQ,CAACP,SAAYA,EAAU3B,QAAW,KAAM6B,QAAU,2BAE3D,cAAC,EAAY,CAACF,SAAYA,EAAU3B,QAAWkE,EAAanI,QAAWP,EAAeM,UAAaP,IANnG,cAAC,EAAe,CAACF,MAASA,EAAOsG,SAAYA,EAAU5F,QAAWR,EAAiBO,UAAa0H,EAAgBxD,QAAW8D,GAQtI,CAEOM,CAAKzI,EAAYD,EAAUwG,EAElC,EElGemC,MA1Ff,WACI,IAAMnH,EAAWC,cACXC,EAAWC,cACjB,EAA8BC,oBAAS,GAAM,mBAAtCE,EAAO,KAAEC,EAAU,KAE1B,EAAgCH,mBAAS,IAAG,mBACrB,aAyBtB,OAzBsB,kCAAvB,WAAwBK,GAAQ,IAAF,mFAGI,OAF9BF,GAAW,GACPtC,EAAQwC,EAAOxC,MACf0C,EAAWF,EAAOE,SAAQ,SACPC,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,eAAc,CAC3E7C,QAAO0C,aACR,KAAD,EAFY,OAARyG,EAAQ,gBAGKA,EAAQ,QAArBpJ,EAAI,SAENkC,EACIlB,EAAS,CACPhB,KAAMA,EAAKiD,KAAKjD,KAAK0C,SACrBzC,MAAOD,EAAKiD,KAAKjD,KAAKC,MACtBC,MAAOF,EAAKiD,KAAKC,YACjB/C,MAAOH,EAAKiD,KAAKjD,KAAKG,MACtBC,UAAWJ,EAAKiD,KAAK7C,UACrBC,gBAAiBL,EAAKiD,KAAKjD,KAAKK,gBAChCC,cAAeN,EAAKiD,KAAKjD,KAAKM,cAC9BK,eAAgBX,EAAKiD,KAAKjD,KAAKW,eAC/BF,WAAYT,EAAKiD,KAAKjD,KAAKS,WAC3BD,SAAUR,EAAKiD,KAAKjD,KAAKQ,YAInCwB,EAAS,SAAQ,6CACpB,sBA1Bc,KAAa,KA2B5B,IAAMqH,EAAU/G,EAAU,cAACe,EAAO,IAC9B,0BAASvB,UAAU,gBAAe,UAC9B,6BAAI,YACJ,cAAC,IAAI,CACDU,SA/BiC,SACrB,GAAD,gCA+BXc,SAAY,SAAAb,GACR,IAAMc,EAAQ,CAAC,EAOf,OANKd,EAAOxC,QACRsD,EAAOtD,MAAQ,YAEdwC,EAAOE,WACRY,EAAOZ,SAAW,YAEfY,CACX,EACAE,OAAU,gBAAEC,EAAY,EAAZA,aAAoBC,GAAF,EAAJC,KAAgB,EAAVD,YAAoB,EAARE,SAAgB,EAANpB,OAAM,OACxD,uBAAMD,SAAUkB,EAAa,UACzB,cAAC,IAAK,CAAC5D,KAAK,QAAO,SACd,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACd,sBAAKjC,UAAU,cAAa,UACxB,iDAAWgC,GAAK,IAAEE,KAAK,QAAQC,UAAQ,KACvC,uBAAOC,QAAQ,QAAQpC,UAAU,cAAa,SAC1C,uBAAMA,UAAU,aAAY,UAAC,QAAK,gCAAO,WAE5CiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGV,cAAC,IAAK,CAACrE,KAAK,WAAU,SACjB,gBAAEgE,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,OACV,sBAAKjC,UAAU,iBAAgB,UAC3B,iDAAWgC,GAAK,IAAEE,KAAM,WAAWC,UAAQ,KAC3C,uBAAOC,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,WAAQ,gCAAO,WAE/CiC,EAAKI,OAASJ,EAAKK,SAAW,sBAAMtC,UAAU,QAAO,SAAEiC,EAAKI,UAC3D,IAGd,sBAAKrC,UAAU,cAAa,UACxB,uBAAOkC,KAAK,WAAWW,GAAG,WAAW7E,KAAK,WAC1C,uBAAOoE,QAAQ,SAAQ,SAAC,mBAE5B,wBAAQF,KAAK,SAASK,SAAUV,EAAW,SAAC,aACzC,IAIf,uBACA,sBAAK7B,UAAU,UAAS,UACpB,+BAAM,SACN,cAAC,IAAI,CAAC+C,GAAG,UAAS,SAAC,iCAI/B,OAAOwE,CACX,E,QCtFeC,EAVA,WACX,IAAMC,GAAO,IAAI/D,MAAOgE,cAM1B,OAJE,iCACE,iCAAM,QAAQD,EAAK,IAAC,mBAAGE,KAAK,mBAAmBC,OAAO,SAAQ,SAAC,sBAIrE,ECgJeC,EA/IC,WACd,IAAM3H,EAAWC,cACXC,EAAWC,cACXsE,EAAW/B,aAAY,SAACzD,GAAK,OAAKA,EAAMjB,IAAI,IAC5CM,EAAgBoE,aAAY,SAACzD,GAAK,OAAKA,EAAMX,aAAa,IAC1DD,EAAkBqE,aAAY,SAACzD,GAAK,OAAKA,EAAMZ,eAAe,IAC9DH,EAAQwE,aAAY,SAACzD,GAAK,OAAKA,EAAMf,KAAK,IAC1CD,EAAQyE,aAAY,SAACzD,GAAK,OAAKA,EAAMhB,KAAK,IAEhD,EAAwBmC,oBAAS,GAAM,mBAAhCwH,EAAI,KAAEC,EAAO,KACpB,EAA+BzH,oBAAS,GAAM,mBAAvC0H,EAAS,KAAEC,EAAS,KAC3B,EAAgD3H,oBAAS,GAAM,mBAAxD4H,EAAkB,KAAEC,EAAiB,KAC5C,EAAwC7H,mBAAS,IAAG,mBAA7C8H,EAAY,KAAEC,EAAe,KACpC,EAAsC/H,mBAAS,IAAG,mBAA3CgI,EAAW,KAAEC,EAAc,KAClC,EAAsCjI,mBAAS,IAAG,mBAA3CkI,EAAW,KAClB,GADkC,KACelI,mBAAS,KAAG,mBAAtDmI,EAAkB,KAQzB,GAR6C,KAQrBnI,mBAAS,CAC/B,CACExB,UAAW,IAAI4E,KAAKJ,IAAO/E,GAAiBgF,OAAO,eACnDxE,QAAS,IAAI2E,KAAKJ,IAAO9E,GAAe+E,OAAO,mBAEjD,mBALKqC,EAAI,KASL8C,GATc,KASM,SAACC,GACzBJ,EAAeI,EACjB,GAUMC,EAAgB,WACpBX,GAAWD,EACb,EAuBMT,EACJ,sBAAKvH,UAAU,eAAc,UAC3B,cAAC,EAAG,IACJ,0BAASA,UAAU,UAAS,UAC1B,qBAAIA,UAAU,eAAc,UAAC,SAAO2E,EAAS,OAC7C,6BAAI,gCACJ,cAAC,YAAS,CACRkE,oBAAsB,EACtBC,yBAA2B,EAC3BC,OAAUnD,IAEZ,sBAAK5F,UAAU,mBAAkB,UAC/B,wBAAQgD,QAxCM,WACpB+E,GAASD,EACX,EAsCuC,SAAC,aAC/BA,GACD,sBAAK9H,UAAU,yBAAwB,UACrC,qBAAKA,UAAU,iBAAgB,SAC7B,iCAAQ,0BAEV,sBAAKA,UAAU,iBAAgB,UAC7B,wBAAQgD,QAzCO,WACzBmF,GAAmBD,EACrB,EAuCgD,SAAC,oBACpCA,GACC,uBAAMlI,UAAU,kBAAiB,UAC/B,sBAAKA,UAAU,iBAAgB,UAC7B,uBAAOkC,KAAO,WAAW8G,MAAOV,EAAaW,SAAUP,IACvD,uBAAOtG,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,eAAY,gCAAO,cAGtD,sBAAKA,UAAU,iBAAgB,UAC7B,uBAAOkC,KAAO,WAAW8G,MAAOR,EAAaS,SAAUP,IACvD,uBAAOtG,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,eAAY,gCAAO,cAGtD,sBAAKA,UAAU,iBAAgB,UAC7B,uBAAOkC,KAAO,WAAW8G,MAAOP,EAAoBQ,SAAUP,IAC9D,uBAAOtG,QAAQ,WAAWpC,UAAU,cAAa,SAC7C,uBAAMA,UAAU,aAAY,UAAC,eAAY,gCAAO,cAGtD,wBAAQkC,KAAK,SAAQ,SAAC,iBAI5B,qBAAKlC,UAAU,iBAAgB,SAC7B,wBAAQgD,QAAS4F,EAAc,SAAC,2BAKrCZ,GACD,qBAAKhI,UAAU,YAAW,SACxB,sBAAKA,UAAU,cAAa,UAC1B,6BAAI,2DACJ,uBAAMU,SAzEM,WAChB0H,IAAiBjK,IACnBkD,QAAQC,IAAI,QACZR,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,oBAAoB,CAC5D7C,SACA,CACAsE,QAAS,CAAC,cAAgB,UAAD,OAAYrE,MAEvCgC,EACEd,KAEFY,EAAS,KAEb,EA4DyCF,UAAU,iBAAgB,UACvD,sBAAKA,UAAU,cAAa,UAC1B,uBAAOkC,KAAK,QAAQ8G,MAAOZ,EAAca,SAhGnC,SAAC9K,GACnBkK,EAAgBlK,EAAMyJ,OAAOoB,MAC/B,IA+Fc,uBAAO5G,QAAQ,QAAQpC,UAAU,cAAa,SAC5C,sBAAMA,UAAU,aAAY,SAAC,eAGjC,wBAAQkC,KAAK,SAAQ,SAAC,WACtB,wBAAQc,QAAS4F,EAAc,SAAC,sBAMxC,cAAC,EAAM,OAGX,OAAOrB,CACT,ECpGe2B,MA7Cf,WACE,MAAwB5I,mBAAS,CAC/B,CACExB,UAAW,IAAI4E,KACf3E,QAAS,IAAI2E,KAAK,IAClByF,IAAK,eAEP,mBANKvD,EAAI,KAAEwD,EAAO,KAOdvK,EAAiB+D,aAAY,SAACzD,GAAK,OAAKA,EAAMN,cAAc,IAkClE,OA7BE,sBAAKmB,UAAU,eAAc,UAC3B,cAAC,EAAG,IACJ,sBAAKA,UAAU,iBAAgB,UAC7B,6BAAI,2CACJ,cAAC,YAAS,CACN6I,oBAAoB,EACpBC,yBAAyB,EACzBO,aAAe,EACfJ,SAAU,SAAAK,GAAI,OAAIF,EAAQ,CAACE,EAAKC,WAAW,EAC3CC,2BAA2B,EAC3BT,OAAQnD,OAId,sBAAK5F,UAAU,gBAAe,UAC5B,6BAAI,sCACJ,qCACE,uBAAOoC,QAAU,UAAS,SAAC,+BAC3B,yBAAQpE,KAAK,UAAUgC,UAAU,UAAS,UACxC,wBAAQuC,UAAQ,EAACkH,UAAQ,WAAC,kBACzB5K,EAAe6K,KAAI,SAAC9D,EAAMuD,GAAG,OAAK,wBAAQH,MAAOG,EAAI,mBAAsB7F,IAAOsC,EAAK9G,WAAWyE,OAAO,gBAAe,cAAMD,IAAOsC,EAAK7G,SAASwE,OAAO,kBAA/FqC,EAAOuD,EAAmH,UAI1L,wBAAQnG,QA5BO,WAErB,EA0BoC,SAAC,cAEjC,cAAC,EAAM,MAIb,ECqDe2G,EA3FM,WACnB,IAAMzJ,EAAWC,cACXC,EAAWC,cACjB,EAAwBC,mBAAS,CAC/B,CACExB,UAAW,IAAI4E,KACf3E,QAAS,IAAI2E,KACbyF,IAAK,eAEP,mBANKvD,EAAI,KAAEwD,EAAO,KAOpB,EAAgC9I,oBAAS,GAAM,mBAAxCsJ,EAAS,KAAEnJ,EAAU,KACtBiC,EAAWE,aAAY,SAACzD,GAAK,OAAKA,EAAMN,cAAc,IACtDV,EAAQyE,aAAY,SAACzD,GAAK,OAAKA,EAAMhB,KAAK,IAC1CC,EAAQwE,aAAY,SAACzD,GAAK,OAAKA,EAAMf,KAAK,IA8B1CyL,EAAW,SAACC,GAChB1J,EACEb,EAAU,CACRV,eAAgBiL,IAGtB,EAEA3C,qBAAU,YApCO,SAACvB,GAChB,GAAIA,EAAK,GAAG7G,SACI6G,EAAK,GAAG9G,UAAUiL,WACpBnE,EAAK,GAAG7G,QAAQgL,UACX,CACf,IAAMjL,EAAYwE,IAAOsC,EAAK,GAAG9G,WAAWyE,SACtCxE,EAAUuE,IAAOsC,EAAK,GAAG7G,SAASwE,SACxC,GAAuB,GAAnBb,EAASI,OAAY,CACvB,IAAMgH,EAAQpH,EAASgH,KAAI,SAASM,GAAS,OAAOA,CAAQ,IACxDC,EAAS,CACXnL,UAAWA,EACXC,QAASA,EACTC,MAAO0D,EAASI,QAElBgH,EAAMI,KAAKD,GACXJ,EAASC,EACX,MAOED,EADY,CALC,CACX/K,UAAWA,EACXC,QAASA,EACTC,MAAO,IAKb,CAEJ,CAUEmL,CAASvE,EACX,GAAE,CAACA,IACH,IAAMwE,EAAW,iDAAG,wFACF,OAAhB3J,GAAW,GAAK,kBAEMK,IAAMC,KAAK,GAAD,OAAIC,0CAA4B,iBAAgB,CAC1E7C,QACAuE,YACE,CACAD,QAAS,CAAC,cAAgB,UAAD,OAAYrE,MAErC,KAAD,EANM,QAQL8B,EAAS,SACV,gDAELmB,QAAQC,IAAI,EAAD,IAAK,yDAEnB,kBAhBgB,mCAkCjB,OAjBAD,QAAQC,IAAIsE,GACEgE,EAAY,cAACrI,EAAO,IAC5B,0BAASvB,UAAU,gBAAe,UAChC,6BAAI,oCACJ,4BAAG,sGACH,cAAC,YAAS,CACR6I,oBAAoB,EACpBC,yBAAyB,EACzBO,aAAe,EACfJ,SAAU,SAAAK,GAAI,OAAIF,EAAQ,CAACE,EAAKC,WAAW,EAC3CC,2BAA2B,EAC3BT,OAAQnD,IAGV,wBAAQ1D,KAAK,SAASlC,UAAU,aAAagD,QAASoH,EAAY,SAAC,WAI7E,E,iBCpFeC,GAdF,WACT,IAAMC,EAAaC,SAASC,eAAe,YAC1B,IAAIC,IAASH,EAAY,CACxCI,QAAS,CAACC,KACVC,YAAa,uBACbC,UAAW,CACT,CAAEC,MAAO,cACT,CAAEA,MAAO,iBAIJnJ,QACb,ECsBeoJ,OA5Bf,WACI,IAAMC,EAASC,QAAQrI,aAAY,SAACzD,GAAK,OAAKA,EAAMf,KAAK,KAWzD,OAVmBwE,aAAY,SAACzD,GAAK,OAAKA,EAAMN,cAAc,IAW1D,cAAC,IAAa,UACV,eAAC,IAAM,WACH,cAAC,IAAK,CAACqM,KAAK,gBAAgBlB,QAAU,cAAC,EAAY,MACnD,cAAC,IAAK,CAACkB,KAAK,UAAUlB,QAAS,cAAC,EAAU,MAC1C,cAAC,IAAK,CAACkB,KAAK,IAAIlB,QAAS,cAAC,EAAK,MAC/B,cAAC,IAAK,CAACkB,KAAK,WAAWlB,QAAUgB,EAAS,cAAC,EAAO,IAAM,cAAC,IAAQ,CAACjI,GAAG,QACrE,cAAC,IAAK,CAACmI,KAAK,cAAclB,QAASgB,EAAS,cAAC,EAAU,IAAM,cAAC,IAAQ,CAACjI,GAAG,QAC1E,cAAC,IAAK,CAACmI,KAAK,QAAQlB,QAAUgB,EAAS,cAAC,EAAI,IAAM,cAAC,IAAQ,CAACjI,GAAG,QAC/D,cAAC,IAAK,CAACmI,KAAK,SAASlB,QAAU,cAAC,GAAI,UAIpD,E,wCCZMmB,GAAgB,CAAEhC,IAAK,OAAQiC,aAASC,QAAS,GACjDC,GAAmBC,aAAeJ,GAAeK,GACjDC,GAAQC,YAAe,CAC3BC,QAASL,GACTM,WAAY,SAACC,GAAoB,OAC/BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,QAE5D,IAGOC,IAASC,WAAWhC,SAASC,eAAe,SACpD7I,OACH,cAAC,IAAM6K,WAAU,UACf,cAAC,IAAQ,CAACf,MAAOA,GAAM,SACrB,cAAC,KAAW,CAACjL,QAAS,KAAMiM,UAAWC,aAAajB,IAAO,SACzD,cAAC,GAAG,U","file":"static/js/main.a1b621db.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    user: null,\n    email: null,\n    token : null,\n    cycle: null,\n    avgLength: null,\n    periodStartDate: null,\n    periodEndDate: null,\n    daysTillPeriod: null,\n    canBleed: false,\n    isBleeding: false, \n    daysleft: null,\n    previousPeriod: [{\n        startDate: null,\n        endDate: null,\n        count: null\n    }],\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setLogin: (state, action) =>{\n            state.user = action.payload.user;\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate\n            state.daysTillPeriod = action.payload.cycle;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setLogout: (state) =>{\n            state.user = null;\n            state.token = null;\n            state.cycle = null;\n            state.daysTillPeriod = null;\n            state.periodStartDate = null;\n            state.periodEndDate = null;\n            state.daysTillPeriod = null;\n            state.canBleed = false;\n            state.isBleeding = false;\n            state.previousPeriod = null;\n        },\n        setPeriod: (state, action) =>{\n            state.previousPeriod = action.payload.previousPeriod\n        },\n        setCycle: (state, action) =>{\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n        },\n        setNewPeriod: (state, action) => {\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n        },\n        setUserInfo: (state, action) =>{\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setCanBleed: (state, action) =>{\n            state.canBleed = action.payload.canBleed;\n        },\n        setIsBleeding: (state, action) =>{\n            state.isBleeding = action.payload.isBleeding;\n        },\n        setDays: (state, action) =>{\n            state.daysleft = action.payload.daysleft;\n        }\n    }\n})\n\nexport const {setLogin, setLogout, setPeriod, setCycle, setNewPeriod, setUserInfo, setIsBleeding, setCanBleed, setDays} = authSlice.actions;\n\nexport const selectCurrentUser = (state) => state.auth.user\nexport const selectCurrentEmail = (state) => state.auth.email\nexport const selectCurrentToken = (state) => state.auth.token\n\nexport default authSlice.reducer;","import React from 'react'\n\nconst spinner = () => {\n  return (\n    <div className='loading'>\n      <div className='spinner'></div>\n    </div>\n  )\n}\n\nexport default spinner\n","import {Form, Field} from 'react-final-form';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios'\nimport { setLogin } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport Spinner from '../../components/Spinner';\n\nexport default function SignUp(){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [err, setErrMsg] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const onSubmit = async (values) =>{\n        let email = values.email\n        let username = values.username\n        let password = values.password\n        setLoading(true)\n        try{\n            const results = await axios.post(`${process.env.REACT_APP_APIURL}/register`,{\n                email, username, password\n            })\n            const result = await results\n            if (result){\n                const login = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n                    email, password\n            });\n            const user = await login\n            if (user){\n                dispatch(\n                    setLogin({\n                      user: user.data.user.username,\n                      email: user.data.user.email,\n                      token: user.data.accessToken,\n                      cycle: user.data.user.cycle,\n                      periodStartDate: user.data.user.periodStartDate,\n                      periodEndDate: user.data.user.periodEndDate,\n                      previousPeriod: user.data.user.previousPeriod,\n                    })\n                  );\n                  navigate('/AccountSetup')\n                }\n            }\n        }catch(err){\n            console.log(err)\n            setErrMsg(err)\n        }\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <h1>SignUp In</h1>\n            <Form\n             onSubmit={onSubmit}\n             validate = {values => {\n                const errors = {}\n                if (!values.email){\n                    errors.email = 'Required'\n                }\n                if (!values.username){\n                    errors.username = 'Required'\n                }\n                if (!values.password){\n                    errors.password = 'Required'\n                }\n                if (!values.passwordconfirm){\n                    errors.passwordconfirm = 'Required'\n                }else if (values.password !== values.passwordconfirm){\n                    errors.passwordconfirm = 'Must match'\n                }\n                return errors\n             }}\n             render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                <form onSubmit={handleSubmit}>\n                    <Field name='email' >\n                        {({input, meta}) => (\n                        <div className='email-input'>\n                            <input {...input} type= 'email' required/>\n                            <label htmlFor='email' className='login-lable'>\n                                <span className='login-span'>Email<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field name='username'>\n                        {({input, meta})=> (\n                        <div className='username-input'>\n                            <input {...input} type='text' required />\n                            <label htmlFor='username' className='login-lable'>\n                                <span className='login-span'>Username<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='password'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='password' className='login-lable'>\n                                <span className='login-span'>Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='passwordconfirm'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='passwordconfirm' className='login-lable'>\n                                <span className='login-span'>Confirm Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\n                </form>\n            )}\n            />\n        </section>\n    )\n    return content\n}\n","import {setUserInfo } from '../state';\nimport axios from \"axios\";\nimport { useDispatch } from 'react-redux';\n\nasync function useFetchUserInfo(email, token){\n    const dispatch = useDispatch();\n    const result = axios.post(`${process.env.REACT_APP_APIURL}/user/getuserinfo`,{\n      email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      }\n    )\n    const user = await result\n    if (user){\n        const userInfo = {\n          periodStartDate: user.data.user.periodStartDate,\n          avgLength: user.data.user.avgLength,\n          cycle: user.data.user.cycle,\n          periodEndDate: user.data.user.periodEndDate,\n          previousPeriod: user.data.user.previousPeriod,\n          canBleed: user.data.user.canBleed,\n          isBleeding: user.data.user.isBleeding\n        }\n      return(userInfo)\n    }\n    else{\n        return(null)\n    }\n}\n\nexport{useFetchUserInfo}","import {useRef} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CiLogout } from 'react-icons/ci'\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nconst Nav = () => {\n    const dispatch = useDispatch();\n    const cycle = useSelector((state) => state.cycle);\n    const avgLength = useSelector((state) => state.avgLength)\n    const previousPeriod = useSelector((state) => state.previousPeriod)\n\n    const logout = () =>{\n        dispatch(\n            setLogout()\n        )\n    }\n\n  return (\n    <nav className='nav'>\n        <div className='logo'>\n            placeholder\n        </div>\n        <input id='mobile-nav-toggle' type='checkbox' /> \n        <label className='mobile-nav-container' htmlFor='mobile-nav-toggle'>\n            <div className='mobile-nav' id ='mobile-nav'></div>\n        </label>\n        <ul className='nav-links' id='nav-links'>\n            <li className='stats'>\n                <h3>Information at a Glance</h3>\n                <span>Cycle Lenght: {cycle} days</span><br/>\n                <span>Average Length: {avgLength} days </span><br />\n                <span>Periods Logged: {previousPeriod.length}</span>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/home'>\n                    Home\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/profile'>\n                    Profile\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/periodinfo'>\n                    Period Info\n                </NavLink>\n            </li>\n            <li className='logout'>\n                <button onClick={logout}>\n                    <CiLogout></CiLogout>\n                </button>\n            </li>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer} from \"react-countdown-circle-timer\";\n\n\nconst renderTime = (dimension, time) =>{\n    return(\n        <div className='countdown-wrapper'>\n            <div className='days-left'><span>{time}&nbsp;{dimension}</span></div>\n        </div>\n    )\n}\nconst Countdown = (props) => {\n    const startDate = Moment(props.startDate).format('YYYY-MM-DD')\n    const endDate = Moment(props.endDate).format('YYYY-MM-DD')\n    const getTime = (time) =>(time / daySeconds) | 0;\n    const daySeconds = 86400\n    const fiveDays = 432000\n    let todaysDate = Date.now() / 1000;\n    const startTime = new Date(startDate).getTime() / 1000;\n    const endTime = new Date(endDate).getTime() / 1000;\n    const duration = endTime - startTime;\n    const remainingTime = endTime - todaysDate;\n    console.log(remainingTime)\n    const timerProps = {\n    isPlaying: true,\n    size: 500,\n    strokeWidth: 10,\n    };\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors={['#EAE8FF', '#FF6947', '#FA2C00']}\n              colorsTime={[startTime , fiveDays, 0]}\n              duration={duration}\n              initialRemainingTime= {remainingTime}\n            >\n            {({elapsedTime, color}) => (\n                <span style={{color}}>\n                    {renderTime('days', getTime(duration - elapsedTime) )}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\n\nconst PeriodNotActive = (props) => {\n  return (\n    <section className=\"home\">\n        <Nav/>\n        <h1>Welcome back, {props.userName}</h1>\n        <div className=\"placeholder\"></div>\n        <div className=\"period-countdown\">\n            <h2>Your next period is in</h2>\n            <Countdown startDate = {props.startDate} endDate = {props.endDate}></Countdown>\n        </div>\n        <div className=\"check-period\">\n            <label htmlFor = 'check-period'>Has your period started?</label>\n            <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n        </div>\n    </section>\n  )\n}\n\nexport default PeriodNotActive\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\n\nconst PeriodActive = (props) => {\n\n  return (\n        <section className=\"home\">\n            <Nav />\n            <h1 className='welcome-text'>Welcome back, {props.userName}</h1>\n            <div className=\"placeholder\"></div>\n            <div className=\"period-countdown\">\n                <h2>Your period should be over in</h2>\n                <Countdown startDate = {props.startDate} endDate = {props.endDate}></Countdown>\n            </div>\n            <div className=\"check-period\">\n                <label htmlFor = 'check-period'>Has your period ended?</label>\n                <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n            </div>\n        </section>\n  )\n}\n\nexport default PeriodActive\n","import React from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst Countdown = (props) => {\n    const renderTime = (message) =>{\n        return(\n            <div className='countdown-wrapper'>\n                <div className='days-left'><span>{props.message}</span></div>\n            </div>\n        )\n    }\n    const timerProps = {\n        isPlaying: true,\n        size: 500,\n        strokeWidth: 10\n      }\n\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors='#EAE8FF'\n            >\n            {({color}) => (\n                <span style={{color}}>\n                    {renderTime(props.message)}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\n\nconst PeriodHere = (props) => {\n    return (\n        <div className='page-wrapper'>\n            <Nav />\n            <section className=\"home\">\n            <h1>Welcome back, {props.userName}</h1>\n            <div className=\"placeholder\"></div>\n            <div className=\"period-countdown\">\n                <h2>Your period might be here</h2>\n                <div className='inner-circle'>\n                    <BlankCountdown startDate = {props.startDate} endDate = {props.endDate}></BlankCountdown>\n                <span>Today</span>\n                </div>\n            </div>\n            <div className=\"check-period\">\n                <label htmlFor = 'check-period'>Has your period started?</label>\n                <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n            </div>\n            </section>\n        </div>\n      )\n}\n\nexport default PeriodHere\n","import Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nconst NeedInfo = (props) => {\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n        <section className=\"home\">\n        <h1>Welcome back, {props.userName}</h1>\n        <div className=\"placeholder\"></div>\n        <div className=\"period-countdown\">\n            <h2>Error</h2>\n            <BlankCountdown message = {props.message}></BlankCountdown>\n        </div>\n        <div className=\"check-period\">\n            <label htmlFor = 'check-period'>Has your period started?</label>\n            <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n        </div>\n        </section>\n    </div>\n  )\n}\n\nexport default NeedInfo\n\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from 'react-redux';\nimport { setCycle, setIsBleeding, setNewPeriod, setUserInfo, setCanBleed, setPeriod} from '../../state';\nimport Moment from 'moment';\nimport axios from \"axios\";\nimport { useFetchUserInfo } from \"../../hooks/fetchUserInfo\";\nimport { useAvgPeriodLength, useEstimateDate} from \"../../hooks/calcPeriodInfo\"\nimport PeriodNotActive from \"./PeriodNotActive\";\nimport PeriodActive from \"./PeriodActive\";\nimport PeriodHere from \"./PeriodHere\";\nimport NeedInfo from \"./NeedInfo\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const cycle = useSelector((state) => state.cycle)\n  const userName = useSelector((state) => state.user)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const avgLength = useSelector((state) => state.avgLength)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const isBleeding = useSelector((state) => state.isBleeding)\n  const canBleed = useSelector((state) => state.canBleed)\n  const [needInfo, setInfo] = useState(true)\n\n  let todaysDate = new Date()\n  todaysDate = Moment(todaysDate).format('YYYY-MM-DD')\n  const user = useFetchUserInfo(email, token)\n  const avgLengths = useAvgPeriodLength(previousPeriod)\n  const estimateDate = useEstimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength)\n  const cycleStartDate = Moment(periodStartDate).subtract(cycle, 'days')\n  const setUser = async (user, avgLengths, estimateDate) =>{\n    const userInfo = await user;\n    dispatch(\n      setUserInfo({\n        periodStartDate: userInfo.periodStartDate,\n        periodEndDate: userInfo.periodEndDate,\n        canBleed: userInfo.canBleed,\n        isBleeding: userInfo.isBleeding,\n        previousPeriod: userInfo.previousPeriod,\n      })\n    )\n    if (avgLengths){\n      const cycle = avgLengths.cycle;\n      const avgLength = avgLengths.avgLength\n      dispatch(\n        setCycle({\n          cycle: cycle,\n          avgLength: avgLength\n        })\n      )\n    }\n    if (estimateDate){\n      console.log(estimateDate)\n      const startDate = Moment(estimateDate.startDate).format('YYYY-MM-DD');\n      const endDate = Moment(estimateDate.endDate).format('YYYY-MM-DD');\n      dispatch(\n        setNewPeriod({\n          periodStartDate: startDate,\n          periodEndDate: endDate\n        })\n      )\n      console.log(periodStartDate, periodEndDate)\n      sendPeriodInfo(startDate, endDate)\n    }\n    setInfo(false)\n    if (Moment(periodStartDate).format('YYYY-MM-DD') == todaysDate || Moment(periodStartDate).format('YYYY-MM-DD') < todaysDate && !isBleeding){\n      dispatch(\n        setCanBleed({\n          canBleed: true\n        })\n      )\n    }\n  }\n\n  const sendPeriodInfo = async (startDate, endDate) =>{\n    axios.post(`${process.env.REACT_APP_APIURL}/user/addperiod`, {\n      email, startDate, endDate, cycle, avgLength\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n  \n  const sendPeriodStatus = async () => {\n    axios.post(`${process.env.REACT_APP_APIURL}/user/setperiodinfo`,{\n      email, isBleeding, canBleed\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\n  const sendPreviousPeriod = async () => {\n    axios.post(`${process.env.REACT_APP_APIURL}user/addpreviousperiod`, {\n      email, previousPeriod\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\n  const sendUpdatedPeriod = async (periodStartDate, periodEndDate) => {\n    const test =axios.post(`${process.env.REACT_APP_APIURL}/user/updateperiod`, {\n      email, periodStartDate, periodEndDate\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n    return test\n  }\nconst periodStarted = async () =>{\n  if (Moment(periodStartDate).format('YYYY-MM-DD') != todaysDate){\n    const newEndDate = Moment(todaysDate).add('days', avgLength).format('YYYY-MM-DD')\n    const update = sendUpdatedPeriod(todaysDate, newEndDate)\n    console.log(update)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n  }else{\n    const update = sendUpdatedPeriod(periodStartDate, periodEndDate)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n  }\n}\n\nconst periodEnded = async () =>{\n  if (periodEndDate != todaysDate){\n    const newEndDate = Moment(todaysDate).add('days', avgLength).format('YYYY-MM-DD')\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: newEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }else{\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: periodEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }\n}\nuseEffect(()=>{\n  setUser(user,avgLengths, estimateDate)\n},[])\n\n// useEffect(() =>{\n//   sendPeriodStatus()\n// },[periodStarted])\n\n// useEffect(() => {\n//   sendPreviousPeriod()\n// },[isBleeding])\nconsole.log(canBleed, isBleeding)\n// console.log(Moment(periodStartDate).format('YYYY-MM-DD') == todaysDate)\nconst home = (isBleeding, canBleed, needInfo) =>{\n  if (!isBleeding && !canBleed && !needInfo){\n    return <PeriodNotActive cycle = {cycle} userName = {userName} endDate = {periodStartDate} startDate = {cycleStartDate} onClick = {periodStarted} />\n  } else if(canBleed){\n    return <PeriodHere userName = {userName} onClick = {periodStarted} endDate = {periodStartDate} startDate = {todaysDate} />\n  } else if(needInfo){\n    return <NeedInfo userName = {userName} onClick = {null} message = 'More logs are required' />\n  }else{\n    return <PeriodActive userName = {userName} onClick = {periodEnded} endDate = {periodEndDate} startDate = {periodStartDate} />\n  }\n}\n\nreturn home(isBleeding, canBleed, needInfo)\n\n}\nexport default Home\n","import Moment from 'moment';\nimport { setCycle, setDays, setCanBleed} from '../state';\n\nfunction useAvgPeriodLength(previousPeriod){\n    let totalDays = 0\n    let totalCycle = 0\n    let oldStartDate = null;\n    let cycleCount = 0\n    const periodLogged = previousPeriod.length;\n    if (periodLogged === 1){\n        return (false)\n    }\n    previousPeriod.forEach(date => {\n      totalDays += Moment(date.endDate).diff(date.startDate, 'days')\n      if (oldStartDate != null){\n        const monthDif = Moment(oldStartDate).diff(date.startDate, 'month', true);\n        if (Math.abs(monthDif) < 1.5){\n          totalCycle += Math.abs(Moment(date.startDate).diff(oldStartDate, 'days'))\n          cycleCount += 1\n        }\n      }else{\n        oldStartDate = Moment(date.startDate);\n      }\n    })\n    const avgLength =(Math.round(totalDays/periodLogged))\n    const cycle = (Math.round(totalCycle/cycleCount))\n    return{avgLength, cycle}\n}\n\nfunction useEstimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength){\n    let lastPeriod = null\n    let startDate;\n    let endDate;\n    let todaysDate = new Date()\n    todaysDate = Moment(todaysDate).format()\n    if(!periodStartDate || !periodEndDate){\n        previousPeriod.forEach(date => {\n          if (lastPeriod === null){\n            lastPeriod = date.startDate\n          }else if(lastPeriod < date.startDate){\n            lastPeriod = date.startDate\n          }\n        })\n        const monthDif = Moment(todaysDate).diff(lastPeriod, 'month')\n        if(cycle && avgLength){\n          if( monthDif > 1){\n            const estimateLastPeriod = Moment(lastPeriod).add((monthDif), 'months')\n            startDate = Moment(estimateLastPeriod).add(cycle, 'days');\n            endDate = Moment(estimateLastPeriod).add(avgLength, 'days');\n          }else{\n            lastPeriod = Moment(lastPeriod).format()\n            startDate = Moment(lastPeriod).add(cycle, 'days');\n            endDate = Moment(startDate).add(avgLength, 'days')\n          }\n        }\n        return({startDate, endDate})\n      }else{\n        return(false)\n      }\n    }\n\n    // const daysTill = (isBleeding) =>{\n    //     let todaysDate = new Date()\n    //     todaysDate = Moment(todaysDate).format()\n    //     const dispatch = useDispatch();\n    //     let daysLeft;\n    //     if (isBleeding){\n    //       daysLeft = Moment(periodEndDate).diff(todaysDate, 'days')\n    //     }else{\n    //       daysLeft = Moment(periodStartDate).diff(todaysDate, 'days')\n    //     }\n    //     dispatch(\n    //         setDays({\n    //             daysLeft: daysLeft\n    //         })\n    //     )\n    //   }\n\nexport {useAvgPeriodLength, useEstimateDate}","import {Form, Field} from 'react-final-form';\nimport { Link, useResolvedPath } from 'react-router-dom';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../../state';\nimport Spinner from '../../components/Spinner';\nimport Waves from '../../components/Waves';\nimport { useSelector } from \"react-redux\";\nfunction Login(){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n\n    const [regError, setRegError] = useState(\"\");\n    async function onSubmit(values){\n        setLoading(true)\n        let email = values.email\n        let password = values.password\n        const loginTry = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n            email, password\n        });\n        const user = await loginTry\n        if (user){\n            dispatch(\n                setLogin({\n                  user: user.data.user.username,\n                  email: user.data.user.email,\n                  token: user.data.accessToken,\n                  cycle: user.data.user.cycle,\n                  avgLength: user.data.avgLength,\n                  periodStartDate: user.data.user.periodStartDate,\n                  periodEndDate: user.data.user.periodEndDate,\n                  previousPeriod: user.data.user.previousPeriod,\n                  isBleeding: user.data.user.isBleeding,\n                  canBleed: user.data.user.canBleed\n                })\n              );\n        };      \n        navigate('/home')\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <h1>Sign In</h1>\n            <Form\n                onSubmit={onSubmit}\n                validate = {values => {\n                    const errors= {}\n                    if (!values.email){\n                        errors.email = 'Required'\n                    }\n                    if (!values.password){\n                        errors.password = 'Required'\n                    }\n                    return errors\n                }}\n                render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                    <form onSubmit={handleSubmit}>\n                        <Field name='email'>\n                            {({input, meta})=> (\n                            <div className='email-input'>\n                                <input {...input} type='email' required />\n                                <label htmlFor='email' className='login-lable'>\n                                    <span className='login-span'>Email<small>*</small></span>\n                                </label>\n                                {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                            </div>\n                            )}\n                        </Field>\n                        <Field name='password'>\n                            {({input, meta}) => (\n                                <div className='password-input'>\n                                    <input {...input} type ='password' required></input>\n                                    <label htmlFor='password' className='login-lable'>\n                                        <span className='login-span'>Password<small>*</small></span>\n                                    </label>\n                                    {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                                </div>\n                            )}\n                        </Field>\n                        <div className='remember-me'>\n                            <input type='checkbox' id='remember' name='chkbox'></input>\n                            <label htmlFor='chkbox'>Remember Me</label>\n                        </div>\n                        <button type='submit' disabled={submitting}>Submit</button>\n                    </form>\n                )}\n            />\n            {/* <Link className='recover'>Forgot your username or password?</Link> */}\n            <hr></hr>\n            <div className='sign-up'>\n                <span>New?</span>\n                <Link to='/signup'>Create an account here</Link>\n            </div>\n        </section>\n    )\n    return content\n};\n\nexport default Login","import React from 'react'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n  const footer = (\n    <footer>\n      <span>&copy; {year} <a href='albertfriend.dev' target='_blank'>Albert Friend</a></span>\n    </footer>\n  )\n  return footer \n}\n\nexport default Footer\n","import {useState, useEffect} from 'react';\nimport Moment from 'moment';\nimport { DateRange } from 'react-date-range';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Nav from '../navbar/Nav'\nimport {useNavigate} from 'react-router-dom';\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport { useFetchUserInfo } from '../../hooks/fetchUserInfo';\nimport Footer from '../footer/Footer';\nconst Proflie = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  // const user = useFetchUserInfo(email, token)\n  const [open, setOpen] = useState(false);\n  const [deleteBox, setDelete] = useState(false);\n  const [showPasswordChange, setPasswordChange] = useState(false)\n  const [deletedEmail, setDeletedEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmPassword] = useState('');\n\n  const checkUserInfo = async (user) => {\n    if (!periodStartDate && !periodEndDate){\n      const userInfo = await(user)\n      console.log('test')\n    }\n  }\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(Moment(periodStartDate).format('MM-DD-YYYY')),\n      endDate: new Date(Moment(periodEndDate).format('MM-DD-YYYY')),\n    }\n  ])\n  const emailChange = (email) => {\n    setDeletedEmail(email.target.value)\n  }\n  const oldPasswordChange = (e) =>{\n    setOldPassword(e)\n  }\n  const newPasswordChange = (password) =>{\n    setNewPassword(password)\n  }\n  const confirmPassword = (password) =>{\n    setConfirmPassword(password)\n  }\n  const settingToggle = () =>{\n    setOpen(!open)\n  }\n  const openDeleteBox = () =>{\n    setDelete(!deleteBox)\n  }\n  const openPasswordChange = () =>{\n    setPasswordChange(!showPasswordChange)\n  }\n  const deleteAccount = () =>{\n    if (deletedEmail === email){\n      console.log('test')\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/deleteuser`, {\n        email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      dispatch(\n        setLogout()\n      )\n      navigate('/')\n    }\n  }\n\n  // useEffect(() =>{\n  //   checkUserInfo(user)\n  // }, [])\n\n  const content = (\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='profile'>\n        <h1 className='welcome-text'>Hello {userName},</h1>\n        <h2>here is how you month looks</h2>\n        <DateRange\n          editableDateInputs = {false}\n          showMonthAndYearPickers = {false}\n          ranges = {date}\n        />\n        <div className='account-settings'>\n          <button onClick={settingToggle}>Settings</button>\n          {open && \n          <div className='inner-account-settings'>\n            <div className='setting-option'>\n              <button>Email Notifications</button>\n            </div>\n            <div className='setting-option'>\n              <button onClick={openPasswordChange}>Password Change</button>\n              {showPasswordChange &&\n                <form className='password-change'>\n                  <div className='password-input'>\n                    <input type = 'password' value={oldPassword} onChange={oldPasswordChange}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>Old Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <div className='password-input'>\n                    <input type = 'password' value={newPassword} onChange={oldPasswordChange}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>Old Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <div className='password-input'>\n                    <input type = 'password' value={confirmNewPassword} onChange={oldPasswordChange}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>Old Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <button type='submit'>Submit</button>\n                </form>\n              }\n            </div>\n            <div className='setting-option'>\n              <button onClick={openDeleteBox}>Delete Account</button>\n            </div>\n          </div>\n          }\n        </div>\n        {deleteBox &&\n        <div className='page-fade'>\n          <div className='warning-box'>\n            <h1>Please enter your email adress to delete your account.</h1>\n            <form onSubmit={deleteAccount} className='delete-account'>\n              <div className='email-input'>\n                <input type='email' value={deletedEmail} onChange={emailChange}></input>\n                <label htmlFor='email' className='login-lable'>\n                  <span className='login-span'>Email</span>\n                </label>\n              </div>\n              <button type='submit'>Delete</button>\n              <button onClick={openDeleteBox}>Cancel</button>\n            </form>\n          </div>\n        </div>\n        }\n      </section>\n      <Footer />\n    </div>\n  )\n  return content\n}\n\nexport default Proflie\n\n\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport Footer from '../footer/Footer';\nimport {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useSelector } from \"react-redux\";\nimport Moment from 'moment';\nfunction PeriodInfo() {\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(''),\n      key: 'selection'\n    }\n  ]);\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const removePeriod = () =>{\n    \n  }\n  const content =\n    <div className='page-wrapper'>\n      <Nav />\n      <div className='logging-period'>\n        <h1>Do you have any more period(s) to log?</h1>\n        <DateRange\n            editableDateInputs={true}\n            showMonthAndYearPickers={false}\n            fixedHeight = {true}\n            onChange={item => setDate([item.selection])}\n            moveRangeOnFirstSelection={false}\n            ranges={date}\n            // scroll = {{enabled: true}}\n          />\n      </div>\n      <div className='remove-period'>\n        <h2>Or would you like to remove some?</h2>\n        <fieldset>\n          <label htmlFor = 'periods'>Select a period to remove:</label>\n          <select name='periods' className='periods'>\n            <option disabled selected>Select a date</option>\n            {previousPeriod.map((date, key) => <option value={key} key={date + key}>{`${Moment(date.startDate).format('MMMM Do YYYY')} - ${Moment(date.endDate).format('MMMM Do YYYY')}`}</option>\n            )}\n          </select>\n        </fieldset>\n        <button onClick={removePeriod}>Remove</button>\n      </div>\n      <Footer />\n    </div>\n\n  return content;\n}\n\nexport default PeriodInfo\n","import {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useDispatch } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport Moment from 'moment';\nimport {setPeriod, setCycle } from '../../state';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Spinner from '../../components/Spinner'\nimport Waves from '../../components/Waves'\n\n\nconst AccountSetup = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const [isLoading, setLoading] = useState(false)\n  const userInfo = useSelector((state) => state.previousPeriod);\n  const email = useSelector((state) => state.email)\n  const token = useSelector((state) => state.token)\n\n  const userData = (date) =>{\n    if (date[0].endDate){\n      const start = date[0].startDate.getDate()\n      const end = date[0].endDate.getDate()\n      if (start != end){\n        const startDate = Moment(date[0].startDate).format()\n        const endDate = Moment(date[0].endDate).format()\n        if (userInfo.length != 0){\n          const dates = userInfo.map(function(element){return element;})\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: userInfo.length,\n          }\n          dates.push(period)\n          setDates(dates)\n        }else{\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: 0,\n          }\n          let dates = [period]\n          setDates(dates)\n        }\n      }\n    }\n  }\n  const setDates = (dates) =>{\n    dispatch(\n      setPeriod({\n        previousPeriod: dates\n      })\n    );\n  }\n\n  useEffect(()=>{\n    userData(date)\n  },[date]);\n  const accountInfo = async () =>{\n    setLoading(true)\n    try{\n      const dates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n          email,\n          userInfo\n          },{\n            headers: {'Authorization': `Bearer ${token}`},\n          }\n          );\n          if (dates){\n            navigate('/Home')\n          }\n    }catch(err){\n      console.log(err)\n    }\n  }\n  console.log(date)\n  const setup = isLoading ? <Spinner /> : (\n        <section className='setup-wrapper'>\n          <h1>When was your last few periods?</h1>\n          <p>Just select them below, and once your done hit next. Please try to make them as close as you can.</p>\n          <DateRange\n            editableDateInputs={true}\n            showMonthAndYearPickers={false}\n            fixedHeight = {true}\n            onChange={item => setDate([item.selection])}\n            moveRangeOnFirstSelection={false}\n            ranges={date}\n            // scroll = {{enabled: true}}\n          />\n          <button type='submit' className='nextButton' onClick={accountInfo}>Next</button>\n        </section>\n  )\n  return setup\n}\n\nexport default AccountSetup\n","import { Calendar } from '@fullcalendar/core'\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline'\n\nconst Test = () => {    \n    const calendarEl = document.getElementById('calendar')\n    const calendar = new Calendar(calendarEl, {\n      plugins: [resourceTimelinePlugin],\n      initialView: 'resourceTimelineWeek',\n      resources: [\n        { title: 'Resource A' },\n        { title: 'Resource B' }\n      ]\n    })\n    \n    calendar.render()\n}\n\nexport default Test\n","import { BrowserRouter, Navigate, Routes, Route } from \"react-router-dom\";\nimport SignupForm from './pages/signupPage/SignUp'\nimport { useSelector } from \"react-redux\";\nimport Home from './pages/homePage/Home'\nimport Login from './pages/loginPage/Login'\nimport Proflie from \"./pages/profilePage/Proflie\";\nimport PeriodInfo from \"./pages/periodInfo/PeriodInfo\";\nimport AccountSetup from \"./pages/accountSetupPage/AccountSetup\";\nimport Test from \"./components/Test\";\nfunction App() {\n    const isAuth = Boolean(useSelector((state) => state.token));\n    const newAccount = useSelector((state) => state.previousPeriod);\n    let isNew;\n    // function newAccountCheck(newAccount){\n    //     if (newAccount.length < 1){\n    //         isNew = true;\n    //     }else{\n    //         isNew = false;\n    //     }\n    // }\n    // newAccountCheck(newAccount)\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/accountsetup' element={ <AccountSetup/>} />\n                <Route path='/signup' element={<SignupForm />} />\n                <Route path='/' element={<Login />} />\n                <Route path='/profile' element={ isAuth ? <Proflie /> : <Navigate to='/' />} />\n                <Route path='/periodinfo' element={isAuth ? <PeriodInfo /> : <Navigate to='/' />} />\n                <Route path='/home' element= {isAuth ? <Home /> : <Navigate to='/' />}/>\n                <Route path='/Test1' element= {<Test />} />\n            </Routes>\n        </BrowserRouter>\n);\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\nimport './styles/styles.css';\nimport App from './App';\nimport { configureStore, ConfigureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport authReducer from \"./state\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}