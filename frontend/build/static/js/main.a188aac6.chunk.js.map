{"version":3,"sources":["state/index.js","components/Spinner.jsx","pages/signupPage/SignUp.jsx","images/logo2.svg","images/logo.svg","pages/navbar/Nav.jsx","components/Countdown.jsx","components/Datestrip.jsx","pages/footer/Footer.jsx","pages/homePage/PeriodNotActive.jsx","pages/homePage/PeriodActive.jsx","components/BlankCountdown.jsx","pages/homePage/PeriodHere.jsx","pages/homePage/NeedInfo.jsx","utils/sendUserInfo.js","utils/fetchUserInfo.js","utils/calcPeriodInfo.js","pages/homePage/Home.jsx","pages/loginPage/Login.jsx","pages/index/Index.jsx","components/ProfileCal.jsx","classes/events.js","components/PageFade.jsx","pages/profilePage/DeleteAccout.jsx","pages/profilePage/ChangePassword.jsx","pages/profilePage/Notication.jsx","pages/profilePage/Settings.jsx","pages/profilePage/Proflie.jsx","pages/periodInfo/PeriodInfo.jsx","pages/accountSetupPage/AccountSetup.jsx","components/Test.jsx","App.js","index.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","cycle","avgLength","periodStartDate","periodEndDate","daysTillPeriod","canBleed","isBleeding","daysleft","previousPeriod","startDate","endDate","count","notification","reducers","setLogin","state","action","payload","setLogout","setPeriod","setCycle","setNewPeriod","setUserInfo","setCanBleed","setIsBleeding","setDays","setNotificationStatus","_authSlice$actions","actions","spinner","_jsx","className","children","SignUp","props","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setErrMsg","_useState3","_useState4","loading","setLoading","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","username","password","results","login","wrap","_context","prev","next","axios","post","concat","process","sent","data","accessToken","t0","stop","_x","apply","arguments","Spinner","_jsxs","AiOutlineClose","onClick","onShow","Form","validate","errors","passwordconfirm","render","_ref2","handleSubmit","submitting","form","pristine","Field","_ref3","input","meta","_objectSpread","type","required","htmlFor","error","touched","_ref4","_ref5","_ref6","disabled","Nav","useSelector","src","logo2","height","width","id","length","NavLink","to","CiLogout","renderTime","dimension","time","Countdown","_useReducer","useReducer","x","_useReducer2","daySeconds","Moment","format","todaysDate","Date","now","startTime","getTime","endTime","duration","remainingTime","half","quarter","CountdownCircleTimer","isPlaying","size","strokeWidth","colors","color1","color2","color3","colorsTime","initialRemainingTime","elapsedTime","color","style","Math","ceil","Datestrip","startValue","parse","endValue","rangeDates","date","setDate","useEffect","Datepicker","Footer","year","getFullYear","href","target","PeriodNotActive","userName","PeriodActive","forceUpdate","message","PeriodHere","BlankCountdown","NeedInfo","sendPeriodStatus","headers","_x2","_x3","_x4","sendUpdatedPeriod","_callee2","_context2","abrupt","_x5","_x6","_x7","_x8","removeCurrentDates","_callee4","_context4","_x12","_x13","sendPeriodInfo","_callee5","_context5","_x14","_x15","_x16","_x17","_x18","_x19","fetchUserInfo","_fetchUserInfo","result","userInfo","avgPeriodLength","totalDays","totalCycle","oldStartDate","cycleCount","periodLogged","forEach","diff","monthDif","abs","round","estimateDate","lastPeriod","estimateLastPeriod","add","Home","setBleeding","needInfo","setInfo","cycleStartDate","subtract","setUser","avgLengths","_cycle","_avgLength","estimateDates","periodStarted","newEndDate","update","bloodGod","_update","_bloodGod","periodEnded","_callee3","_context3","_toConsumableArray","home","Login","errormsg","setError","_useState5","_useState6","_onSubmit","loginTry","catch","response","console","log","content","Index","loginOpen","newAccount","setAccount","openLogin","openNewAccount","ProfileCal","localizer","momentLocalizer","moment","event","Calendar","events","startAccessor","start","endAccessor","end","views","Event","_createClass","title","allDay","_classCallCheck","this","Events","key","value","push","get","PageFade","DeleteAccout","deleteAccount","deletedEmail","onChange","emailChange","openDeleteBox","ChangePassword","changePassword","oldPassword","oldPasswordChange","newPassword","newPasswordChange","confirmNewPassword","confirmPassword","close","Notication","phoneNumber","setPhoneNumber","teleElement","useRef","current","submit","res","_number","_res","status","number","PhoneInput","country","Settings","openPassword","openNotication","Proflie","open","setOpen","deleteBox","setDelete","showPasswordChange","setPasswordChange","_useState7","_useState8","openNoticationBox","setNotication","_useState9","_useState10","setDeletedEmail","_useState11","_useState12","setOldPassword","_useState13","_useState14","setNewPassword","_useState15","_useState16","setConfirmPassword","_useState17","_useState18","setErrorMsg","periodEvent","_useState19","allEvents","_useState20","pEvents","checkUserInfo","periods","_start","_end","newEvent","settingToggle","noticationBox","openPasswordChange","PeriodInfo","removeDate","setRemove","setMessage","periodMessage","setPMessage","removePeriod","setDates","dates","addPeriod","sendDates","getDate","map","element","period","userData","DateRange","editableDateInputs","showMonthAndYearPickers","fixedHeight","item","selection","moveRangeOnFirstSelection","ranges","selected","AccountSetup","isLoading","accountInfo","Test","App","isAuth","Boolean","BrowserRouter","Routes","Route","path","SignupForm","Navigate","persistConfig","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","createRoot","document","getElementById","React","StrictMode","Provider","PersistGate","persistor","persistStore"],"mappings":"iPAsBaA,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAtBiB,CACjBC,KAAM,KACNC,MAAO,KACPC,MAAQ,KACRC,MAAO,KACPC,UAAW,KACXC,gBAAiB,KACjBC,cAAe,KACfC,eAAgB,KAChBC,UAAU,EACVC,YAAY,EACZC,SAAU,KACVC,eAAgB,CAAC,CACbC,UAAW,KACXC,QAAS,KACTC,MAAO,OAEXC,cAAc,GAMdC,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdD,EAAMlB,KAAOmB,EAAOC,QAAQpB,KAC5BkB,EAAMjB,MAAQkB,EAAOC,QAAQnB,MAC7BiB,EAAMhB,MAAQiB,EAAOC,QAAQlB,MAC7BgB,EAAMf,MAAQgB,EAAOC,QAAQjB,MAC7Be,EAAMd,UAAYe,EAAOC,QAAQhB,UACjCc,EAAMb,gBAAkBc,EAAOC,QAAQf,gBACvCa,EAAMZ,cAAgBa,EAAOC,QAAQd,cACrCY,EAAMX,eAAiBY,EAAOC,QAAQjB,MACtCe,EAAMV,SAAWW,EAAOC,QAAQZ,SAChCU,EAAMT,WAAaU,EAAOC,QAAQX,WAClCS,EAAMP,eAAiBQ,EAAOC,QAAQT,eACtCO,EAAMH,aAAeI,EAAOC,QAAQL,YACxC,EACAM,UAAW,SAACH,GACRA,EAAMlB,KAAO,KACbkB,EAAMhB,MAAQ,KACdgB,EAAMf,MAAQ,KACde,EAAMX,eAAiB,KACvBW,EAAMb,gBAAkB,KACxBa,EAAMZ,cAAgB,KACtBY,EAAMX,eAAiB,KACvBW,EAAMV,UAAW,EACjBU,EAAMT,YAAa,EACnBS,EAAMP,eAAiB,KACvBO,EAAMH,cAAe,CACzB,EACAO,UAAW,SAACJ,EAAOC,GACfD,EAAMP,eAAiBQ,EAAOC,QAAQT,cAC1C,EACAY,SAAU,SAACL,EAAOC,GACdD,EAAMf,MAAQgB,EAAOC,QAAQjB,MAC7Be,EAAMd,UAAYe,EAAOC,QAAQhB,SACrC,EACAoB,aAAc,SAACN,EAAOC,GAClBD,EAAMb,gBAAkBc,EAAOC,QAAQf,gBACvCa,EAAMZ,cAAgBa,EAAOC,QAAQd,aACzC,EACAmB,YAAa,SAACP,EAAOC,GACjBD,EAAMb,gBAAkBc,EAAOC,QAAQf,gBACvCa,EAAMZ,cAAgBa,EAAOC,QAAQd,cACrCY,EAAMf,MAAQgB,EAAOC,QAAQjB,MAC7Be,EAAMd,UAAYe,EAAOC,QAAQhB,UACjCc,EAAMV,SAAWW,EAAOC,QAAQZ,SAChCU,EAAMT,WAAaU,EAAOC,QAAQX,WAClCS,EAAMP,eAAiBQ,EAAOC,QAAQT,cAC1C,EACAe,YAAa,SAACR,EAAOC,GACjBD,EAAMV,SAAWW,EAAOC,QAAQZ,QACpC,EACAmB,cAAe,SAACT,EAAOC,GACnBD,EAAMT,WAAaU,EAAOC,QAAQX,UACtC,EACAmB,QAAS,SAACV,EAAOC,GACbD,EAAMR,SAAWS,EAAOC,QAAQV,QACpC,EACAmB,sBAAuB,SAACX,EAAOC,GAC3BD,EAAMH,aAAeI,EAAOC,QAAQL,YACxC,KAIDe,EAA0IlC,EAAUmC,QAA7Id,EAAQa,EAARb,SAAUI,EAASS,EAATT,UAAWC,EAASQ,EAATR,UAAWC,EAAQO,EAARP,SAAUC,EAAYM,EAAZN,aAAcC,EAAWK,EAAXL,YAAaE,EAAaG,EAAbH,cAAeD,EAAWI,EAAXJ,YAAsBG,GAAFC,EAAPF,QAA8BE,EAArBD,uBAEzGjC,IAAiB,Q,eChFjBoC,EARC,WACd,OACEC,cAAA,OAAKC,UAAU,UAASC,SACtBF,cAAA,OAAKC,UAAU,aAGrB,E,QCCe,SAASE,EAAOC,GAC3B,IAAMC,EAAWC,cACXC,EAAWC,cACjBC,EAAyBC,qBAAUC,EAAAC,YAAAH,EAAA,GAAvBI,GAAFF,EAAA,GAAWA,EAAA,IACrBG,EAA8BJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,EAAQ,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAM,IAAAxD,EAAAyD,EAAAC,EAAAC,EAAAC,EAAA7D,EAAA,OAAAsD,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIV,OAHZhE,EAAQwD,EAAOxD,MACfyD,EAAWD,EAAOC,SAClBC,EAAWF,EAAOE,SACtBT,GAAW,GAAKa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,aAAY,CACxEpE,QAAOyD,WAAUC,aACnB,OAFW,OAAPC,EAAOG,EAAAO,KAAAP,EAAAE,KAAA,GAGQL,EAAO,QAAhB,IAAAG,EAAAO,KACD,CAADP,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACcC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,eAAc,CACxEpE,QAAO0D,aACZ,KAAD,GAFa,OAALE,EAAKE,EAAAO,KAAAP,EAAAE,KAAA,GAGIJ,EAAK,SAAlB7D,EAAI+D,EAAAO,QAEN9B,EACIvB,EAAS,CACLjB,KAAMA,EAAKuE,KAAKvE,KAAK0D,SACrBzD,MAAOD,EAAKuE,KAAKvE,KAAKC,MACtBC,MAAOF,EAAKuE,KAAKC,YACjBrE,MAAOH,EAAKuE,KAAKvE,KAAKG,MACtBC,UAAWJ,EAAKuE,KAAKnE,UACrBC,gBAAiBL,EAAKuE,KAAKvE,KAAKK,gBAChCC,cAAeN,EAAKuE,KAAKvE,KAAKM,cAC9BK,eAAgBX,EAAKuE,KAAKvE,KAAKW,eAC/BF,WAAYT,EAAKuE,KAAKvE,KAAKS,WAC3BD,SAAUR,EAAKuE,KAAKvE,KAAKQ,SACzBO,aAAcf,EAAKuE,KAAKvE,KAAKe,gBAGnCuB,EAAS,kBACV,QAAAyB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAGLjB,EAASiB,EAAAU,IAAK,yBAAAV,EAAAW,OAAA,GAAAlB,EAAA,mBAErB,gBArCamB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,KAkHd,OA5EgB5B,EAAUhB,cAAC6C,EAAO,IAC9BC,eAAA,WAAS7C,UAAU,gBAAeC,SAAA,CAC9BF,cAAC+C,IAAc,CAACC,QAAS5C,EAAM6C,OAAQhD,UAAU,gBACjDD,cAACkD,IAAI,CACJhC,SAAUA,EACViC,SAAY,SAAA3B,GACT,IAAM4B,EAAS,CAAC,EAehB,OAdK5B,EAAOxD,QACRoF,EAAOpF,MAAQ,YAEdwD,EAAOC,WACR2B,EAAO3B,SAAW,YAEjBD,EAAOE,WACR0B,EAAO1B,SAAW,YAEjBF,EAAO6B,gBAEF7B,EAAOE,WAAaF,EAAO6B,kBACjCD,EAAOC,gBAAkB,cAFzBD,EAAOC,gBAAkB,WAItBD,CACV,EACAE,OAAU,SAAAC,GAAA,IAAEC,EAAYD,EAAZC,aAAoBC,GAAFF,EAAJG,KAAgBH,EAAVE,YAAoBF,EAARI,SAAgBJ,EAAN/B,OAAM,OACzDsB,eAAA,QAAM5B,SAAUsC,EAAatD,SAAA,CACzBF,cAAA,MAAAE,SAAI,YACJF,cAAC4D,IAAK,CAAC/F,KAAK,QAAOqC,SACd,SAAA2D,GAAA,IAAEC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAI,OACdjB,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACxBF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAM,QAAQC,UAAQ,KACxClE,cAAA,SAAOmE,QAAQ,QAAQlE,UAAU,cAAaC,SAC1C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,QAAKF,cAAA,SAAAE,SAAO,WAE5C6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGVpE,cAAC4D,IAAK,CAAC/F,KAAK,WAAUqC,SACjB,SAAAoE,GAAA,IAAER,EAAKQ,EAALR,MAAOC,EAAIO,EAAJP,KAAI,OACdjB,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC3BF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAK,OAAOC,UAAQ,KACtClE,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,WAAQF,cAAA,SAAAE,SAAO,WAE/C6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGVpE,cAAC4D,IAAK,CAACK,KAAK,WAAWpG,KAAK,WAAUqC,SACjC,SAAAqE,GAAA,IAAET,EAAKS,EAALT,MAAOC,EAAIQ,EAAJR,KAAI,OACdjB,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC3BF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAK,WAAWC,UAAQ,KAC1ClE,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,WAAQF,cAAA,SAAAE,SAAO,WAE/C6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGVpE,cAAC4D,IAAK,CAACK,KAAK,WAAWpG,KAAK,kBAAiBqC,SACxC,SAAAsE,GAAA,IAAEV,EAAKU,EAALV,MAAOC,EAAIS,EAAJT,KAAI,OACdjB,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC3BF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAK,WAAWC,UAAQ,KAC1ClE,cAAA,SAAOmE,QAAQ,kBAAkBlE,UAAU,cAAaC,SACpD4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,mBAAgBF,cAAA,SAAAE,SAAO,WAEvD6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGVpE,cAAA,UAAQiE,KAAK,SAASQ,SAAUhB,EAAWvD,SAAC,aACzC,MAMvB,C,sCCjIe,GCAA,IDAA,IAA0B,mCE6D1BwE,EArDH,WACR,IAAMnE,EAAWC,cACXtC,EAAQyG,aAAY,SAAC1F,GAAK,OAAKA,EAAMf,KAAK,IAC1CC,EAAYwG,aAAY,SAAC1F,GAAK,OAAKA,EAAMd,SAAS,IAClDO,EAAiBiG,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IAQpE,OACEoE,eAAA,OAAK7C,UAAU,MAAKC,SAAA,CAChBF,cAAA,OAAKC,UAAU,OAAMC,SACjBF,cAAA,OAAK4E,IAAKC,EAAOC,OAAO,OAAOC,MAAM,WAEzC/E,cAAA,SAAOgF,GAAG,oBAAoBf,KAAK,aACnCjE,cAAA,SAAOC,UAAU,uBAAuBkE,QAAQ,oBAAmBjE,SAC/DF,cAAA,OAAKC,UAAU,aAAa+E,GAAI,iBAEpClC,eAAA,MAAI7C,UAAU,YAAY+E,GAAG,YAAW9E,SAAA,CACpC4C,eAAA,MAAI7C,UAAU,QAAOC,SAAA,CACjBF,cAAA,MAAAE,SAAI,4BACJ4C,eAAA,QAAA5C,SAAA,CAAM,iBAAehC,EAAM,WAAY8B,cAAA,SACvC8C,eAAA,QAAA5C,SAAA,CAAM,mBAAiB/B,EAAU,YAAa6B,cAAA,SAC9C8C,eAAA,QAAA5C,SAAA,CAAM,mBAAiBxB,EAAeuG,aAE1CjF,cAAA,MAAIC,UAAU,WAAUC,SACpBF,cAACkF,IAAO,CAACC,GAAG,QAAOjF,SAAC,WAIxBF,cAAA,MAAIC,UAAU,WAAUC,SACpBF,cAACkF,IAAO,CAACC,GAAG,WAAUjF,SAAC,cAI3BF,cAAA,MAAIC,UAAU,WAAUC,SACpBF,cAACkF,IAAO,CAACC,GAAG,cAAajF,SAAC,kBAI9BF,cAAA,MAAIC,UAAU,SAAQC,SAClBF,cAAA,UAAQgD,QAtCL,WACXzC,EACInB,IAER,EAkCoCc,SACpBF,cAACoF,IAAQ,aAM7B,E,QCtDMC,EAAa,SAACC,EAAWC,GAC3B,OACIvF,cAAA,OAAKC,UAAU,oBAAmBC,SAC9BF,cAAA,OAAKC,UAAU,YAAWC,SAAC4C,eAAA,QAAA5C,SAAA,CAAOqF,EAAK,OAAOD,QAG1D,EAsCeE,EArCG,SAACpF,GACf,IAAAqF,EAA8BC,sBAAW,SAAAC,GAAC,OAAIA,EAAI,CAAC,GAAE,GAAEC,EAAAhF,YAAA6E,EAAA,GAEjDI,GAFOD,EAAA,GAAaA,EAAA,GAEP,OACbjH,EAAYmH,IAAO1F,EAAMzB,WAAWoH,OAAO,cAC3CnH,EAAUkH,IAAO1F,EAAMxB,SAASmH,OAAO,cACzCC,EAAaC,KAAKC,MAAQ,IACxBC,EAAY,IAAIF,KAAKtH,GAAWyH,UAAY,IAC5CC,EAAU,IAAIJ,KAAKrH,GAASwH,UAAY,IACxCE,EAAWD,EAAUF,EACrBI,EAAiBF,EAAUL,EAC3BQ,EAAQF,EAAS,EACjBG,EAAWH,EAAS,EAM5B,OACEtG,cAAA,OAAKC,UAAU,kBAAiBC,SAC5BF,cAAC0G,IAAoB1C,wBAAA,GAPN,CACnB2C,WAAW,EACXC,KAAM,IACNC,YAAa,KAKW,IACdC,OAAQ,CAAC1G,EAAM2G,OAAQ3G,EAAM4G,OAAQ5G,EAAM6G,OAAQ7G,EAAM6G,QACzDC,WAAY,CAACZ,EAAWE,EAAMC,EAAS,GACvCH,SAAUA,EACVa,qBAAsBZ,EAAcrG,SAErC,SAAAiB,GAAaA,EAAXiG,YAAF,IAzBQ7B,EAyBO8B,EAAKlG,EAALkG,MAAK,OACjBrH,cAAA,QAAMsH,MAAO,CAACD,SAAOnH,SAChBmF,EAAW,QA3BXE,EA2B2Be,GAAWA,EAAWC,GA3BzCgB,KAAKC,KAAMjC,EAAOM,MA4BxB,MAKvB,E,SCvBe4B,MAtBf,SAAmBrH,GACjB,IAAAK,EAAwBC,mBAAS,CAC/BgH,WAAYzB,KAAK0B,MAAMvH,EAAMsH,YAC7BE,SAAU,IAAI3B,KAAK7F,EAAMwH,UACzBC,WAAY,KACZlH,EAAAC,YAAAH,EAAA,GAJKqH,EAAInH,EAAA,GAAEoH,EAAOpH,EAAA,GAWpB,OANAqH,qBAAU,WACRD,EAAQ,CACNL,WAAYzB,KAAK0B,MAAMvH,EAAMsH,YAC7BE,SAAU,IAAI3B,KAAK7F,EAAMwH,WAE7B,GAAG,CAACxH,EAAMsH,WAAYtH,EAAMwH,WAE1B5H,cAAA,OAAKC,UAAU,yBAAwBC,SACrCF,cAACiI,aAAU,CACTP,WAAYI,EAAKJ,WACjBE,SAAYE,EAAKF,YAIzB,ECVeM,EAVA,WACX,IAAMC,GAAO,IAAIlC,MAAOmC,cAM1B,OAJEpI,cAAA,UAAAE,SACE4C,eAAA,QAAA5C,SAAA,CAAM,QAAQiI,EAAK,IAACnI,cAAA,KAAGqI,KAAK,mBAAmBC,OAAO,SAAQpI,SAAC,sBAIrE,ECoBeqI,EAxBS,SAACnI,GACvB,OACE0C,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CAC3BF,cAAC0E,EAAG,IACJ5B,eAAA,WAAS7C,UAAU,eAAcC,SAAA,CAC7B4C,eAAA,MAAA5C,SAAA,CAAI,iBAAeE,EAAMoI,YACzBxI,cAACyH,EAAS,CACFC,WAActH,EAAMhC,gBACpBwJ,SAAYxH,EAAM/B,gBAE1ByE,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,MAAAE,SAAI,4BACJF,cAACwF,EAAS,CAAC7G,UAAayB,EAAMzB,UAAWC,QAAWwB,EAAMxB,QAASmI,OAAO,UAAUC,OAAQ,UAAUC,OAAQ,eAElHnE,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAA,SAAOmE,QAAU,eAAcjE,SAAC,6BAChCF,cAAA,UAAQnC,KAAK,eAAeoC,UAAU,SAAS+C,QAAS5C,EAAM4C,QAAQ9C,SAAC,cAG/EF,cAACkI,EAAM,MAGb,ECOeO,EA7BM,SAACrI,GACpB,IAAAqF,EAA8BC,sBAAW,SAAAC,GAAC,OAAIA,EAAI,CAAC,GAAE,GAAEC,EAAAhF,YAAA6E,EAAA,GAAxCiD,GAAF9C,EAAA,GAAaA,EAAA,IAK1B,OAJAoC,qBAAU,WACRU,GACF,GAAG,CAACtI,EAAMzB,UAAWyB,EAAMxB,QAASwB,EAAMhC,gBAAiBgC,EAAM/B,gBAG/DyE,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAC0E,EAAG,IACJ5B,eAAA,WAAS7C,UAAU,OAAMC,SAAA,CACrB4C,eAAA,MAAI7C,UAAU,eAAcC,SAAA,CAAC,iBAAeE,EAAMoI,YAClDxI,cAACyH,EAAS,CACNC,WAActH,EAAMhC,gBACpBwJ,SAAYxH,EAAM/B,gBAEtByE,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,MAAAE,SAAI,kCACJF,cAACwF,EAAS,CAAC7G,UAAayB,EAAMzB,UAAWC,QAAWwB,EAAMxB,QAASmI,OAAO,UAAUC,OAAQ,UAAUC,OAAQ,eAElHnE,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACrBF,cAAA,SAAOmE,QAAU,eAAcjE,SAAC,2BAChCF,cAAA,UAAQnC,KAAK,eAAeoG,KAAK,SAASjB,QAAS5C,EAAM4C,QAAQ9C,SAAC,cAG9EF,cAACkI,EAAM,MAGf,ECCe1C,EA9BG,SAACpF,GAcjB,OACEJ,cAAA,OAAKC,UAAU,kBAAiBC,SAC5BF,cAAC0G,IAAoB1C,wBAAA,GARN,CACf2C,WAAW,EACXC,KAAM,IACNC,YAAa,KAMO,IACdC,OAAO,UAAS5G,SAEjB,SAAAiB,GAAA,IAAEkG,EAAKlG,EAALkG,MAAK,OACJrH,cAAA,QAAMsH,MAAO,CAACD,SAAOnH,UACLE,EAAMuI,QAnB1B3I,cAAA,OAAKC,UAAU,oBAAmBC,SAC9BF,cAAA,OAAKC,UAAU,YAAWC,SAACF,cAAA,QAAAE,SAAOE,EAAMuI,gBAmBjC,MAKvB,ECCeC,EA3BI,SAACxI,GAChB,OACI0C,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAC0E,EAAG,IACJ5B,eAAA,WAAS7C,UAAU,eAAcC,SAAA,CAC7B4C,eAAA,MAAA5C,SAAA,CAAI,iBAAeE,EAAMoI,YACzBxI,cAACyH,EAAS,CACNC,WAActH,EAAMhC,gBACpBwJ,SAAYxH,EAAM/B,gBAEtByE,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,MAAAE,SAAI,8BACJ4C,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAC6I,EAAc,CAAClK,UAAayB,EAAMzB,UAAWC,QAAWwB,EAAMxB,UACnEoB,cAAA,QAAAE,SAAM,gBAGV4C,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAA,SAAOmE,QAAU,eAAcjE,SAAC,6BAChCF,cAAA,UAAQnC,KAAK,eAAeoG,KAAK,SAASjB,QAAS5C,EAAM4C,QAAQ9C,SAAC,cAG1EF,cAACkI,EAAM,MAGnB,ECReY,EApBE,SAAC1I,GAChB,OACE0C,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAC0E,EAAG,IACF5B,eAAA,WAAS7C,UAAU,eAAcC,SAAA,CACjC4C,eAAA,MAAA5C,SAAA,CAAI,iBAAeE,EAAMoI,YACzB1F,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,MAAAE,SAAI,UACJF,cAAC6I,EAAc,CAACF,QAAWvI,EAAMuI,aAErC7F,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAA,SAAOmE,QAAU,eAAcjE,SAAC,6BAChCF,cAAA,UAAQnC,KAAK,eAAeoG,KAAK,SAASjB,QAAS5C,EAAM4C,QAAQ9C,SAAC,cAGxEF,cAACkI,EAAM,MAGf,ECnBMa,EAAgB,eAAA5H,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOvD,EAAOQ,EAAYD,EAAUN,GAAK,OAAAoD,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC9DC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,uBAAsB,CAC9DpE,QAAOQ,aAAYD,YACnB,CACAyK,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACrC,wBAAA6D,EAAAW,OAAA,GAAAlB,EAAA,KACH,gBANmBmB,EAAAuG,EAAAC,EAAAC,GAAA,OAAAhI,EAAAwB,MAAA,KAAAC,UAAA,KAQhBwG,EAAiB,eAAA7F,EAAAnC,YAAAC,cAAAC,MAAG,SAAA+H,EAAOrL,EAAOI,EAAiBC,EAAeJ,GAAK,IAAAF,EAAA,OAAAsD,cAAAQ,MAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,OAK3E,OAJIjE,EAAOkE,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,sBAAsB,CACzEpE,QAAOI,kBAAiBC,iBAC1B,CACE2K,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACvCqL,EAAAC,OAAA,SACKxL,GAAI,wBAAAuL,EAAA7G,OAAA,GAAA4G,EAAA,KACV,gBAPsBG,EAAAC,EAAAC,EAAAC,GAAA,OAAApG,EAAAZ,MAAA,KAAAC,UAAA,KAiBjBgH,EAAkB,eAAAtF,EAAAlD,YAAAC,cAAAC,MAAG,SAAAuI,EAAM7L,EAAOC,GAAK,IAAAF,EAAA,OAAAsD,cAAAQ,MAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,OAKvC,OAJIjE,EAAOkE,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,yBAAyB,CAC5EpE,SACF,CACEgL,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACvC6L,EAAAP,OAAA,SACKxL,GAAI,wBAAA+L,EAAArH,OAAA,GAAAoH,EAAA,KACd,gBAPuBE,EAAAC,GAAA,OAAA1F,EAAA3B,MAAA,KAAAC,UAAA,KASlBqH,EAAc,eAAA1F,EAAAnD,YAAAC,cAAAC,MAAG,SAAA4I,EAAOlM,EAAOW,EAAWC,EAASV,EAAOC,EAAWF,GAAK,OAAAoD,cAAAQ,MAAA,SAAAsI,GAAA,cAAAA,EAAApI,KAAAoI,EAAAnI,MAAA,OAC5EC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,mBAAmB,CAC3DpE,QAAOW,YAAWC,UAASV,QAAOC,aAClC,CACA6K,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACrC,wBAAAkM,EAAA1H,OAAA,GAAAyH,EAAA,KACH,gBANiBE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAlG,EAAA5B,MAAA,KAAAC,UAAA,KCpCM,SAEX8H,GAAahI,EAAAuG,GAAA,OAAA0B,GAAAhI,MAAC,KAADC,UAAA,UAAA+H,KAuB3B,OAvB2BA,GAAAvJ,YAAAC,cAAAC,MAA5B,SAAAC,EAA6BvD,EAAOC,GAAO,IAAF2M,EAAA7M,EAAA8M,EAAA,OAAAxJ,cAAAQ,MAAA,SAAAC,GAAE,cAAFA,EAAAC,KAAAD,EAAAE,MAAE,KAAF,EAMpC,OALK4I,EAAS3I,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,qBAAoB,CAC3EpE,SACE,CACAgL,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MAExC6D,EAAAE,KAAA,EACkB4I,EAAM,OAAf,KAAJ7M,EAAI+D,EAAAO,MACD,CAADP,EAAAE,KAAA,QASH,OARK6I,EAAW,CACfzM,gBAAiBL,EAAKuE,KAAKvE,KAAKK,gBAChCD,UAAWJ,EAAKuE,KAAKvE,KAAKI,UAC1BD,MAAOH,EAAKuE,KAAKvE,KAAKG,MACtBG,cAAeN,EAAKuE,KAAKvE,KAAKM,cAC9BK,eAAgBX,EAAKuE,KAAKvE,KAAKW,eAC/BH,SAAUR,EAAKuE,KAAKvE,KAAKQ,SACzBC,WAAYT,EAAKuE,KAAKvE,KAAKS,YAC5BsD,EAAAyH,OAAA,SACIsB,GAAQ,cAAA/I,EAAAyH,OAAA,SAGN,MAAI,yBAAAzH,EAAAW,OAAA,GAAAlB,EAAA,MAElBoB,MAAA,KAAAC,UAAA,CCvBD,SAASkI,GAAgBpM,GACrB,IAAIqM,EAAY,EACZC,EAAa,EACbC,EAAe,KACfC,EAAa,EACXC,EAAezM,EAAeuG,OACpC,OAAqB,IAAjBkG,IAGJzM,EAAe0M,SAAQ,SAAAtD,GAErB,GADAiD,GAAajF,IAAOgC,EAAKlJ,SAASyM,KAAKvD,EAAKnJ,UAAW,QACnC,MAAhBsM,EAAqB,CACvB,IAAMK,EAAWxF,IAAOmF,GAAcI,KAAKvD,EAAKnJ,UAAW,SAAS,GAChE4I,KAAKgE,IAAID,GAAY,MACvBN,GAAczD,KAAKgE,IAAIzF,IAAOgC,EAAKnJ,WAAW0M,KAAKJ,EAAc,SACjEC,GAAc,EAElB,MACED,EAAenF,IAAOgC,EAAKnJ,UAE/B,IAGM,CAACR,UAFWoJ,KAAKiE,MAAMT,EAAUI,GAErBjN,MADHqJ,KAAKiE,MAAMR,EAAWE,IAEzC,CAEA,SAASO,GAAarN,EAAiBC,EAAeK,EAAgBR,EAAOC,GACzE,IACIQ,EACAC,EAFA8M,EAAa,KAGb1F,EAAa,IAAIC,KAErB,GADAD,EAAaF,IAAOE,GAAYD,SAC3B3H,GAAoBC,IAAkBK,IAAkBR,IAASC,EAsBlE,OAAO,EArBPO,EAAe0M,SAAQ,SAAAtD,IACF,OAAf4D,GAEKA,EAAa5D,EAAKnJ,aADzB+M,EAAa5D,EAAKnJ,UAItB,IACA,IAAM2M,EAAWxF,IAAOE,GAAYqF,KAAKK,EAAY,SACrD,GAAGxN,GAASC,EACV,GAAImN,EAAW,EAAE,CACf,IAAMK,EAAqB7F,IAAO4F,GAAYE,IAAKN,EAAW,UAC9D3M,EAAYmH,IAAO6F,GAAoBC,IAAI1N,EAAO,QAClDU,EAAUkH,IAAO6F,GAAoBC,IAAIzN,EAAW,OACtD,MACEuN,EAAa5F,IAAO4F,GAAY3F,SAChCpH,EAAYmH,IAAO4F,GAAYE,IAAI1N,EAAO,QAC1CU,EAAUkH,IAAOnH,GAAWiN,IAAIzN,EAAW,QAG/C,MAAO,CAACQ,YAAWC,UAIvB,CC7CJ,IAuJeiN,GAvJF,WACX,IAAMtL,EAAWC,cACXtC,EAAQyG,aAAY,SAAC1F,GAAK,OAAKA,EAAMf,KAAK,IAC1CsK,EAAW7D,aAAY,SAAC1F,GAAK,OAAKA,EAAMlB,IAAI,IAC5CW,EAAiBiG,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IAC5DL,EAAgBsG,aAAY,SAAC1F,GAAK,OAAKA,EAAMZ,aAAa,IAC1DD,EAAkBuG,aAAY,SAAC1F,GAAK,OAAKA,EAAMb,eAAe,IAC9DD,EAAYwG,aAAY,SAAC1F,GAAK,OAAKA,EAAMd,SAAS,IAClDF,EAAQ0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,IAC1CD,EAAQ2G,aAAY,SAAC1F,GAAK,OAAKA,EAAMjB,KAAK,IAChDyC,EAAkCC,mBAASiE,aAAY,SAAC1F,GAAK,OAAKA,EAAMT,UAAU,KAAEmC,EAAAC,YAAAH,EAAA,GAA7EjC,EAAUmC,EAAA,GAAEmL,EAAWnL,EAAA,GACxBpC,EAAWoG,aAAY,SAAC1F,GAAK,OAAKA,EAAMV,QAAQ,IACtDuC,EAA4BJ,oBAAS,GAAKK,EAAAH,YAAAE,EAAA,GAAnCiL,EAAQhL,EAAA,GAAEiL,EAAOjL,EAAA,GACxB0E,EAA+BC,sBAAW,SAAAC,GAAC,OAAIA,EAAI,CAAC,GAAE,GAAEC,EAAAhF,YAAA6E,EAAA,GACpDO,GADUJ,EAAA,GAAaA,EAAA,GACV,IAAIK,MACrBD,EAAaF,IAAOE,GAAYD,OAAO,cACvC,IAAMkG,EAAiBnG,IAAO1H,GAAiB8N,SAAShO,EAAO,QACzDiO,EAAO,eAAAhL,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAsJ,EAAAuB,EAAAC,EAAAC,EAAAC,EAAA5N,EAAAC,EAAA,OAAAyC,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACS0I,GAAc1M,EAAOC,GAAM,OASjD,OATK4M,EAAQ/I,EAAAO,KACd9B,EACEf,EAAY,CACVpB,gBAAiByM,EAASzM,gBAC1BC,cAAewM,EAASxM,cACxBE,SAAUsM,EAAStM,SACnBC,WAAYqM,EAASrM,WACrBE,eAAgBmM,EAASnM,kBAE5BoD,EAAAE,KAAA,EACwB8I,GAAgBpM,GAAe,OAUvD,OAVK0N,EAAUtK,EAAAO,QAERnE,EAAQkO,EAAWlO,MACnBC,EAAYiO,EAAWjO,UAC7BoC,EACEjB,EAAS,CACPpB,MAAOA,EACPC,UAAWA,MAGhB2D,EAAAE,KAAA,GAC2ByJ,GAAarN,EAAiBC,EAAeK,EAAgB0N,EAAWlO,MAAOkO,EAAWjO,WAAU,QAA7G,KAAboO,EAAazK,EAAAO,MACD,CAADP,EAAAE,KAAA,SAQd,GAPKrD,EAAYmH,IAAOyG,EAAc5N,WAAWoH,OAAO,cACnDnH,EAAUkH,IAAOyG,EAAc3N,SAASmH,OAAO,cACrDxF,EACEhB,EAAa,CACXnB,gBAAiBO,EACjBN,cAAeO,MAGhBD,IAAaC,EAAO,CAAAkD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GACFiI,EAAejM,EAAOuO,EAAc5N,UAAW4N,EAAc3N,QAASwN,EAAWlO,MAAOkO,EAAWjO,UAAWF,GAAM,QAA7H6D,EAAAO,KAAA,QAGd2J,GAAQ,IACJlG,IAAO1H,GAAiB2H,OAAO,eAAiBC,GAAcF,IAAO1H,GAAiB2H,OAAO,cAAgBC,IAAexH,IAC9H+B,EACEd,EAAY,CACVlB,UAAU,KAGf,yBAAAuD,EAAAW,OAAA,GAAAlB,EAAA,KACF,kBA5CY,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KA8CT4J,EAAa,eAAAjJ,EAAAnC,YAAAC,cAAAC,MAAG,SAAA+H,IAAA,IAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxL,cAAAQ,MAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,UAChB8D,IAAO1H,GAAiB2H,OAAO,eAAiBC,EAAU,CAAAsD,EAAAtH,KAAA,SAEU,OADhEyK,EAAa3G,IAAOE,GAAY4F,IAAIzN,EAAW,QAAQ4H,OAAO,cAC9D2G,EAAStD,EAAkBpL,EAAOgI,EAAYyG,EAAYxO,GAAMqL,EAAAtH,KAAA,EAC/C0K,EAAM,OAAvBC,EAAQrD,EAAAjH,KACd9B,EACEd,EAAY,CACVlB,SAAUoO,EAASrK,KAAK/D,YAG5BgC,EACEb,EAAc,CACZlB,WAAYmO,EAASrK,KAAK9D,cAG9BsN,GAAY,GAAKxC,EAAAtH,KAAA,iBAE6D,OAAxE0K,EAAStD,EAAkBpL,EAAOI,EAAiBC,EAAeJ,GAAMqL,EAAAtH,KAAA,GACvD0K,EAAM,QAAvBC,EAAQrD,EAAAjH,KACd9B,EACEd,EAAY,CACVlB,SAAUoO,EAASrK,KAAK/D,YAG5BgC,EACEb,EAAc,CACZlB,WAAYmO,EAASrK,KAAK9D,cAG9BsN,GAAY,GAAK,yBAAAxC,EAAA7G,OAAA,GAAA4G,EAAA,KAEpB,kBA/BkB,OAAA9F,EAAAZ,MAAA,KAAAC,UAAA,KAiCbkK,EAAW,eAAAjJ,EAAAzC,YAAAC,cAAAC,MAAG,SAAAyL,IAAA,OAAA1L,cAAAQ,MAAA,SAAAmL,GAAA,cAAAA,EAAAjL,KAAAiL,EAAAhL,MAAA,OACd3D,GAAiB2H,GACnBzF,EACElB,EAAU,CACRX,eAAe,GAADyD,OAAA8K,YAAMvO,GAAc,CAChC,CAACC,UAAWP,EAAiBQ,QAASoH,QAI5CzF,EACEb,EAAc,CACZlB,YAAY,OAIhB+B,EACElB,EAAU,CACRX,eAAe,GAADyD,OAAA8K,YAAMvO,GAAc,CAChC,CAACC,UAAWP,EAAiBQ,QAASP,QAI5CkC,EACEb,EAAc,CACZlB,YAAY,MAIlBuK,EAAiB/K,GAAO,EAAOO,EAAUN,GACzC2L,EAAmB5L,EAAOC,GAC1B6N,GAAY,GAAM,wBAAAkB,EAAAvK,OAAA,GAAAsK,EAAA,KACnB,kBA/BgB,OAAAlJ,EAAAlB,MAAA,KAAAC,UAAA,KAoCjBoF,qBAAU,WACRmE,GACF,GAAE,CAAC3N,EAAYJ,IAcf,OAZa,SAACI,EAAYD,EAAUwN,GAClC,OAAKvN,GAAeD,GAAawN,EAEvBxN,EACDyB,cAAC4I,EAAU,CAACJ,SAAYA,EAAUxF,QAAWwJ,EAAe5N,QAAWR,EAAiBO,UAAaqH,EAAY0B,WAAYtJ,EAAiBwJ,SAAYvJ,IACzJ0N,EACD/L,cAAC8I,EAAQ,CAACN,SAAYA,EAAUxF,QAAW,KAAM2F,QAAU,2BAE3D3I,cAACyI,EAAY,CAACD,SAAYA,EAAUxF,QAAW8J,EAAalO,QAAWP,EAAeM,UAAaP,EAAiBA,gBAAiBA,EAAiBC,cAAiBA,IANvK2B,cAACuI,EAAe,CAACrK,MAASA,EAAOsK,SAAYA,EAAU5J,QAAWR,EAAiBO,UAAasN,EAAgBjJ,QAAWwJ,EAAepO,gBAAiBA,EAAiBC,cAAiBA,GAQxM,CAEO6O,CAAK1O,EAAYD,EAAUwN,EAElC,EC5DeoB,OA7Ff,SAAe/M,GACX,IAAMC,EAAWC,cACXC,EAAWC,cACjBC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCO,EAAOL,EAAA,GAAEM,EAAUN,EAAA,GAC1BG,EAA6BJ,qBAAUK,EAAAH,YAAAE,EAAA,GAAhCsM,EAAQrM,EAAA,GAAEsM,EAAQtM,EAAA,GACzBuM,EAAgC5M,mBAAS,IAAG6M,EAAA3M,YAAA0M,EAAA,GACrB,SAAAE,IAgCtB,OAhCsBA,EAAApM,YAAAC,cAAAC,MAAvB,SAAAC,EAAwBC,GAAQ,IAAFxD,EAAA0D,EAAA+L,EAAA1P,EAAA,OAAAsD,cAAAQ,MAAA,SAAAC,GAAE,cAAFA,EAAAC,KAAAD,EAAAE,MAAE,KAAF,EAGI,OAF9Bf,GAAW,GACPjD,EAAQwD,EAAOxD,MACf0D,EAAWF,EAAOE,SAAQI,EAAAE,KAAA,EACPC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,eAAc,CAC3EpE,QAAO0D,aACRgM,OAAM,SAAUtJ,GACZA,EAAMuJ,WACLN,EAASjJ,EAAMuJ,SAASrL,KAAK8B,OAC7BwJ,QAAQC,IAAIzJ,EAAMuJ,SAASrL,KAAK8B,QAEpCnD,GAAW,EACf,IAAG,KAAD,EARY,OAARwM,EAAQ3L,EAAAO,KAAAP,EAAAE,KAAA,EASKyL,EAAQ,QAArB1P,EAAI+D,EAAAO,QAEN9B,EACIvB,EAAS,CACPjB,KAAMA,EAAKuE,KAAKvE,KAAK0D,SACrBzD,MAAOD,EAAKuE,KAAKvE,KAAKC,MACtBC,MAAOF,EAAKuE,KAAKC,YACjBrE,MAAOH,EAAKuE,KAAKvE,KAAKG,MACtBC,UAAWJ,EAAKuE,KAAKnE,UACrBC,gBAAiBL,EAAKuE,KAAKvE,KAAKK,gBAChCC,cAAeN,EAAKuE,KAAKvE,KAAKM,cAC9BK,eAAgBX,EAAKuE,KAAKvE,KAAKW,eAC/BF,WAAYT,EAAKuE,KAAKvE,KAAKS,WAC3BD,SAAUR,EAAKuE,KAAKvE,KAAKQ,SACzBO,aAAcf,EAAKuE,KAAKvE,KAAKe,gBAGjCuB,EAAS,UACb,yBAAAyB,EAAAW,OAAA,GAAAlB,EAAA,MACLoB,MAAA,KAAAC,UAAA,CAjCc2K,EAAA,GAAaA,EAAA,GAkC5B,IAAMO,EAAU9M,EAAUhB,cAAC6C,EAAO,IAC9BC,eAAA,WAAS7C,UAAU,gBAAeC,SAAA,CAC9BF,cAAC+C,IAAc,CAACC,QAAS5C,EAAM6C,OAAQhD,UAAU,gBACjDD,cAACkD,IAAI,CACDhC,SAtCiC,SACtBwB,GAAA,OAAA8K,EAAA7K,MAAC,KAADC,UAAA,EAsCXO,SAAY,SAAA3B,GACR,IAAM4B,EAAQ,CAAC,EAOf,OANK5B,EAAOxD,QACRoF,EAAOpF,MAAQ,YAEdwD,EAAOE,WACR0B,EAAO1B,SAAW,YAEf0B,CACX,EACAE,OAAU,SAAAnC,GAAA,IAAEqC,EAAYrC,EAAZqC,aAAoBC,GAAFtC,EAAJuC,KAAgBvC,EAAVsC,YAAoBtC,EAARwC,SAAgBxC,EAANK,OAAM,OACxDsB,eAAA,QAAM5B,SAAUsC,EAAatD,SAAA,CACzBF,cAAA,MAAAE,SAAI,YACJF,cAAA,QAAMC,UAAU,UAASC,SAAEkN,IAC3BpN,cAAC4D,IAAK,CAAC/F,KAAK,QAAOqC,SACd,SAAAqD,GAAA,IAAEO,EAAKP,EAALO,MAAOC,EAAIR,EAAJQ,KAAI,OACdjB,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACxBF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAK,QAAQC,UAAQ,KACvClE,cAAA,SAAOmE,QAAQ,QAAQlE,UAAU,cAAaC,SAC1C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,QAAKF,cAAA,SAAAE,SAAO,WAE5C6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGVpE,cAAC4D,IAAK,CAAC/F,KAAK,WAAUqC,SACjB,SAAA2D,GAAA,IAAEC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAI,OACVjB,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC3BF,cAAA,QAAAgE,wBAAA,GAAWF,GAAK,IAAEG,KAAM,WAAWC,UAAQ,KAC3ClE,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,WAAQF,cAAA,SAAAE,SAAO,WAE/C6D,EAAKK,OAASL,EAAKM,SAAWrE,cAAA,QAAMC,UAAU,QAAOC,SAAE6D,EAAKK,UAC3D,IAGdtB,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACxBF,cAAA,SAAOiE,KAAK,WAAWe,GAAG,WAAWnH,KAAK,WAC1CmC,cAAA,SAAOmE,QAAQ,SAAQjE,SAAC,mBAE5BF,cAAA,UAAQiE,KAAK,SAASQ,SAAUhB,EAAWvD,SAAC,aACzC,OAKvB,OAAO4N,CACX,EChEeC,OAlCf,WACI,IAAAtN,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCuN,EAASrN,EAAA,GAAE3B,EAAQ2B,EAAA,GAC1BG,EAAiCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAzCmN,EAAUlN,EAAA,GAAEmN,EAAUnN,EAAA,GACvBoN,EAAY,WACdnP,GAAUgP,EACd,EACMI,EAAiB,WACnBF,GAAYD,EAChB,EAuBF,OArBMnL,eAAA,WAAS7C,UAAU,wBAAuBC,SAAA,CACtCF,cAAA,OAAKC,UAAU,yBACfD,cAAA,MAAAE,SAAI,aACJF,cAAA,KAAAE,SAAG,sRACHF,cAAA,SACA8C,eAAA,OAAK7C,UAAU,yBAAwBC,SAAA,CACnC4C,eAAA,QAAA5C,SAAA,CAAM,4BAAyBF,cAAA,UAAQgD,QAASmL,EAAUjO,SAAC,kBAC3D4C,eAAA,QAAM7C,UAAU,SAAQC,SAAA,CAAC,aAAUF,cAAA,UAAQgD,QAASoL,EAAelO,SAAC,wBAEvE8N,GACGhO,cAAA,OAAKC,UAAU,YAAWC,SACtBF,cAACmN,GAAK,CAAClK,OAAQkL,MAGtBF,GACGjO,cAAA,OAAKC,UAAU,YAAWC,SACtBF,cAACG,EAAM,CAAC8C,OAAQmL,QAMpC,E,SCbeC,OAlBf,SAAoBjO,GAChB,IAAMkO,EAAYC,aAAgBC,KAGpC,OADEZ,QAAQC,IAAIzN,EAAMqO,OAElBzO,cAAA,OAAKC,UAAU,cAAaC,SAC1BF,cAAC0O,KAAQ,CACPJ,UAAWA,EACXK,OAAQvO,EAAMqO,MACdG,cAAgBxO,EAAMyO,MACtBC,YAAc1O,EAAM2O,IACpBC,MATU,WAclB,E,kBCpBaC,GAAKC,cACd,SAAAD,EAAYE,EAAON,EAAOE,EAAKK,GAAOC,aAAA,KAAAJ,GAClCK,KAAKH,MAAQA,EACbG,KAAKT,MAAQA,EACbS,KAAKP,IAAMA,EACXO,KAAKF,OAASA,CAClB,IAGSG,GAAM,WACf,SAAAA,IAAaF,aAAA,KAAAE,GACTD,KAAKX,OAAO,EAChB,CAMC,OANAO,aAAAK,EAAA,EAAAC,IAAA,WAAAC,MACD,SAASN,EAAON,EAAOE,EAAKK,GACxBE,KAAKX,OAAOe,KAAK,IAAIT,GAAME,EAAON,EAAOE,EAAKK,GAClD,GAAC,CAAAI,IAAA,YAAAG,IACD,WACI,OAAOL,KAAKX,MAChB,KAACY,CAAA,CATc,GCAJK,OAPf,SAAkBxP,GAChB,OACEJ,cAAA,OAAKC,UAAU,YAAWC,SACvBE,EAAM0N,SAGb,ECYe+B,GAlBM,SAACzP,GACpB,OACE0C,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACxBF,cAAA,MAAAE,SAAI,2DACJ4C,eAAA,QAAM5B,SAAUd,EAAM0P,cAAe7P,UAAU,iBAAgBC,SAAA,CAC/D4C,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACxBF,cAAA,SAAOiE,KAAK,QAAQwL,MAAOrP,EAAM2P,aAAcC,SAAU5P,EAAM6P,cAC/DjQ,cAAA,SAAOmE,QAAQ,QAAQlE,UAAU,cAAaC,SAC9CF,cAAA,QAAMC,UAAU,aAAYC,SAAC,eAGjCF,cAAA,UAAQC,UAAU,SAASgE,KAAK,SAAQ/D,SAAC,WACzCF,cAAA,UAAQC,UAAU,SAAS+C,QAAS5C,EAAM8P,cAAchQ,SAAC,gBAIjE,ECceiQ,OA9Bf,SAAwB/P,GACtB,OACE0C,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CAC1BF,cAAA,MAAAE,SAAI,4CACJ4C,eAAA,QAAM7C,UAAU,kBAAkBiB,SAAUd,EAAMgQ,eAAelQ,SAAA,CAC/D4C,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,SAAOiE,KAAO,WAAWwL,MAAOrP,EAAMiQ,YAAaL,SAAU5P,EAAMkQ,oBACnEtQ,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,eAAYF,cAAA,SAAAE,SAAO,cAGtD4C,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,SAAOiE,KAAO,WAAWwL,MAAOrP,EAAMmQ,YAAaP,SAAU5P,EAAMoQ,oBACnExQ,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,eAAYF,cAAA,SAAAE,SAAO,cAGtD4C,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,SAAOiE,KAAO,WAAWwL,MAAOrP,EAAMqQ,mBAAoBT,SAAU5P,EAAMsQ,kBAC1E1Q,cAAA,SAAOmE,QAAQ,WAAWlE,UAAU,cAAaC,SAC7C4C,eAAA,QAAM7C,UAAU,aAAYC,SAAA,CAAC,mBAAgBF,cAAA,SAAAE,SAAO,cAG1DF,cAAA,UAAQC,UAAU,SAASgE,KAAK,SAAQ/D,SAAC,cAE3CF,cAAA,UAAQC,UAAU,cAAc+C,QAAW5C,EAAMuQ,MAAMzQ,SAAC,cAG9D,E,4BC0De0Q,OAlFf,SAAoBxQ,GAChB,IAAMG,EAAWC,cACX1B,EAAe6F,aAAY,SAAC1F,GAAK,OAAKA,EAAMH,YAAY,IACxDd,EAAQ2G,aAAY,SAAC1F,GAAK,OAAKA,EAAMjB,KAAK,IAC1CC,EAAQ0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,IAChDwC,EAA+BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAC3CK,GADcH,EAAA,GAAaA,EAAA,GACWD,mBAAS,KAAGK,EAAAH,YAAAE,EAAA,GAA3C+P,EAAW9P,EAAA,GAAE+P,EAAc/P,EAAA,GAC5B4P,EAAQvQ,EAAMuQ,MACdI,EAAcC,mBACpBhJ,qBAAU,WACN+I,EAAYE,QAAUJ,CAC1B,GAAE,CAACA,IACH,IAIMK,EAAM,eAAA/P,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAA4P,EAAAC,EAAAC,EAAA,OAAAhQ,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACPlD,EAAa,CAADgD,EAAAE,KAAA,SAEO,OADJ,EACA,KAAIF,EAAAE,KAAA,EACDC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,+BAA8B,CACtFpE,QAAOsT,OAHI,MAGIC,OAFJ,MAGb,CACEvI,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACvC,OAJIkT,EAAGrP,EAAAO,KAKT9B,EACIX,EAAsB,CAClBd,aAAcqS,EAAI7O,KAAKxD,gBAG/B6R,IAAO7O,EAAAE,KAAA,oBACDlD,EAAa,CAADgD,EAAAE,KAAA,SAEQ,OADX,EACTuP,EAASV,EAAW/O,EAAAE,KAAA,GACRC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,+BAA8B,CACtFpE,QAAOsT,OAHI,KAGIC,UACjB,CACEvI,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACvC,QAJIkT,EAAGrP,EAAAO,KAKT9B,EACIX,EAAsB,CAClBd,aAAcqS,EAAI7O,KAAKxD,gBAG/B6R,IAAO,yBAAA7O,EAAAW,OAAA,GAAAlB,EAAA,KAEd,kBA9BW,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAkCd,OACEE,eAAA,OAAK7C,UAAU,cAAaC,SAAA,CACvBpB,GACGgE,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAA,MAAAE,SAAI,0CACJ4C,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,UAAQC,UAAU,SAAS+C,QAASkO,EAAOhR,SAAC,QAC5CF,cAAA,UAAQC,UAAU,SAAS+C,QAAS5C,EAAMuQ,MAAMzQ,SAAC,cAK3DpB,GACEgE,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CACzBF,cAAA,MAAAE,SAAI,iDACJ4C,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,OAAKC,UAAU,YAAWC,SACtBF,cAACwR,KAAU,CACPxB,SAxDH,SAACuB,GAClBT,EAAeS,GACf3D,QAAQC,IAAIgD,EAChB,EAsDwBY,QAAS,KACThC,MAASoB,MAGjB7Q,cAAA,UAAQC,UAAU,SAASgE,KAAK,SAASjB,QAASkO,EAAOhR,SAAC,WAC1DF,cAAA,UAAQC,UAAU,cAAc+C,QAAS5C,EAAMuQ,MAAMzQ,SAAC,oBAM1E,EClEewR,OAnBf,SAAkBtR,GAChB,OACEJ,cAAA,OAAKC,UAAU,cAAaC,SACxB4C,eAAA,OAAK7C,UAAU,yBAAwBC,SAAA,CACnCF,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BF,cAAA,UAAQgD,QAAS5C,EAAMuR,aAAazR,SAAC,sBAEzCF,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BF,cAAA,UAAQgD,QAAS5C,EAAMwR,eAAe1R,SAAC,wBAE3CF,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BF,cAAA,UAAQgD,QAAS5C,EAAM8P,cAAchQ,SAAC,qBAE1CF,cAAA,UAAQC,UAAU,cAAc+C,QAAS5C,EAAMuQ,MAAMzQ,SAAC,gBAIlE,EC0He2R,GA3HC,WACd,IAAMxR,EAAWC,cACXC,EAAWC,cACXgI,EAAW7D,aAAY,SAAC1F,GAAK,OAAKA,EAAMlB,IAAI,IAC5CM,EAAgBsG,aAAY,SAAC1F,GAAK,OAAKA,EAAMZ,aAAa,IAC1DD,EAAkBuG,aAAY,SAAC1F,GAAK,OAAKA,EAAMb,eAAe,IAC9DH,EAAQ0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,IAC1CD,EAAQ2G,aAAY,SAAC1F,GAAK,OAAKA,EAAMjB,KAAK,IAC1CU,EAAiBiG,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IAElE+B,EAAwBC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhCqR,EAAInR,EAAA,GAAEoR,EAAOpR,EAAA,GACpBG,EAA+BJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAvCkR,EAASjR,EAAA,GAAEkR,EAASlR,EAAA,GAC3BuM,EAAgD5M,oBAAS,GAAM6M,EAAA3M,YAAA0M,EAAA,GAAxD4E,EAAkB3E,EAAA,GAAE4E,EAAiB5E,EAAA,GAC5C6E,EAA2C1R,oBAAS,GAAM2R,EAAAzR,YAAAwR,EAAA,GAAnDE,EAAiBD,EAAA,GAAEE,EAAaF,EAAA,GACvCG,EAAwC9R,mBAAS,IAAG+R,EAAA7R,YAAA4R,EAAA,GAA7CzC,EAAY0C,EAAA,GAAEC,EAAeD,EAAA,GACpCE,EAAsCjS,mBAAS,IAAGkS,EAAAhS,YAAA+R,EAAA,GAA3CtC,EAAWuC,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAAsCpS,mBAAS,IAAGqS,EAAAnS,YAAAkS,EAAA,GAA3CvC,EAAWwC,EAAA,GAAEC,EAAcD,EAAA,GAClCE,EAAiDvS,mBAAS,IAAGwS,EAAAtS,YAAAqS,EAAA,GAAtDxC,EAAkByC,EAAA,GAAEC,EAAkBD,EAAA,GAC7CE,EAA+B1S,mBAAS,IAAG2S,EAAAzS,YAAAwS,EAAA,GAA3BE,IAAFD,EAAA,GAAaA,EAAA,IACrBvU,GAAe6F,aAAY,SAAC1F,GAAK,OAAKA,EAAMH,YAAY,IAC9D8O,QAAQC,IAAI/O,IACZ,IAAIyU,GAAc,IAAIhE,GACtBiE,GAA6B9S,mBAAS6S,GAAYE,WAAUC,GAAA9S,YAAA4S,GAAA,GAArDG,GAAOD,GAAA,GACRE,IADmBF,GAAA,GACN,eAAAvS,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAsS,EAAAhF,EAAAE,EAAA+E,EAAAC,EAAA,OAAA1S,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,GAAsB,GAAlB2R,GAAQ1O,OAAY,CACtB,IAAU4O,KAAWnV,EACfmQ,EAAQ/I,IAAOpH,EAAemV,GAASlV,WACvCoQ,EAAMjJ,IAAOpH,EAAemV,GAASjV,SACzC2U,GAAYS,SAAS,gBAAiBnF,EAAOE,GAAK,GAEhD3Q,GAAmBC,IACjBwQ,EAAQ/I,IAAO1H,GACf2Q,EAAMjJ,IAAOzH,GACjBkV,GAAYS,SAAS,gBAAiBnF,EAAOE,GAAK,GAEtD,CAAC,wBAAAjN,EAAAW,OAAA,GAAAlB,EAAA,KACF,kBAbkB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,MA2BbqR,GAAgB,WACpBlC,GAASD,EACX,EACMoC,GAAgB,WACpB3B,GAAeD,EACjB,EACMpC,GAAgB,WACpB+B,GAAWD,EACb,EACMmC,GAAqB,WACzBhC,GAAmBD,EACrB,EA2DA,OAlCAlK,qBAAU,WACR4L,IACF,GAAE,IAGA9Q,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CAC3BF,cAAC0E,EAAG,IACJ5B,eAAA,WAAS7C,UAAU,kBAAiBC,SAAA,CAClC4C,eAAA,MAAI7C,UAAU,eAAcC,SAAA,CAAC,SAAOsI,EAAS,OAC7C1F,eAAA,OAAK7C,UAAU,WAAUC,SAAA,CACvBF,cAAA,MAAAE,SAAI,gCACJF,cAACqO,GAAU,CACTI,MAAQkF,QAGZ7Q,eAAA,OAAK7C,UAAU,mBAAkBC,SAAA,CAC/BF,cAAA,UAAQgD,QAASiR,GAAc/T,SAAC,aAC/B4R,GACC9R,cAAC4P,GAAQ,CAAC9B,QAAW9N,cAAC0R,GAAQ,CAACC,aAAgBwC,GAAoBvC,eAAkBsC,GAAehE,cAAgBA,GAAeS,MAAOsD,UAG7IjC,GACDhS,cAAC4P,GAAQ,CAAC9B,QAAW9N,cAAC6P,GAAY,CAACC,cA9CnB,WAChBC,IAAiB/R,IACnBiE,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,oBAAoB,CAC5DpE,SACA,CACAgL,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MAEvCsC,EACEnB,KAEFiB,EAAS,KAEb,EAkCwE0P,aAAcA,EAAcE,YAvEhF,SAACjS,GACnB0U,EAAgB1U,EAAMsK,OAAOmH,OAC7B7B,QAAQC,IAAI7P,EAAMsK,OAAOmH,MAC3B,EAoE8HS,cAAeA,OAEtIoC,GACAtS,cAAC4P,GAAQ,CAAC9B,QAAU9N,cAAC4Q,GAAU,CAACD,MAAQuD,OAExChC,GACClS,cAAC4P,GAAQ,CAAC9B,QAAU9N,cAACmQ,GAAc,CAACC,eAvCrB,WACjBG,GAAeE,EACjBxO,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,wBAAuB,CAC/DpE,QAAOqS,cAAaE,eACpB,CACAvH,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MAGvCqV,GAAY,6BAEhB,EA6B8EjD,YAAeA,EAAaC,kBAzEhF,SAAC5O,GACzBmR,EAAenR,EAAS4G,OAAOmH,MACjC,EAuEiJc,YAAeA,EAAaC,kBAtEnJ,SAAC9O,GACzBsR,EAAetR,EAAS4G,OAAOmH,MACjC,EAoEqNgB,mBAAsBA,EAAoBC,gBAnEvO,SAAChP,GACvByR,EAAmBzR,EAAS4G,OAAOmH,MACrC,EAiEmSkB,MAAOwD,UAGtSnU,cAACkI,EAAM,MAIb,E,SCTekM,OAtHf,WACE,IAAM7T,EAAWC,cACXvC,EAAQ0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,IAC1CD,EAAQ2G,aAAY,SAAC1F,GAAK,OAAKA,EAAMjB,KAAK,IAC1C6M,EAAWlG,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IAC5D+B,EAAgCC,qBAAUC,EAAAC,YAAAH,EAAA,GAAnC4T,EAAU1T,EAAA,GAAE2T,EAAS3T,EAAA,GAC5BG,EAA8BJ,qBAAUK,EAAAH,YAAAE,EAAA,GAAjC6H,EAAO5H,EAAA,GAAEwT,EAAUxT,EAAA,GAC1BuM,EAAqC5M,qBAAU6M,EAAA3M,YAAA0M,EAAA,GAAxCkH,EAAajH,EAAA,GAAEkH,EAAWlH,EAAA,GACjC6E,EAAwB1R,mBAAS,CAC/B,CACE/B,UAAW,IAAIsH,KACfrH,QAAS,IAAIqH,KACbuJ,IAAK,eAEP6C,EAAAzR,YAAAwR,EAAA,GANKtK,EAAIuK,EAAA,GAAEtK,EAAOsK,EAAA,GAUdqC,EAAY,eAAAvT,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAA4P,EAAA,OAAA9P,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACAC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,sBAAqB,CAChFpE,QAAOqW,cAAY,CACjBrL,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MACrC,OACiB,OAJfkT,EAAGrP,EAAAO,MAICiP,SACN/Q,EACElB,EAAU,CACRX,eAAgByS,EAAI7O,KAAK5D,kBAG7B6V,EAAWpD,EAAI7O,KAAKqG,UACrB,wBAAA7G,EAAAW,OAAA,GAAAlB,EAAA,KACF,kBAbe,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KA0CV+R,EAAW,SAACC,GAChBrU,EACElB,EAAU,CACRX,eAAgBkW,IAGtB,EACMC,EAAS,eAAAtR,EAAAnC,YAAAC,cAAAC,MAAG,SAAA+H,IAAA,IAAAyL,EAAA3D,EAAA,OAAA9P,cAAAQ,MAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAtH,KAAA,EACQC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,iBAAgB,CAChFpE,QAAO6M,YAAU,CACf7B,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MAExC,OAJc,OAAT6W,EAASxL,EAAAjH,KAAAiH,EAAAtH,KAAA,EAKG8S,EAAS,OAArB3D,EAAG7H,EAAAjH,KACToS,EAAY,GAADtS,OAAIgP,EAAI7O,KAAKqG,QAAO,MAAI,wBAAAW,EAAA7G,OAAA,GAAA4G,EAAA,KACpC,kBARc,OAAA9F,EAAAZ,MAAA,KAAAC,UAAA,KAgDjB,OAtCEoF,qBAAU,YA7CO,SAACF,GAChB,GAAIA,EAAK,GAAGlJ,SACIkJ,EAAK,GAAGnJ,UAAUoW,WACpBjN,EAAK,GAAGlJ,QAAQmW,UACX,CACf,IAAMpW,EAAYmH,IAAOgC,EAAK,GAAGnJ,WAAWoH,SACtCnH,EAAUkH,IAAOgC,EAAK,GAAGlJ,SAASmH,SACxC,GAAuB,GAAnB8E,EAAS5F,OAAY,CACvB,IAAM2P,EAAQ/J,EAASmK,KAAI,SAASC,GAAS,OAAOA,CAAQ,IACxDC,EAAS,CACXvW,UAAWA,EACXC,QAASA,EACTC,MAAOgM,EAAS5F,QAElB2P,EAAMlF,KAAKwF,GACXP,EAASC,EACX,MAOED,EADY,CALC,CACXhW,UAAWA,EACXC,QAASA,EACTC,MAAO,IAKb,CAEJ,CAmBEsW,CAASrN,EACX,GAAE,CAACA,IAEHhF,eAAA,OAAK7C,UAAU,eAAcC,SAAA,CAC3BF,cAAC0E,EAAG,IACJ5B,eAAA,WAAS7C,UAAU,eAAcC,SAAA,CAC/B4C,eAAA,OAAK7C,UAAU,iBAAgBC,SAAA,CAC7BF,cAAA,MAAAE,SAAI,2CACJF,cAAA,QAAMC,UAAU,UAASC,SAAEsU,IAC3BxU,cAACoV,aAAS,CACNC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAe,EACfvF,SAAU,SAAAwF,GAAI,OAAIzN,EAAQ,CAACyN,EAAKC,WAAW,EAC3CC,2BAA2B,EAC3BC,OAAQ7N,IAGZ9H,cAAA,UAAQC,UAAU,SAAS+C,QAAS6R,EAAU3U,SAAC,WAEjD4C,eAAA,OAAK7C,UAAU,gBAAeC,SAAA,CAC5BF,cAAA,QAAMC,UAAU,UAASC,SAAEyI,IAC3B3I,cAAA,MAAAE,SAAI,sCACJ4C,eAAA,YAAA5C,SAAA,CACEF,cAAA,SAAOmE,QAAU,UAASjE,SAAC,+BAC3B4C,eAAA,UAAQjF,KAAK,UAAUoC,UAAU,UAAU+P,SAxFhC,SAACvB,GACpB6F,EAAU7F,EAAMnG,OAAOmH,MACzB,EAsF4EvP,SAAA,CAChEF,cAAA,UAAQyE,UAAQ,EAACmR,UAAQ,EAAA1V,SAAC,kBACzB2K,EAASmK,KAAI,SAAClN,EAAM0H,GAAG,OAAKxP,cAAA,UAAQyP,MAAOD,EAAItP,SAAA,GAAAiC,OAAsB2D,IAAOgC,EAAKnJ,WAAWoH,OAAO,gBAAe,OAAA5D,OAAM2D,IAAOgC,EAAKlJ,SAASmH,OAAO,kBAA/F+B,EAAO0H,EAAmH,UAIpLxP,cAAA,UAAQC,UAAU,SAAS+C,QAAS0R,EAAaxU,SAAC,iBAGtDF,cAACkI,EAAM,MAIb,ECnHA,IA0Fe2N,GA1FM,WACnB,IAAMxV,EAAWC,cACXC,EAAWC,cACjBC,EAAwBC,mBAAS,CAC/B,CACE/B,UAAW,IAAIsH,KACfrH,QAAS,IAAIqH,KACbuJ,IAAK,eAEP7O,EAAAC,YAAAH,EAAA,GANKqH,EAAInH,EAAA,GAAEoH,EAAOpH,EAAA,GAOpBG,EAAgCJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAxCgV,EAAS/U,EAAA,GAAEE,EAAUF,EAAA,GACtB8J,EAAWlG,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IACtDV,EAAQ2G,aAAY,SAAC1F,GAAK,OAAKA,EAAMjB,KAAK,IAC1CC,EAAQ0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,IA8B1C0W,EAAW,SAACC,GAChBrU,EACElB,EAAU,CACRX,eAAgBkW,IAGtB,EAEA5M,qBAAU,YApCO,SAACF,GAChB,GAAIA,EAAK,GAAGlJ,SACIkJ,EAAK,GAAGnJ,UAAUoW,WACpBjN,EAAK,GAAGlJ,QAAQmW,UACX,CACf,IAAMpW,EAAYmH,IAAOgC,EAAK,GAAGnJ,WAAWoH,SACtCnH,EAAUkH,IAAOgC,EAAK,GAAGlJ,SAASmH,SACxC,GAAuB,GAAnB8E,EAAS5F,OAAY,CACvB,IAAM2P,EAAQ/J,EAASmK,KAAI,SAASC,GAAS,OAAOA,CAAQ,IACxDC,EAAS,CACXvW,UAAWA,EACXC,QAASA,EACTC,MAAOgM,EAAS5F,QAElB2P,EAAMlF,KAAKwF,GACXP,EAASC,EACX,MAOED,EADY,CALC,CACXhW,UAAWA,EACXC,QAASA,EACTC,MAAO,IAKb,CAEJ,CAUEsW,CAASrN,EACX,GAAE,CAACA,IACH,IAAMiO,EAAW,eAAA5U,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAAhBf,GAAW,GAAKa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,IAAMC,KAAK,GAADC,OAAIC,0CAA4B,iBAAgB,CAC1EpE,QACA6M,YACE,CACA7B,QAAS,CAAC,cAAgB,UAAD7G,OAAYlE,MAErC,KAAD,EANM6D,EAAAO,MAQLhC,EAAS,SACVyB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAEL8L,QAAQC,IAAG/L,EAAAU,IAAK,yBAAAV,EAAAW,OAAA,GAAAlB,EAAA,kBAEnB,kBAhBgB,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAiCjB,OAhBckT,EAAY9V,cAAC6C,EAAO,IAC5BC,eAAA,WAAS7C,UAAU,gBAAeC,SAAA,CAChCF,cAAA,MAAAE,SAAI,oCACJF,cAAA,KAAAE,SAAG,sGACHF,cAACoV,aAAS,CACRC,oBAAoB,EACpBC,yBAAyB,EACzBC,aAAe,EACfvF,SAAU,SAAAwF,GAAI,OAAIzN,EAAQ,CAACyN,EAAKC,WAAW,EAC3CC,2BAA2B,EAC3BC,OAAQ7N,IAGV9H,cAAA,UAAQiE,KAAK,SAAShE,UAAU,aAAa+C,QAAS+S,EAAY7V,SAAC,WAI7E,ECvFe8V,GATF,WACWrR,aAAY,SAAC1F,GAAK,OAAKA,EAAMZ,aAAa,IACxCsG,aAAY,SAAC1F,GAAK,OAAKA,EAAMb,eAAe,IAIlE,OAFE4B,cAAC6C,EAAO,GAGd,EC0BeoT,OA5Bf,WACI,IAAMC,EAASC,QAAQxR,aAAY,SAAC1F,GAAK,OAAKA,EAAMhB,KAAK,KAWzD,OAVmB0G,aAAY,SAAC1F,GAAK,OAAKA,EAAMP,cAAc,IAW1DsB,cAACoW,IAAa,CAAAlW,SACV4C,eAACuT,IAAM,CAAAnW,SAAA,CACHF,cAACsW,IAAK,CAACC,KAAK,gBAAgBtB,QAAUjV,cAAC6V,GAAY,MACnD7V,cAACsW,IAAK,CAACC,KAAK,UAAUtB,QAASjV,cAACwW,EAAU,MAC1CxW,cAACsW,IAAK,CAACC,KAAK,IAAItB,QAASjV,cAAC+N,GAAK,MAC/B/N,cAACsW,IAAK,CAACC,KAAK,WAAWtB,QAAUiB,EAASlW,cAAC6R,GAAO,IAAM7R,cAACyW,IAAQ,CAACtR,GAAG,QACrEnF,cAACsW,IAAK,CAACC,KAAK,cAActB,QAASiB,EAASlW,cAACoU,GAAU,IAAMpU,cAACyW,IAAQ,CAACtR,GAAG,QAC1EnF,cAACsW,IAAK,CAACC,KAAK,QAAQtB,QAAUiB,EAASlW,cAAC6L,GAAI,IAAM7L,cAACyW,IAAQ,CAACtR,GAAG,QAC/DnF,cAACsW,IAAK,CAACC,KAAK,SAAStB,QAAUjV,cAACgW,GAAI,UAIpD,E,wCCZMU,GAAgB,CAAElH,IAAK,OAAQmH,aAASC,QAAS,GACjDC,GAAmBC,aAAeJ,GAAeK,GACjDC,GAAQC,YAAe,CAC3BC,QAASL,GACTM,WAAY,SAACC,GAAoB,OAC/BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,QAE5D,IAGOC,IAASC,WAAWC,SAASC,eAAe,SACpD1U,OACHtD,cAACiY,IAAMC,WAAU,CAAAhY,SACfF,cAACmY,IAAQ,CAACnB,MAAOA,GAAM9W,SACrBF,cAACoY,KAAW,CAACpX,QAAS,KAAMqX,UAAWC,aAAatB,IAAO9W,SACzDF,cAACiW,GAAG,U","file":"static/js/main.a188aac6.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    user: null,\n    email: null,\n    token : null,\n    cycle: null,\n    avgLength: null,\n    periodStartDate: null,\n    periodEndDate: null,\n    daysTillPeriod: null,\n    canBleed: false,\n    isBleeding: false, \n    daysleft: null,\n    previousPeriod: [{\n        startDate: null,\n        endDate: null,\n        count: null\n    }],\n    notification: false,\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setLogin: (state, action) =>{\n            state.user = action.payload.user;\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate\n            state.daysTillPeriod = action.payload.cycle;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n            state.notification = action.payload.notification;\n        },\n        setLogout: (state) =>{\n            state.user = null;\n            state.token = null;\n            state.cycle = null;\n            state.daysTillPeriod = null;\n            state.periodStartDate = null;\n            state.periodEndDate = null;\n            state.daysTillPeriod = null;\n            state.canBleed = false;\n            state.isBleeding = false;\n            state.previousPeriod = null;\n            state.notification = false;\n        },\n        setPeriod: (state, action) =>{\n            state.previousPeriod = action.payload.previousPeriod\n        },\n        setCycle: (state, action) =>{\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n        },\n        setNewPeriod: (state, action) => {\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n        },\n        setUserInfo: (state, action) =>{\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setCanBleed: (state, action) =>{\n            state.canBleed = action.payload.canBleed;\n        },\n        setIsBleeding: (state, action) =>{\n            state.isBleeding = action.payload.isBleeding;\n        },\n        setDays: (state, action) =>{\n            state.daysleft = action.payload.daysleft;\n        },\n        setNotificationStatus: (state, action) =>{\n            state.notification = action.payload.notification\n        }\n    }\n})\n\nexport const {setLogin, setLogout, setPeriod, setCycle, setNewPeriod, setUserInfo, setIsBleeding, setCanBleed, setDays, setNotificationStatus} = authSlice.actions;\n\nexport default authSlice.reducer;","import React from 'react'\n\nconst spinner = () => {\n  return (\n    <div className='loading'>\n      <div className='spinner'></div>\n    </div>\n  )\n}\n\nexport default spinner\n","import {Form, Field} from 'react-final-form';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios'\nimport { setLogin } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport Spinner from '../../components/Spinner';\nimport {AiOutlineClose} from 'react-icons/ai';\n\nexport default function SignUp(props){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [err, setErrMsg] = useState();\n    const [loading, setLoading] = useState(false);\n    const onSubmit = async (values) =>{\n        let email = values.email\n        let username = values.username\n        let password = values.password\n        setLoading(true)\n        try{\n            const results = await axios.post(`${process.env.REACT_APP_APIURL}/register`,{\n                email, username, password\n            })\n            const result = await results\n            if (result){\n                const login = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n                    email, password\n            });\n            const user = await login\n            if (user){\n                dispatch(\n                    setLogin({\n                        user: user.data.user.username,\n                        email: user.data.user.email,\n                        token: user.data.accessToken,\n                        cycle: user.data.user.cycle,\n                        avgLength: user.data.avgLength,\n                        periodStartDate: user.data.user.periodStartDate,\n                        periodEndDate: user.data.user.periodEndDate,\n                        previousPeriod: user.data.user.previousPeriod,\n                        isBleeding: user.data.user.isBleeding,\n                        canBleed: user.data.user.canBleed,\n                        notification: user.data.user.notification\n                    })\n                  );\n                  navigate('/AccountSetup')\n                }\n            }\n        }catch(err){\n            setErrMsg(err)\n        }\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n             onSubmit={onSubmit}\n             validate = {values => {\n                const errors = {}\n                if (!values.email){\n                    errors.email = 'Required'\n                }\n                if (!values.username){\n                    errors.username = 'Required'\n                }\n                if (!values.password){\n                    errors.password = 'Required'\n                }\n                if (!values.passwordconfirm){\n                    errors.passwordconfirm = 'Required'\n                }else if (values.password !== values.passwordconfirm){\n                    errors.passwordconfirm = 'Must match'\n                }\n                return errors\n             }}\n             render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                <form onSubmit={handleSubmit}>\n                    <h1>Sign Up</h1>\n                    <Field name='email' >\n                        {({input, meta}) => (\n                        <div className='email-input'>\n                            <input {...input} type= 'email' required/>\n                            <label htmlFor='email' className='login-lable'>\n                                <span className='login-span'>Email<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field name='username'>\n                        {({input, meta})=> (\n                        <div className='username-input'>\n                            <input {...input} type='text' required />\n                            <label htmlFor='username' className='login-lable'>\n                                <span className='login-span'>Username<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='password'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='password' className='login-lable'>\n                                <span className='login-span'>Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='passwordconfirm'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='passwordconfirm' className='login-lable'>\n                                <span className='login-span'>Confirm Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\n                </form>\n            )}\n            />\n        </section>\n    )\n    return content\n}\n","export default __webpack_public_path__ + \"static/media/logo2.18d8e11e.svg\";","export default __webpack_public_path__ + \"static/media/logo.8824417b.svg\";","import {useRef} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CiLogout } from 'react-icons/ci'\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nimport logo from '../../images/logo.svg'\nimport logo2 from '../../images/logo2.svg'\nconst Nav = () => {\n    const dispatch = useDispatch();\n    const cycle = useSelector((state) => state.cycle);\n    const avgLength = useSelector((state) => state.avgLength)\n    const previousPeriod = useSelector((state) => state.previousPeriod)\n\n    const logout = () =>{\n        dispatch(\n            setLogout()\n        )\n    }\n\n  return (\n    <nav className='nav'>\n        <div className='logo'>\n            <img src={logo2} height='50px' width='50px'></img>\n        </div>\n        <input id='mobile-nav-toggle' type='checkbox' /> \n        <label className='mobile-nav-container' htmlFor='mobile-nav-toggle'>\n            <div className='mobile-nav' id ='mobile-nav'></div>\n        </label>\n        <ul className='nav-links' id='nav-links'>\n            <li className='stats'>\n                <h3>Information at a Glance</h3>\n                <span>Cycle Lenght: {cycle} days</span><br/>\n                <span>Average Length: {avgLength} days </span><br />\n                <span>Periods Logged: {previousPeriod.length}</span>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/home'>\n                    Home\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/profile'>\n                    Profile\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/periodinfo'>\n                    Period Info\n                </NavLink>\n            </li>\n            <li className='logout'>\n                <button onClick={logout}>\n                    <CiLogout></CiLogout>\n                </button>\n            </li>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React, { useEffect, useState, useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Moment from 'moment';\nimport { CountdownCircleTimer} from \"react-countdown-circle-timer\";\n\nconst renderTime = (dimension, time) =>{\n    return(\n        <div className='countdown-wrapper'>\n            <div className='days-left'><span>{time}&nbsp;{dimension}</span></div>\n        </div>\n    )\n}\nconst Countdown = (props) => {\n    const [update, forceUpdate] = useReducer(x => x + 1, 0);\n    const getTime = (time) =>Math.ceil((time / daySeconds));\n    const daySeconds = 86400\n    const startDate = Moment(props.startDate).format('YYYY-MM-DD')\n    const endDate = Moment(props.endDate).format('YYYY-MM-DD')\n    let todaysDate = Date.now() / 1000;\n    const startTime = new Date(startDate).getTime() / 1000;\n    const endTime = new Date(endDate).getTime() / 1000;\n    const duration = endTime - startTime;\n    const remainingTime = (endTime - todaysDate);\n    const half = (duration/2)\n    const quarter = (duration/4)\n    const timerProps = {\n    isPlaying: true,\n    size: 500,\n    strokeWidth: 10,\n    };\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors={[props.color1, props.color2, props.color3, props.color3]}\n              colorsTime={[duration , half, quarter, 0]}\n              duration={duration}\n              initialRemainingTime={remainingTime}\n            >\n            {({elapsedTime ,color}) => (\n                <span style={{color}}>\n                    {renderTime('days', getTime(duration- (duration - remainingTime)))}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import { Datepicker, DatepickerEvent} from \"@meinefinsternis/react-horizontal-date-picker\";\nimport { useState, useEffect} from \"react\";\nfunction Datestrip(props) {\n  const [date, setDate] = useState({\n    startValue: Date.parse(props.startValue),\n    endValue: new Date(props.endValue),\n    rangeDates: [],\n  });\n  useEffect(() =>{\n    setDate({\n      startValue: Date.parse(props.startValue),\n      endValue: new Date(props.endValue)\n    })\n  }, [props.startValue, props.endValue])\n  return (\n    <div className=\"horizontal-date-picker\">\n      <Datepicker\n        startValue={date.startValue}\n        endValue = {date.endValue}\n      />\n    </div>\n  )\n}\n\nexport default Datestrip\n","import React from 'react'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n  const footer = (\n    <footer>\n      <span>&copy; {year} <a href='albertfriend.dev' target='_blank'>Albert Friend</a></span>\n    </footer>\n  )\n  return footer \n}\n\nexport default Footer\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodNotActive = (props) => {\n  return (\n    <div className='page-wrapper'>\n      <Nav/>\n      <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <Datestrip\n                  startValue = {props.periodStartDate}\n                  endValue = {props.periodEndDate}\n            />\n          <div className=\"period-countdown\">\n              <h2>Your next period is in </h2>\n              <Countdown startDate = {props.startDate} endDate = {props.endDate} color1='#40bf32' color2= '#e0e20c' color3= '#FA2C00' ></Countdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' className='button' onClick={props.onClick}>Yes</button>\n          </div>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PeriodNotActive\n","import React, {useEffect, useReducer} from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodActive = (props) => {\n  const [update, forceUpdate] = useReducer(x => x + 1, 0);\n  useEffect(() =>{\n    forceUpdate()\n  }, [props.startDate, props.endDate, props.periodStartDate, props.periodEndDate])\n  // console.log(props.startDate, props.endDate, props.periodStartDate, props.periodEndDate)\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n        <section className='home'>\n            <h1 className='welcome-text'>Welcome back, {props.userName}</h1>\n            <Datestrip\n                startValue = {props.periodStartDate}\n                endValue = {props.periodEndDate}\n            />\n            <div className=\"period-countdown\">\n                <h2>Your period should be over in</h2>\n                <Countdown startDate = {props.startDate} endDate = {props.endDate} color1='#40bf32' color2= '#e0e20c' color3= '#FA2C00'></Countdown>\n            </div>\n            <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period ended?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n            </div>\n        </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default PeriodActive\n","import React from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst Countdown = (props) => {\n    const renderTime = (message) =>{\n        return(\n            <div className='countdown-wrapper'>\n                <div className='days-left'><span>{props.message}</span></div>\n            </div>\n        )\n    }\n    const timerProps = {\n        isPlaying: true,\n        size: 500,\n        strokeWidth: 10\n      }\n\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors='#EAE8FF'\n            >\n            {({color}) => (\n                <span style={{color}}>\n                    {renderTime(props.message)}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodHere = (props) => {\n    return (\n        <div className='page-wrapper'>\n            <Nav />\n            <section className=\"home content\">\n                <h1>Welcome back, {props.userName}</h1>\n                <Datestrip\n                    startValue = {props.periodStartDate}\n                    endValue = {props.periodEndDate}\n                />\n                <div className=\"period-countdown\">\n                    <h2>Your period might be here</h2>\n                    <div className='inner-circle'>\n                        <BlankCountdown startDate = {props.startDate} endDate = {props.endDate}></BlankCountdown>\n                    <span>Today</span>\n                    </div>\n                </div>\n                <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period started?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n                </div>\n            </section>\n            <Footer />\n        </div>\n      )\n}\n\nexport default PeriodHere\n","import Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Footer from '../footer/Footer';\nconst NeedInfo = (props) => {\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n          <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <div className=\"period-countdown\">\n              <h2>Error</h2>\n              <BlankCountdown message = {props.message}></BlankCountdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n          </div>\n          </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default NeedInfo\n\n","import axios from \"axios\";\n\nconst sendPeriodStatus = async (email, isBleeding, canBleed, token) => {\n    axios.post(`${process.env.REACT_APP_APIURL}/user/setperiodinfo`,{\n      email, isBleeding, canBleed\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\nconst sendUpdatedPeriod = async (email, periodStartDate, periodEndDate, token) => {\nconst user = axios.post(`${process.env.REACT_APP_APIURL}/user/updateperiod`, {\n    email, periodStartDate, periodEndDate\n},{\n    headers: {'Authorization': `Bearer ${token}`},\n})\nreturn user\n}\n\nconst sendPreviousPeriod = async (email, previousPeriod, token) => {\naxios.post(`${process.env.REACT_APP_APIURL}/user/addpreviousperiod`, {\n    email, previousPeriod\n},{\n    headers: {'Authorization': `Bearer ${token}`},\n})\n}\n\nconst removeCurrentDates = async(email, token) =>{\n    const user = axios.post(`${process.env.REACT_APP_APIURL}/user/nullperioddates`, {\n        email\n    },{\n        headers: {'Authorization': `Bearer ${token}`},\n    })\n    return user\n}\n\nconst sendPeriodInfo = async (email, startDate, endDate, cycle, avgLength, token) =>{\n    axios.post(`${process.env.REACT_APP_APIURL}/user/addperiod`, {\n      email, startDate, endDate, cycle, avgLength\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n  export{sendPeriodStatus, sendUpdatedPeriod, sendPreviousPeriod, removeCurrentDates, sendPeriodInfo}","import axios from \"axios\";\n\nasync function fetchUserInfo(email, token){\n    const result = axios.post(`${process.env.REACT_APP_APIURL}/user/getuserinfo`,{\n      email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      }\n    )\n    const user = await result\n    if (user){\n        const userInfo = {\n          periodStartDate: user.data.user.periodStartDate,\n          avgLength: user.data.user.avgLength,\n          cycle: user.data.user.cycle,\n          periodEndDate: user.data.user.periodEndDate,\n          previousPeriod: user.data.user.previousPeriod,\n          canBleed: user.data.user.canBleed,\n          isBleeding: user.data.user.isBleeding\n        }\n      return(userInfo)\n    }\n    else{\n        return(null)\n    }\n}\n\nexport {fetchUserInfo}","import Moment from 'moment';\n\nfunction avgPeriodLength(previousPeriod){\n    let totalDays = 0\n    let totalCycle = 0\n    let oldStartDate = null;\n    let cycleCount = 0\n    const periodLogged = previousPeriod.length;\n    if (periodLogged === 1){\n        return (false)\n    }\n    previousPeriod.forEach(date => {\n      totalDays += Moment(date.endDate).diff(date.startDate, 'days')\n      if (oldStartDate != null){\n        const monthDif = Moment(oldStartDate).diff(date.startDate, 'month', true);\n        if (Math.abs(monthDif) < 1.5){\n          totalCycle += Math.abs(Moment(date.startDate).diff(oldStartDate, 'days'))\n          cycleCount += 1\n        }\n      }else{\n        oldStartDate = Moment(date.startDate);\n      }\n    })\n    const avgLength =(Math.round(totalDays/periodLogged))\n    const cycle = (Math.round(totalCycle/cycleCount))\n    return{avgLength, cycle}\n}\n\nfunction estimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength){\n    let lastPeriod = null\n    let startDate;\n    let endDate;\n    let todaysDate = new Date()\n    todaysDate = Moment(todaysDate).format()\n    if((!periodStartDate || !periodEndDate) && previousPeriod && cycle && avgLength){\n        previousPeriod.forEach(date => {\n          if (lastPeriod === null){\n            lastPeriod = date.startDate\n          }else if(lastPeriod < date.startDate){\n            lastPeriod = date.startDate\n          }\n        })\n        const monthDif = Moment(todaysDate).diff(lastPeriod, 'month')\n        if(cycle && avgLength){\n          if( monthDif > 1){\n            const estimateLastPeriod = Moment(lastPeriod).add((monthDif), 'months')\n            startDate = Moment(estimateLastPeriod).add(cycle, 'days');\n            endDate = Moment(estimateLastPeriod).add(avgLength, 'days');\n          }else{\n            lastPeriod = Moment(lastPeriod).format()\n            startDate = Moment(lastPeriod).add(cycle, 'days');\n            endDate = Moment(startDate).add(avgLength, 'days')\n          }\n        }\n        return({startDate, endDate})\n      }else{\n        return(false)\n      }\n    }\n\n    function countdownToPeriod(startDate, endDate){\n      // const daySeconds = 86400\n      // const fiveDays = 432000\n      let todaysDate = Date.now() / 1000;\n      const startDay = Moment(startDate).format('YYYY-MM-DD')\n      const endDay = Moment(endDate).format('YYYY-MM-DD')\n      const startTime = new Date(startDay).getTime() / 1000;\n      const endTime = new Date(endDay).getTime() / 1000;\n      const duration = endTime - startTime;\n      const remainingTime = endTime - todaysDate;\n      return{startTime, duration, remainingTime}\n    }\n// function countdownCalc(startDate, endDate){\n//   const daySeconds = 86400;\n//   const fiveDays = 432000;\n//   let todaysDate = Date.now() / 1000;\n//   if(startDate && endDate){\n    // const startDay = Moment(startDate).format('YYYY-MM-DD')\n    // const endDay = Moment(endDate).format('YYYY-MM-DD')\n    // const startTime = new Date(startDay).getTime() / 1000;\n    // const endTime = new Date(endDay).getTime() / 1000;\n    // const duration = endTime - startTime;\n    // const remainingTime = endTime - todaysDate;\n    // return {duration, remainingTime}\n//   }else{\n//     return false\n//   }\n// }\nexport {avgPeriodLength, estimateDate, countdownToPeriod}","import { useEffect, useState, useReducer } from \"react\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport { setCycle, setIsBleeding, setNewPeriod, setUserInfo, setCanBleed, setPeriod} from '../../state';\nimport Moment from 'moment';\nimport axios from \"axios\";\nimport PeriodNotActive from \"./PeriodNotActive\";\nimport PeriodActive from \"./PeriodActive\";\nimport PeriodHere from \"./PeriodHere\";\nimport NeedInfo from \"./NeedInfo\";\nimport { sendPeriodStatus, sendUpdatedPeriod, sendPreviousPeriod, removeCurrentDates, sendPeriodInfo} from \"../../utils/sendUserInfo\";\nimport { fetchUserInfo } from '../../utils/fetchUserInfo'\nimport { avgPeriodLength, estimateDate} from \"../../utils/calcPeriodInfo\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const cycle = useSelector((state) => state.cycle)\n  const userName = useSelector((state) => state.user)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const avgLength = useSelector((state) => state.avgLength)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const [isBleeding, setBleeding] = useState(useSelector((state) => state.isBleeding))\n  const canBleed = useSelector((state) => state.canBleed)\n  const [needInfo, setInfo] = useState(true)\n  const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n  let todaysDate = new Date()\n  todaysDate = Moment(todaysDate).format('YYYY-MM-DD')\n  const cycleStartDate = Moment(periodStartDate).subtract(cycle, 'days')\n  const setUser = async () =>{\n    const userInfo = await fetchUserInfo(email, token)\n    dispatch(\n      setUserInfo({\n        periodStartDate: userInfo.periodStartDate,\n        periodEndDate: userInfo.periodEndDate,\n        canBleed: userInfo.canBleed,\n        isBleeding: userInfo.isBleeding,\n        previousPeriod: userInfo.previousPeriod,\n      })\n    )\n    const avgLengths = await avgPeriodLength(previousPeriod)\n    if (avgLengths){\n      const cycle = avgLengths.cycle;\n      const avgLength = avgLengths.avgLength\n      dispatch(\n        setCycle({\n          cycle: cycle,\n          avgLength: avgLength\n        })\n      )\n    }\n    const estimateDates = await estimateDate(periodStartDate, periodEndDate, previousPeriod, avgLengths.cycle, avgLengths.avgLength)\n    if (estimateDates){\n      const startDate = Moment(estimateDates.startDate).format('YYYY-MM-DD')\n      const endDate = Moment(estimateDates.endDate).format('YYYY-MM-DD')\n      dispatch(\n        setNewPeriod({\n          periodStartDate: startDate,\n          periodEndDate: endDate\n        })\n      )\n      if(startDate && endDate){\n        const test = await sendPeriodInfo(email, estimateDates.startDate, estimateDates.endDate, avgLengths.cycle, avgLengths.avgLength, token)\n      }\n    }\n    setInfo(false)\n    if (Moment(periodStartDate).format('YYYY-MM-DD') == todaysDate || Moment(periodStartDate).format('YYYY-MM-DD') < todaysDate && !isBleeding){\n      dispatch(\n        setCanBleed({\n          canBleed: true\n        })\n      )\n    }\n  }\n\nconst periodStarted = async () =>{\n  if (Moment(periodStartDate).format('YYYY-MM-DD') != todaysDate){\n    const newEndDate = Moment(todaysDate).add(avgLength, 'days').format('YYYY-MM-DD')\n    const update = sendUpdatedPeriod(email, todaysDate, newEndDate, token)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n    setBleeding(true)\n  }else{\n    const update = sendUpdatedPeriod(email, periodStartDate, periodEndDate, token)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n    setBleeding(true)\n  }\n}\n\nconst periodEnded = async () =>{\n  if (periodEndDate != todaysDate){\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: todaysDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }else{\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: periodEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }\n  sendPeriodStatus(email, false, canBleed, token)\n  removeCurrentDates(email, token)\n  setBleeding(false)\n}\nconst test = () =>{\n  console.log('test')\n  window.location.reload(true)\n}\nuseEffect(()=>{\n  setUser()\n},[isBleeding, periodStartDate])  \n\nconst home = (isBleeding, canBleed, needInfo) =>{\n  if (!isBleeding && !canBleed && !needInfo){\n    return <PeriodNotActive cycle = {cycle} userName = {userName} endDate = {periodStartDate} startDate = {cycleStartDate} onClick = {periodStarted} periodStartDate={periodStartDate} periodEndDate = {periodEndDate}/>\n  } else if(canBleed){\n    return <PeriodHere userName = {userName} onClick = {periodStarted} endDate = {periodStartDate} startDate = {todaysDate} startValue={periodStartDate} endValue = {periodEndDate}/>\n  } else if(needInfo){\n    return <NeedInfo userName = {userName} onClick = {null} message = 'More logs are required' />\n  }else{\n    return <PeriodActive userName = {userName} onClick = {periodEnded} endDate = {periodEndDate} startDate = {periodStartDate} periodStartDate={periodStartDate} periodEndDate = {periodEndDate} />\n  }\n}\n\nreturn home(isBleeding, canBleed, needInfo)\n\n}\nexport default Home\n","import {Form, Field} from 'react-final-form';\nimport { Link, useResolvedPath } from 'react-router-dom';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../../state';\nimport Spinner from '../../components/Spinner';\nimport { useSelector } from \"react-redux\";\nimport {AiOutlineClose} from 'react-icons/ai'\nfunction Login(props){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const [errormsg, setError] = useState()\n    const [regError, setRegError] = useState(\"\");\n    async function onSubmit(values){\n        setLoading(true)\n        let email = values.email\n        let password = values.password\n        const loginTry = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n            email, password\n        }).catch(function (error){\n            if(error.response){\n                setError(error.response.data.error)\n                console.log(error.response.data.error)\n            }\n            setLoading(false)\n        });\n        const user = await loginTry\n        if (user){\n            dispatch(\n                setLogin({\n                  user: user.data.user.username,\n                  email: user.data.user.email,\n                  token: user.data.accessToken,\n                  cycle: user.data.user.cycle,\n                  avgLength: user.data.avgLength,\n                  periodStartDate: user.data.user.periodStartDate,\n                  periodEndDate: user.data.user.periodEndDate,\n                  previousPeriod: user.data.user.previousPeriod,\n                  isBleeding: user.data.user.isBleeding,\n                  canBleed: user.data.user.canBleed,\n                  notification: user.data.user.notification\n                })\n              );\n              navigate('/home')\n        };\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n                onSubmit={onSubmit}\n                validate = {values => {\n                    const errors= {}\n                    if (!values.email){\n                        errors.email = 'Required'\n                    }\n                    if (!values.password){\n                        errors.password = 'Required'\n                    }\n                    return errors\n                }}\n                render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                    <form onSubmit={handleSubmit}>\n                        <h1>Sign In</h1>\n                        <span className='message'>{errormsg}</span>\n                        <Field name='email'>\n                            {({input, meta})=> (\n                            <div className='email-input'>\n                                <input {...input} type='email' required />\n                                <label htmlFor='email' className='login-lable'>\n                                    <span className='login-span'>Email<small>*</small></span>\n                                </label>\n                                {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                            </div>\n                            )}\n                        </Field>\n                        <Field name='password'>\n                            {({input, meta}) => (\n                                <div className='password-input'>\n                                    <input {...input} type ='password' required></input>\n                                    <label htmlFor='password' className='login-lable'>\n                                        <span className='login-span'>Password<small>*</small></span>\n                                    </label>\n                                    {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                                </div>\n                            )}\n                        </Field>\n                        <div className='remember-me'>\n                            <input type='checkbox' id='remember' name='chkbox'></input>\n                            <label htmlFor='chkbox'>Remember Me</label>\n                        </div>\n                        <button type='submit' disabled={submitting}>Submit</button>\n                    </form>\n                )}\n            />\n        </section>\n    )\n    return content\n};\n\nexport default Login","import React, { useState } from 'react';\nimport Login from '../loginPage/Login';\nimport SignUp from '../signupPage/SignUp';\nfunction Index() {\n    const [loginOpen, setLogin] = useState(false)\n    const [newAccount, setAccount] = useState(false)\n    const openLogin = () =>{\n        setLogin(!loginOpen)\n    }\n    const openNewAccount = () =>{\n        setAccount(!newAccount)\n    }\n    const content = (\n        <section className='index-wrapper content'>\n            <div className='index-background-img'></div>\n            <h1>Welcome,</h1>\n            <p>You can use this simple web application to track your menstrual cycle. More features are being added soon. Please note this application is still in the early stages, as a result, the accuracy of the tracking is still being tweaked, and pages might be a little slow to load.</p>\n            <hr></hr>\n            <div className='login-button-container'>\n                <span>Already have an account? <button onClick={openLogin}>Login here</button></span>\n                <span className='signup'>or you can<button onClick={openNewAccount}>make one here</button></span>\n            </div>\n            {loginOpen &&\n                <div className='page-fade'>\n                    <Login onShow={openLogin} />\n                </div>\n            }\n            {newAccount &&\n                <div className='page-fade'>\n                    <SignUp onShow={openNewAccount} />\n                </div>\n            }\n        </section>\n    )\n  return content\n}\n\nexport default Index\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from \"moment\";\nimport { useMemo } from 'react';\n\nfunction ProfileCal(props) {\n    const localizer = momentLocalizer(moment)\n    const views = 'month'\n    console.log(props.event)\n  return (\n    <div className=\"profile-cal\">\n      <Calendar\n        localizer={localizer}\n        events={props.event}\n        startAccessor= {props.start}\n        endAccessor= {props.end}\n        views = {views}\n        // selectable = {false}\n      />\n    </div>\n  )\n}\n\nexport default ProfileCal\n","export class Event{\n    constructor(title, start, end, allDay){\n        this.title = title;\n        this.start = start;\n        this.end = end;\n        this.allDay = allDay;\n    }\n}\n\nexport class Events{\n    constructor(){\n        this.events=[]\n    }\n    newEvent(title, start, end, allDay){\n        this.events.push(new Event(title, start, end, allDay))\n    }\n    get allEvents(){\n        return this.events\n    }\n}\n\n","import React from 'react'\n\nfunction PageFade(props) {\n  return (\n    <div className='page-fade'>\n      {props.content}\n    </div>\n  )\n}\nexport default PageFade","import React from 'react'\n\nconst DeleteAccout = (props) => {\n  return (\n    <div className='warning-box'>\n        <h1>Please enter your email adress to delete your account.</h1>\n        <form onSubmit={props.deleteAccount} className='delete-account'>\n        <div className='email-input'>\n            <input type='email' value={props.deletedEmail} onChange={props.emailChange}></input>\n            <label htmlFor='email' className='login-lable'>\n            <span className='login-span'>Email</span>\n            </label>\n        </div>\n        <button className='button' type='submit'>Delete</button>\n        <button className='button' onClick={props.openDeleteBox}>Cancel</button>\n        </form>\n  </div>\n  )\n}\n\nexport default DeleteAccout\n","import React from 'react'\n\nfunction ChangePassword(props) {\n  return (\n    <div className='warning-box'>\n      <h1>Would you like to change your password?</h1>\n      <form className='password-change' onSubmit={props.changePassword}>\n        <div className='password-input'>\n          <input type = 'password' value={props.oldPassword} onChange={props.oldPasswordChange}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>Old Password<small>*</small></span>\n          </label>\n        </div>\n        <div className='password-input'>\n          <input type = 'password' value={props.newPassword} onChange={props.newPasswordChange}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>New Password<small>*</small></span>\n          </label>\n        </div>\n        <div className='password-input'>\n          <input type = 'password' value={props.confirmNewPassword} onChange={props.confirmPassword}></input>\n          <label htmlFor='password' className='login-lable'>\n              <span className='login-span'>Confirm Password<small>*</small></span>\n          </label>\n        </div>\n        <button className='button' type='submit'>Submit</button> \n      </form>\n      <button className='text-button' onClick = {props.close}>Go back</button>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import {useState, useRef, useEffect} from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios, { Axios } from 'axios';\nimport { setNotificationStatus } from '../../state';\nimport PhoneInput from 'react-phone-input-2'\nimport 'react-phone-input-2/lib/high-res.css'\nfunction Notication(props) {\n    const dispatch = useDispatch();\n    const notification = useSelector((state) => state.notification);\n    const email = useSelector((state) => state.email);\n    const token = useSelector((state) => state.token);\n    const [message, setmMessage] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const close = props.close\n    const teleElement = useRef()\n    useEffect(() =>{\n        teleElement.current = phoneNumber\n    },[phoneNumber])\n    const numberChange = (number) =>{\n        setPhoneNumber(number)\n        console.log(phoneNumber)\n    }\n    const submit = async () =>{\n        if (notification){\n            const status = false\n            const number = null\n            const res = await axios.post(`${process.env.REACT_APP_APIURL}/user/setnotificationstatus`,{\n                email, status, number\n            },{\n                headers: {'Authorization': `Bearer ${token}`},\n            })\n            dispatch(\n                setNotificationStatus({\n                    notification: res.data.notification\n                })\n            )\n            close()\n        }else if(!notification){\n            const status = true;\n            const number = phoneNumber\n            const res = await axios.post(`${process.env.REACT_APP_APIURL}/user/setnotificationstatus`,{\n                email, status, number\n            },{\n                headers: {'Authorization': `Bearer ${token}`},\n            })\n            dispatch(\n                setNotificationStatus({\n                    notification: res.data.notification\n                })\n            )\n            close()\n        }\n    }\n    const test = () =>{\n        console.log(phoneNumber)\n    }\n  return (\n    <div className='warning-box'>\n        {notification &&\n            <div className='notification'>\n                <h1>Would you like to stop notifications?</h1>\n                <div className='button-container'>\n                    <button className='button' onClick={submit}>Yes</button>\n                    <button className='button' onClick={props.close}>No</button>\n                </div>\n            </div>\n\n        }\n        {!notification &&\n            <div className='notification'>\n                <h1>Would you like to receive text notification?</h1>\n                <div className='button-container'>\n                    <div className='toggle-on'>\n                        <PhoneInput\n                            onChange={numberChange}\n                            country={'us'}\n                            value = {phoneNumber}\n                        />\n                    </div>\n                    <button className='button' type='submit' onClick={submit}>Submit</button>\n                    <button className='text-button' onClick={props.close}>Go Back</button>\n                </div>\n            </div>\n        }\n    </div>\n  )\n}\n\nexport default Notication\n","import React from 'react'\nfunction Settings(props) {\n  return (\n    <div className='warning-box'>\n        <div className='inner-account-settings'>\n            <div className='setting-option'>\n                <button onClick={props.openPassword}>Password Change</button>\n            </div>\n            <div className='setting-option'>\n                <button onClick={props.openNotication}>Toggle Notication</button>\n            </div>\n            <div className='setting-option'>\n                <button onClick={props.openDeleteBox}>Delete Account</button>\n            </div>\n            <button className='text-button' onClick={props.close}>Go Back</button>\n        </div>\n    </div>\n  )\n}\n\nexport default Settings\n","import {useState, useEffect} from 'react';\nimport Moment from 'moment';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Nav from '../navbar/Nav'\nimport {useNavigate} from 'react-router-dom';\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport {fetchUserInfo} from '../../utils/fetchUserInfo'\nimport Footer from '../footer/Footer';\nimport ProfileCal from '../../components/ProfileCal';\nimport {Events } from '../../classes/events';\nimport PageFade from '../../components/PageFade'\nimport DeleteAccout from './DeleteAccout';\nimport ChangePassword from './ChangePassword';\nimport Notication from './Notication';\nimport Settings from './Settings';\nconst Proflie = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  // const user = fetchUserInfo(email, token)\n  const [open, setOpen] = useState(false);\n  const [deleteBox, setDelete] = useState(false);\n  const [showPasswordChange, setPasswordChange] = useState(false);\n  const [openNoticationBox, setNotication] = useState(false);\n  const [deletedEmail, setDeletedEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmPassword] = useState('');\n  const [erroMsg, setErrorMsg] = useState('');\n  const notification = useSelector((state) => state.notification);\n  console.log(notification)\n  let periodEvent = new Events()\n  const [pEvents, setEvents] = useState(periodEvent.allEvents)\n  const checkUserInfo = async () => {\n    if (pEvents.length == 0){\n      for(const periods in previousPeriod){\n        let start = Moment(previousPeriod[periods].startDate)\n        let end = Moment(previousPeriod[periods].endDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n      if (periodStartDate && periodEndDate){\n        let start = Moment(periodStartDate)\n        let end = Moment(periodEndDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n    }\n  }\n  const emailChange = (email) => {\n    setDeletedEmail(email.target.value)\n    console.log(email.target.value)\n  }\n  const oldPasswordChange = (password) =>{\n    setOldPassword(password.target.value)\n  }\n  const newPasswordChange = (password) =>{\n    setNewPassword(password.target.value)\n  }\n  const confirmPassword = (password) =>{\n    setConfirmPassword(password.target.value)\n  }\n  const settingToggle = () =>{\n    setOpen(!open)\n  }\n  const noticationBox = () => {\n    setNotication(!openNoticationBox)\n  }\n  const openDeleteBox = () =>{\n    setDelete(!deleteBox)\n  }\n  const openPasswordChange = () =>{\n    setPasswordChange(!showPasswordChange)\n  }\n  const deleteAccount = () =>{\n    if (deletedEmail === email){\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/deleteuser`, {\n        email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      dispatch(\n        setLogout()\n      )\n      navigate('/')\n    }\n  }\n  const changePassword = () =>{\n    if (newPassword == confirmNewPassword){\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/changepassword`,{\n        email, oldPassword, newPassword\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n    }else(\n      setErrorMsg('New passwords do not match')\n    )\n  }\n  useEffect(() =>{\n    checkUserInfo()\n  },[])\n\n  const content = (\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='profile content'>\n        <h1 className='welcome-text'>Hello {userName},</h1>\n        <div className='calander'>\n          <h2>Here is how you month looks</h2>\n          <ProfileCal\n            event= {pEvents}\n          />\n        </div>\n        <div className='account-settings'>\n          <button onClick={settingToggle}>Settings</button>\n          {open &&\n            <PageFade content = {<Settings openPassword = {openPasswordChange} openNotication = {noticationBox} openDeleteBox= {openDeleteBox} close={settingToggle} />} />\n          }\n        </div>\n        {deleteBox &&\n        <PageFade content = {<DeleteAccout deleteAccount ={deleteAccount} deletedEmail={deletedEmail} emailChange={emailChange} openDeleteBox={openDeleteBox}/>} />\n        }\n        {openNoticationBox &&\n         <PageFade content= {<Notication close ={noticationBox} />} />\n        }\n        {showPasswordChange &&\n          <PageFade content= {<ChangePassword changePassword = {changePassword} oldPassword = {oldPassword} oldPasswordChange= {oldPasswordChange} newPassword = {newPassword} newPasswordChange = {newPasswordChange} confirmNewPassword = {confirmNewPassword} confirmPassword = {confirmPassword} close={openPasswordChange}/> } />\n        }\n      </section>\n      <Footer />\n    </div>\n  )\n  return content\n}\n\nexport default Proflie\n\n\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport Footer from '../footer/Footer';\nimport {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Moment from 'moment';\nimport axios from 'axios';\nimport { setPeriod } from '../../state';\n\n\nfunction PeriodInfo() {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const userInfo = useSelector((state) => state.previousPeriod)\n  const [removeDate, setRemove] = useState()\n  const [message, setMessage] = useState()\n  const [periodMessage, setPMessage] = useState()\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const optionChange = (event) =>{\n    setRemove(event.target.value)\n  }\n  const removePeriod = async () =>{\n    const res =  await axios.post(`${process.env.REACT_APP_APIURL}/user/removePeriod`,{\n      email, removeDate},{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      if (res.status === 201){\n        dispatch(\n          setPeriod({\n            previousPeriod: res.data.previousPeriod\n          })\n        )\n        setMessage(res.data.message)\n      }\n    }\n    const userData = (date) =>{\n      if (date[0].endDate){\n        const start = date[0].startDate.getDate()\n        const end = date[0].endDate.getDate()\n        if (start != end){\n          const startDate = Moment(date[0].startDate).format()\n          const endDate = Moment(date[0].endDate).format()\n          if (userInfo.length != 0){\n            const dates = userInfo.map(function(element){return element;})\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: userInfo.length,\n            }\n            dates.push(period)\n            setDates(dates)\n          }else{\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: 0,\n            }\n            let dates = [period]\n            setDates(dates)\n          }\n        }\n      }\n    }\n    const setDates = (dates) =>{\n      dispatch(\n        setPeriod({\n          previousPeriod: dates\n        })\n      );\n    }\n    const addPeriod = async () =>{\n      const sendDates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n        email, userInfo},{\n          headers: {'Authorization': `Bearer ${token}`},\n        }\n      )\n      const res = await sendDates\n      setPMessage(`${res.data.message}!`)\n    };\n    \n    useEffect(()=>{\n      userData(date)\n    },[date]);\n  const content =\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='info content'>\n        <div className='logging-period'>\n          <h1>Do you have any more period(s) to log?</h1>\n          <span className='message'>{periodMessage}</span>\n          <DateRange\n              editableDateInputs={true}\n              showMonthAndYearPickers={false}\n              fixedHeight = {true}\n              onChange={item => setDate([item.selection])}\n              moveRangeOnFirstSelection={false}\n              ranges={date}\n              // scroll = {{enabled: true}}\n            />\n          <button className='button' onClick={addPeriod}>Add</button>\n        </div>\n        <div className='remove-period'>\n          <span className='message'>{message}</span>\n          <h2>Or would you like to remove some?</h2>\n          <fieldset>\n            <label htmlFor = 'periods'>Select a period to remove:</label>\n            <select name='periods' className='periods' onChange={optionChange}>\n              <option disabled selected>Select a date</option>\n              {userInfo.map((date, key) => <option value={key} key={date + key}>{`${Moment(date.startDate).format('MMMM Do YYYY')} - ${Moment(date.endDate).format('MMMM Do YYYY')}`}</option>\n              )}\n            </select>\n          </fieldset>\n          <button className='button' onClick={removePeriod}>Remove</button>\n        </div>\n      </section>\n      <Footer />\n    </div>\n\n  return content;\n}\n\nexport default PeriodInfo\n","import {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useDispatch } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport Moment from 'moment';\nimport {setPeriod} from '../../state';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Spinner from '../../components/Spinner'\nimport Waves from '../../components/Waves'\n\n\nconst AccountSetup = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const [isLoading, setLoading] = useState(false)\n  const userInfo = useSelector((state) => state.previousPeriod);\n  const email = useSelector((state) => state.email)\n  const token = useSelector((state) => state.token)\n\n  const userData = (date) =>{\n    if (date[0].endDate){\n      const start = date[0].startDate.getDate()\n      const end = date[0].endDate.getDate()\n      if (start != end){\n        const startDate = Moment(date[0].startDate).format()\n        const endDate = Moment(date[0].endDate).format()\n        if (userInfo.length != 0){\n          const dates = userInfo.map(function(element){return element;})\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: userInfo.length,\n          }\n          dates.push(period)\n          setDates(dates)\n        }else{\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: 0,\n          }\n          let dates = [period]\n          setDates(dates)\n        }\n      }\n    }\n  }\n  const setDates = (dates) =>{\n    dispatch(\n      setPeriod({\n        previousPeriod: dates\n      })\n    );\n  }\n\n  useEffect(()=>{\n    userData(date)\n  },[date]);\n  const accountInfo = async () =>{\n    setLoading(true)\n    try{\n      const dates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n          email,\n          userInfo\n          },{\n            headers: {'Authorization': `Bearer ${token}`},\n          }\n          );\n          if (dates){\n            navigate('/Home')\n          }\n    }catch(err){\n      console.log(err)\n    }\n  }\n  const setup = isLoading ? <Spinner /> : (\n        <section className='setup-wrapper'>\n          <h1>When was your last few periods?</h1>\n          <p>Just select them below, and once your done hit next. Please try to make them as close as you can.</p>\n          <DateRange\n            editableDateInputs={true}\n            showMonthAndYearPickers={false}\n            fixedHeight = {true}\n            onChange={item => setDate([item.selection])}\n            moveRangeOnFirstSelection={false}\n            ranges={date}\n            // scroll = {{enabled: true}}\n          />\n          <button type='submit' className='nextButton' onClick={accountInfo}>Next</button>\n        </section>\n  )\n  return setup\n}\n\nexport default AccountSetup\n","import Datestrip from './Datestrip';\nimport { useDispatch,useSelector } from 'react-redux';\nimport Spinner from './Spinner';\n\nconst Test = () => {    \n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n    const calendar = (\n      <Spinner />\n    )\n    return calendar\n}\n\nexport default Test\n","import { BrowserRouter, Navigate, Routes, Route } from \"react-router-dom\";\nimport SignupForm from './pages/signupPage/SignUp'\nimport { useSelector } from \"react-redux\";\nimport Home from './pages/homePage/Home'\nimport Index from './pages/index/Index'\nimport Proflie from \"./pages/profilePage/Proflie\";\nimport PeriodInfo from \"./pages/periodInfo/PeriodInfo\";\nimport AccountSetup from \"./pages/accountSetupPage/AccountSetup\";\nimport Test from \"./components/Test\";\nfunction App() {\n    const isAuth = Boolean(useSelector((state) => state.token));\n    const newAccount = useSelector((state) => state.previousPeriod);\n    let isNew;\n    // function newAccountCheck(newAccount){\n    //     if (newAccount.length < 1){\n    //         isNew = true;\n    //     }else{\n    //         isNew = false;\n    //     }\n    // }\n    // newAccountCheck(newAccount)\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/accountsetup' element={ <AccountSetup/>} />\n                <Route path='/signup' element={<SignupForm />} />\n                <Route path='/' element={<Index />} />\n                <Route path='/profile' element={ isAuth ? <Proflie /> : <Navigate to='/' />} />\n                <Route path='/periodinfo' element={isAuth ? <PeriodInfo /> : <Navigate to='/' />} />\n                <Route path='/home' element= {isAuth ? <Home /> : <Navigate to='/' />}/>\n                <Route path='/Test1' element= {<Test />} />\n            </Routes>\n        </BrowserRouter>\n);\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\nimport './styles/styles.css';\nimport App from './App';\nimport { configureStore, ConfigureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport authReducer from \"./state\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}