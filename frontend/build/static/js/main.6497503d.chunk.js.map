{"version":3,"sources":["state/index.js","components/Spinner.jsx","pages/signupPage/SignUp.jsx","utils/fetchUserInfo.js","utils/calcPeriodInfo.js","pages/navbar/Nav.jsx","components/Countdown.jsx","components/Datestrip.jsx","pages/footer/Footer.jsx","pages/homePage/PeriodNotActive.jsx","pages/homePage/PeriodActive.jsx","components/BlankCountdown.jsx","pages/homePage/PeriodHere.jsx","pages/homePage/NeedInfo.jsx","pages/homePage/Home.jsx","pages/loginPage/Login.jsx","pages/index/Index.jsx","components/ProfileCal.jsx","classes/events.js","pages/profilePage/Proflie.jsx","pages/periodInfo/PeriodInfo.jsx","pages/accountSetupPage/AccountSetup.jsx","components/Test.jsx","App.js","index.js"],"names":["authSlice","createSlice","name","initialState","user","email","token","cycle","avgLength","periodStartDate","periodEndDate","daysTillPeriod","canBleed","isBleeding","daysleft","previousPeriod","startDate","endDate","count","reducers","setLogin","state","action","payload","setLogout","setPeriod","setCycle","setNewPeriod","setUserInfo","setCanBleed","setIsBleeding","setDays","_authSlice$actions","actions","spinner","_jsx","className","children","SignUp","props","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setErrMsg","_useState3","_useState4","loading","setLoading","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","username","password","results","login","wrap","_context","prev","next","axios","post","concat","process","sent","data","accessToken","t0","console","log","stop","_x","apply","arguments","Spinner","_jsxs","AiOutlineClose","onClick","onShow","Form","validate","errors","passwordconfirm","render","_ref2","handleSubmit","submitting","form","pristine","Field","_ref3","input","meta","_objectSpread","type","required","htmlFor","error","touched","_ref4","_ref5","_ref6","disabled","fetchUserInfo","_x2","_fetchUserInfo","result","userInfo","headers","abrupt","avgPeriodLength","totalDays","totalCycle","oldStartDate","cycleCount","periodLogged","length","forEach","date","Moment","diff","monthDif","Math","abs","round","estimateDate","lastPeriod","todaysDate","Date","format","estimateLastPeriod","add","Nav","useSelector","id","NavLink","to","CiLogout","renderTime","dimension","time","Countdown","daySeconds","now","startTime","getTime","endTime","duration","remainingTime","CountdownCircleTimer","isPlaying","size","strokeWidth","colors","color1","color2","color3","colorsTime","initialRemainingTime","elapsedTime","color","style","ceil","Datestrip","startValue","parse","endValue","rangeDates","Datepicker","Footer","year","getFullYear","href","target","PeriodNotActive","userName","PeriodActive","message","PeriodHere","BlankCountdown","NeedInfo","Home","needInfo","setInfo","cycleStartDate","subtract","setUser","avgLengths","_cycle","_avgLength","estimateDates","sendPeriodInfo","_callee2","_context2","sendUpdatedPeriod","_callee5","test","_context5","_x3","_x4","periodStarted","_callee6","newEndDate","update","bloodGod","_update","_bloodGod","_context6","periodEnded","_ref7","_callee7","_context7","_toConsumableArray","useEffect","home","Login","errormsg","setError","_useState5","_useState6","_onSubmit","loginTry","catch","response","content","Index","loginOpen","newAccount","setAccount","openLogin","openNewAccount","ProfileCal","localizer","momentLocalizer","moment","event","Calendar","events","startAccessor","start","endAccessor","end","views","Event","_createClass","title","allDay","_classCallCheck","this","Events","key","value","push","get","Proflie","open","setOpen","deleteBox","setDelete","showPasswordChange","setPasswordChange","_useState7","_useState8","deletedEmail","setDeletedEmail","_useState9","_useState10","oldPassword","setOldPassword","_useState11","_useState12","newPassword","setNewPassword","_useState13","_useState14","confirmNewPassword","setConfirmPassword","_useState15","_useState16","setErrorMsg","periodEvent","_useState17","allEvents","_useState18","pEvents","checkUserInfo","periods","_start","_end","newEvent","openDeleteBox","onChange","PeriodInfo","removeDate","setRemove","setMessage","periodMessage","setPMessage","setDate","removePeriod","res","status","setDates","dates","addPeriod","sendDates","getDate","map","element","period","userData","DateRange","editableDateInputs","showMonthAndYearPickers","fixedHeight","item","selection","moveRangeOnFirstSelection","ranges","selected","AccountSetup","isLoading","accountInfo","Test","App","isAuth","Boolean","BrowserRouter","Routes","Route","path","SignupForm","Navigate","persistConfig","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","createRoot","document","getElementById","React","StrictMode","Provider","PersistGate","persistor","persistStore"],"mappings":"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","file":"static/js/main.6497503d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n    user: null,\n    email: null,\n    token : null,\n    cycle: null,\n    avgLength: null,\n    periodStartDate: null,\n    periodEndDate: null,\n    daysTillPeriod: null,\n    canBleed: false,\n    isBleeding: false, \n    daysleft: null,\n    previousPeriod: [{\n        startDate: null,\n        endDate: null,\n        count: null\n    }],\n};\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setLogin: (state, action) =>{\n            state.user = action.payload.user;\n            state.email = action.payload.email;\n            state.token = action.payload.token;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate\n            state.daysTillPeriod = action.payload.cycle;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setLogout: (state) =>{\n            state.user = null;\n            state.token = null;\n            state.cycle = null;\n            state.daysTillPeriod = null;\n            state.periodStartDate = null;\n            state.periodEndDate = null;\n            state.daysTillPeriod = null;\n            state.canBleed = false;\n            state.isBleeding = false;\n            state.previousPeriod = null;\n        },\n        setPeriod: (state, action) =>{\n            state.previousPeriod = action.payload.previousPeriod\n        },\n        setCycle: (state, action) =>{\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n        },\n        setNewPeriod: (state, action) => {\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n        },\n        setUserInfo: (state, action) =>{\n            state.periodStartDate = action.payload.periodStartDate;\n            state.periodEndDate = action.payload.periodEndDate;\n            state.cycle = action.payload.cycle;\n            state.avgLength = action.payload.avgLength;\n            state.canBleed = action.payload.canBleed;\n            state.isBleeding = action.payload.isBleeding;\n            state.previousPeriod = action.payload.previousPeriod;\n        },\n        setCanBleed: (state, action) =>{\n            state.canBleed = action.payload.canBleed;\n        },\n        setIsBleeding: (state, action) =>{\n            state.isBleeding = action.payload.isBleeding;\n        },\n        setDays: (state, action) =>{\n            state.daysleft = action.payload.daysleft;\n        }\n    }\n})\n\nexport const {setLogin, setLogout, setPeriod, setCycle, setNewPeriod, setUserInfo, setIsBleeding, setCanBleed, setDays} = authSlice.actions;\n\nexport const selectCurrentUser = (state) => state.auth.user\nexport const selectCurrentEmail = (state) => state.auth.email\nexport const selectCurrentToken = (state) => state.auth.token\n\nexport default authSlice.reducer;","import React from 'react'\n\nconst spinner = () => {\n  return (\n    <div className='loading'>\n      <div className='spinner'></div>\n    </div>\n  )\n}\n\nexport default spinner\n","import {Form, Field} from 'react-final-form';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios'\nimport { setLogin } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport Spinner from '../../components/Spinner';\nimport {AiOutlineClose} from 'react-icons/ai';\n\nexport default function SignUp(props){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [err, setErrMsg] = useState();\n    const [loading, setLoading] = useState(false);\n    const onSubmit = async (values) =>{\n        let email = values.email\n        let username = values.username\n        let password = values.password\n        setLoading(true)\n        try{\n            const results = await axios.post(`${process.env.REACT_APP_APIURL}/register`,{\n                email, username, password\n            })\n            const result = await results\n            if (result){\n                const login = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n                    email, password\n            });\n            const user = await login\n            if (user){\n                dispatch(\n                    setLogin({\n                      user: user.data.user.username,\n                      email: user.data.user.email,\n                      token: user.data.accessToken,\n                      cycle: user.data.user.cycle,\n                      periodStartDate: user.data.user.periodStartDate,\n                      periodEndDate: user.data.user.periodEndDate,\n                      previousPeriod: user.data.user.previousPeriod,\n                    })\n                  );\n                  navigate('/AccountSetup')\n                }\n            }\n        }catch(err){\n            console.log(err)\n            setErrMsg(err)\n        }\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n             onSubmit={onSubmit}\n             validate = {values => {\n                const errors = {}\n                if (!values.email){\n                    errors.email = 'Required'\n                }\n                if (!values.username){\n                    errors.username = 'Required'\n                }\n                if (!values.password){\n                    errors.password = 'Required'\n                }\n                if (!values.passwordconfirm){\n                    errors.passwordconfirm = 'Required'\n                }else if (values.password !== values.passwordconfirm){\n                    errors.passwordconfirm = 'Must match'\n                }\n                return errors\n             }}\n             render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                <form onSubmit={handleSubmit}>\n                    <h1>Sign Up</h1>\n                    <Field name='email' >\n                        {({input, meta}) => (\n                        <div className='email-input'>\n                            <input {...input} type= 'email' required/>\n                            <label htmlFor='email' className='login-lable'>\n                                <span className='login-span'>Email<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field name='username'>\n                        {({input, meta})=> (\n                        <div className='username-input'>\n                            <input {...input} type='text' required />\n                            <label htmlFor='username' className='login-lable'>\n                                <span className='login-span'>Username<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='password'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='password' className='login-lable'>\n                                <span className='login-span'>Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <Field type='password' name='passwordconfirm'>\n                        {({input, meta}) => (\n                        <div className='password-input'>\n                            <input {...input} type='password' required />\n                            <label htmlFor='passwordconfirm' className='login-lable'>\n                                <span className='login-span'>Confirm Password<small>*</small></span>\n                            </label>\n                            {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                        </div>\n                        )}\n                    </Field>\n                    <button type=\"submit\" disabled={submitting}>Submit</button>\n                </form>\n            )}\n            />\n        </section>\n    )\n    return content\n}\n","import axios from \"axios\";\n\nasync function fetchUserInfo(email, token){\n    const result = axios.post(`${process.env.REACT_APP_APIURL}/user/getuserinfo`,{\n      email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      }\n    )\n    const user = await result\n    if (user){\n        const userInfo = {\n          periodStartDate: user.data.user.periodStartDate,\n          avgLength: user.data.user.avgLength,\n          cycle: user.data.user.cycle,\n          periodEndDate: user.data.user.periodEndDate,\n          previousPeriod: user.data.user.previousPeriod,\n          canBleed: user.data.user.canBleed,\n          isBleeding: user.data.user.isBleeding\n        }\n      return(userInfo)\n    }\n    else{\n        return(null)\n    }\n}\n\nexport {fetchUserInfo}","import Moment from 'moment';\n\nfunction avgPeriodLength(previousPeriod){\n    let totalDays = 0\n    let totalCycle = 0\n    let oldStartDate = null;\n    let cycleCount = 0\n    const periodLogged = previousPeriod.length;\n    if (periodLogged === 1){\n        return (false)\n    }\n    previousPeriod.forEach(date => {\n      totalDays += Moment(date.endDate).diff(date.startDate, 'days')\n      if (oldStartDate != null){\n        const monthDif = Moment(oldStartDate).diff(date.startDate, 'month', true);\n        if (Math.abs(monthDif) < 1.5){\n          totalCycle += Math.abs(Moment(date.startDate).diff(oldStartDate, 'days'))\n          cycleCount += 1\n        }\n      }else{\n        oldStartDate = Moment(date.startDate);\n      }\n    })\n    const avgLength =(Math.round(totalDays/periodLogged))\n    const cycle = (Math.round(totalCycle/cycleCount))\n    return{avgLength, cycle}\n}\n\nfunction estimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength){\n    let lastPeriod = null\n    let startDate;\n    let endDate;\n    let todaysDate = new Date()\n    todaysDate = Moment(todaysDate).format()\n    if(!periodStartDate || !periodEndDate){\n        previousPeriod.forEach(date => {\n          if (lastPeriod === null){\n            lastPeriod = date.startDate\n          }else if(lastPeriod < date.startDate){\n            lastPeriod = date.startDate\n          }\n        })\n        const monthDif = Moment(todaysDate).diff(lastPeriod, 'month')\n        if(cycle && avgLength){\n          if( monthDif > 1){\n            const estimateLastPeriod = Moment(lastPeriod).add((monthDif), 'months')\n            startDate = Moment(estimateLastPeriod).add(cycle, 'days');\n            endDate = Moment(estimateLastPeriod).add(avgLength, 'days');\n          }else{\n            lastPeriod = Moment(lastPeriod).format()\n            startDate = Moment(lastPeriod).add(cycle, 'days');\n            endDate = Moment(startDate).add(avgLength, 'days')\n          }\n        }\n        return({startDate, endDate})\n      }else{\n        return(false)\n      }\n    }\n\nexport {avgPeriodLength, estimateDate}","import {useRef} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CiLogout } from 'react-icons/ci'\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nconst Nav = () => {\n    const dispatch = useDispatch();\n    const cycle = useSelector((state) => state.cycle);\n    const avgLength = useSelector((state) => state.avgLength)\n    const previousPeriod = useSelector((state) => state.previousPeriod)\n\n    const logout = () =>{\n        dispatch(\n            setLogout()\n        )\n    }\n\n  return (\n    <nav className='nav'>\n        <div className='logo'>\n            placeholder\n        </div>\n        <input id='mobile-nav-toggle' type='checkbox' /> \n        <label className='mobile-nav-container' htmlFor='mobile-nav-toggle'>\n            <div className='mobile-nav' id ='mobile-nav'></div>\n        </label>\n        <ul className='nav-links' id='nav-links'>\n            <li className='stats'>\n                <h3>Information at a Glance</h3>\n                <span>Cycle Lenght: {cycle} days</span><br/>\n                <span>Average Length: {avgLength} days </span><br />\n                <span>Periods Logged: {previousPeriod.length}</span>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/home'>\n                    Home\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/profile'>\n                    Profile\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink to='/periodinfo'>\n                    Period Info\n                </NavLink>\n            </li>\n            <li className='logout'>\n                <button onClick={logout}>\n                    <CiLogout></CiLogout>\n                </button>\n            </li>\n        </ul>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React, { useEffect } from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer} from \"react-countdown-circle-timer\";\n\n\nconst renderTime = (dimension, time) =>{\n    return(\n        <div className='countdown-wrapper'>\n            <div className='days-left'><span>{time}&nbsp;{dimension}</span></div>\n        </div>\n    )\n}\nconst Countdown = (props) => {\n    const startDate = Moment(props.startDate).format('YYYY-MM-DD')\n    const endDate = Moment(props.endDate).format('YYYY-MM-DD')\n    const getTime = (time) =>Math.ceil((time / daySeconds));\n    const daySeconds = 86400\n    const fiveDays = 432000\n    let todaysDate = Date.now() / 1000;\n    const startTime = new Date(startDate).getTime() / 1000;\n    const endTime = new Date(endDate).getTime() / 1000;\n    const duration = endTime - startTime;\n    const remainingTime = endTime - todaysDate;\n    const timerProps = {\n    isPlaying: true,\n    size: 500,\n    strokeWidth: 10,\n    };\n    console.log(startDate, endDate)\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors={[props.color1, props.color2, props.color3]}\n              colorsTime={[startTime , fiveDays, 0]}\n              duration={duration}\n              initialRemainingTime= {remainingTime}\n            >\n            {({elapsedTime, color}) => (\n                <span style={{color}}>\n                    {renderTime('days', getTime(duration - elapsedTime) )}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import { Datepicker, DatepickerEvent} from \"@meinefinsternis/react-horizontal-date-picker\";\nimport { useState } from \"react\";\nfunction Datestrip(props) {\n  const [date, setDate] = useState({\n    startValue: Date.parse(props.startValue),\n    endValue: new Date(props.endValue),\n    rangeDates: [],\n  });\n  return (\n    <div className=\"horizontal-date-picker\">\n      <Datepicker\n        startValue={date.startValue}\n        endValue = {date.endValue}\n      />\n    </div>\n  )\n}\n\nexport default Datestrip\n","import React from 'react'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n  const footer = (\n    <footer>\n      <span>&copy; {year} <a href='albertfriend.dev' target='_blank'>Albert Friend</a></span>\n    </footer>\n  )\n  return footer \n}\n\nexport default Footer\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodNotActive = (props) => {\n  return (\n    <div className='page-wrapper'>\n      <Nav/>\n      <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <Datestrip\n                  startValue = {props.periodStartDate}\n                  endValue = {props.periodEndDate}\n            />\n          <div className=\"period-countdown\">\n              <h2>Your next period is in</h2>\n              <Countdown startDate = {props.startDate} endDate = {props.endDate} color1='#40bf32' color2= '#e0e20c' color3= '#FA2C00' ></Countdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n          </div>\n      </section>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PeriodNotActive\n","import React from 'react';\nimport Nav from '../navbar/Nav';\nimport Countdown from '../../components/Countdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodActive = (props) => {\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n        <section className='home'>\n            <h1 className='welcome-text'>Welcome back, {props.userName}</h1>\n            <Datestrip\n                startValue = {props.periodStartDate}\n                endValue = {props.periodEndDate}\n            />\n            <div className=\"period-countdown\">\n                <h2>Your period should be over in</h2>\n                <Countdown startDate = {props.startDate} endDate = {props.endDate} color3='#40bf32' color2= '#e0e20c' color1= '#FA2C00'></Countdown>\n            </div>\n            <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period ended?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n            </div>\n        </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default PeriodActive\n","import React from 'react';\nimport Moment from 'moment';\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst Countdown = (props) => {\n    const renderTime = (message) =>{\n        return(\n            <div className='countdown-wrapper'>\n                <div className='days-left'><span>{props.message}</span></div>\n            </div>\n        )\n    }\n    const timerProps = {\n        isPlaying: true,\n        size: 500,\n        strokeWidth: 10\n      }\n\n  return (\n    <div className='countdown-timer'>\n        <CountdownCircleTimer\n              {...timerProps}\n              colors='#EAE8FF'\n            >\n            {({color}) => (\n                <span style={{color}}>\n                    {renderTime(props.message)}\n                </span>\n            )}\n            </CountdownCircleTimer>\n    </div>\n  )\n}\n\nexport default Countdown\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Datestrip from '../../components/Datestrip';\nimport Footer from '../footer/Footer';\n\nconst PeriodHere = (props) => {\n    return (\n        <div className='page-wrapper'>\n            <Nav />\n            <section className=\"home content\">\n                <h1>Welcome back, {props.userName}</h1>\n                <Datestrip\n                    startValue = {props.periodStartDate}\n                    endValue = {props.periodEndDate}\n                />\n                <div className=\"period-countdown\">\n                    <h2>Your period might be here</h2>\n                    <div className='inner-circle'>\n                        <BlankCountdown startDate = {props.startDate} endDate = {props.endDate}></BlankCountdown>\n                    <span>Today</span>\n                    </div>\n                </div>\n                <div className=\"check-period\">\n                    <label htmlFor = 'check-period'>Has your period started?</label>\n                    <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n                </div>\n            </section>\n            <Footer />\n        </div>\n      )\n}\n\nexport default PeriodHere\n","import Nav from '../navbar/Nav'\nimport BlankCountdown from '../../components/BlankCountdown';\nimport Footer from '../footer/Footer';\nconst NeedInfo = (props) => {\n  return (\n    <div className='page-wrapper'>\n        <Nav />\n          <section className=\"home content\">\n          <h1>Welcome back, {props.userName}</h1>\n          <div className=\"period-countdown\">\n              <h2>Error</h2>\n              <BlankCountdown message = {props.message}></BlankCountdown>\n          </div>\n          <div className=\"check-period\">\n              <label htmlFor = 'check-period'>Has your period started?</label>\n              <button name='check-period' type='button' onClick={props.onClick}>Yes</button>\n          </div>\n          </section>\n        <Footer />\n    </div>\n  )\n}\n\nexport default NeedInfo\n\n","import { useEffect, useState } from \"react\";\nimport { useDispatch,useSelector } from 'react-redux';\nimport { setCycle, setIsBleeding, setNewPeriod, setUserInfo, setCanBleed, setPeriod} from '../../state';\nimport Moment from 'moment';\nimport axios from \"axios\";\nimport { fetchUserInfo } from '../../utils/fetchUserInfo'\nimport { avgPeriodLength, estimateDate} from \"../../utils/calcPeriodInfo\";\nimport { countdownCalc } from \"../../utils/countdowncalc\";\nimport PeriodNotActive from \"./PeriodNotActive\";\nimport PeriodActive from \"./PeriodActive\";\nimport PeriodHere from \"./PeriodHere\";\nimport NeedInfo from \"./NeedInfo\";\nimport Countdown from \"../../components/BlankCountdown\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const cycle = useSelector((state) => state.cycle)\n  const userName = useSelector((state) => state.user)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const avgLength = useSelector((state) => state.avgLength)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const isBleeding = useSelector((state) => state.isBleeding)\n  const canBleed = useSelector((state) => state.canBleed)\n  const [needInfo, setInfo] = useState(true)\n\n  let todaysDate = new Date()\n  todaysDate = Moment(todaysDate).format('YYYY-MM-DD')\n  const cycleStartDate = Moment(periodStartDate).subtract(cycle, 'days')\n  const setUser = async () =>{\n    const userInfo = await fetchUserInfo(email, token)\n    dispatch(\n      setUserInfo({\n        periodStartDate: userInfo.periodStartDate,\n        periodEndDate: userInfo.periodEndDate,\n        canBleed: userInfo.canBleed,\n        isBleeding: userInfo.isBleeding,\n        previousPeriod: userInfo.previousPeriod,\n      })\n    )\n    const avgLengths = await avgPeriodLength(previousPeriod)\n    if (avgLengths){\n      const cycle = avgLengths.cycle;\n      const avgLength = avgLengths.avgLength\n      dispatch(\n        setCycle({\n          cycle: cycle,\n          avgLength: avgLength\n        })\n      )\n    }\n    const estimateDates = estimateDate(periodStartDate, periodEndDate, previousPeriod, cycle, avgLength)\n    if (estimateDates){\n      const startDate = estimateDates.startDate\n      const endDate = estimateDates.endDate\n      dispatch(\n        setNewPeriod({\n          periodStartDate: startDate,\n          periodEndDate: endDate\n        })\n      )\n      sendPeriodInfo(startDate, endDate)\n    }\n    setInfo(false)\n    if (Moment(periodStartDate).format('YYYY-MM-DD') == todaysDate || Moment(periodStartDate).format('YYYY-MM-DD') < todaysDate && !isBleeding){\n      dispatch(\n        setCanBleed({\n          canBleed: true\n        })\n      )\n    }\n  }\n  const sendPeriodInfo = async (startDate, endDate) =>{\n    axios.post(`${process.env.REACT_APP_APIURL}/user/addperiod`, {\n      email, startDate, endDate, cycle, avgLength\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n  \n  const sendPeriodStatus = async () => {\n    axios.post(`${process.env.REACT_APP_APIURL}/user/setperiodinfo`,{\n      email, isBleeding, canBleed\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\n  const sendPreviousPeriod = async () => {\n    axios.post(`${process.env.REACT_APP_APIURL}user/addpreviousperiod`, {\n      email, previousPeriod\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n  }\n\n  const sendUpdatedPeriod = async (periodStartDate, periodEndDate) => {\n    const test =axios.post(`${process.env.REACT_APP_APIURL}/user/updateperiod`, {\n      email, periodStartDate, periodEndDate\n    },{\n      headers: {'Authorization': `Bearer ${token}`},\n    })\n    return test\n  }\nconst periodStarted = async () =>{\n  if (Moment(periodStartDate).format('YYYY-MM-DD') != todaysDate){\n    const newEndDate = Moment(todaysDate).add('days', avgLength).format('YYYY-MM-DD')\n    const update = sendUpdatedPeriod(todaysDate, newEndDate)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n  }else{\n    const update = sendUpdatedPeriod(periodStartDate, periodEndDate)\n    const bloodGod = await update\n    dispatch(\n      setCanBleed({\n        canBleed: bloodGod.data.canBleed\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: bloodGod.data.isBleeding\n      })\n    )\n  }\n}\n\nconst periodEnded = async () =>{\n  if (periodEndDate != todaysDate){\n    const newEndDate = Moment(todaysDate).add('days', avgLength).format('YYYY-MM-DD')\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: newEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }else{\n    dispatch(\n      setPeriod({\n        previousPeriod: [...previousPeriod,\n          {startDate: periodStartDate, endDate: periodEndDate}\n        ]\n      })\n    )\n    dispatch(\n      setIsBleeding({\n        isBleeding: false\n      })\n    )\n  }\n}\n\nuseEffect(()=>{\n  setUser()\n},[periodStartDate , periodEndDate, needInfo])  \n\n// setUser(user,avgLengths, estimateDate)\n// useEffect(() =>{\n//   sendPeriodStatus()\n// },[periodStarted])\n\n// useEffect(() => {\n//   sendPreviousPeriod()\n// },[isBleeding])\n\nconst home = (isBleeding, canBleed, needInfo) =>{\n  if (!isBleeding && !canBleed && !needInfo){\n    return <PeriodNotActive cycle = {cycle} userName = {userName} endDate = {periodStartDate} startDate = {cycleStartDate} onClick = {periodStarted} periodStartDate={periodStartDate} periodEndDate = {periodEndDate}/>\n  } else if(canBleed){\n    return <PeriodHere userName = {userName} onClick = {periodStarted} endDate = {periodStartDate} startDate = {todaysDate} startValue={periodStartDate} endValue = {periodEndDate}/>\n  } else if(needInfo){\n    return <NeedInfo userName = {userName} onClick = {null} message = 'More logs are required' />\n  }else{\n    return <PeriodActive userName = {userName} onClick = {periodEnded} endDate = {periodEndDate} startDate = {periodStartDate} periodStartDate={periodStartDate} periodEndDate = {periodEndDate} />\n  }\n}\n\nreturn home(isBleeding, canBleed, needInfo)\n\n}\nexport default Home\n","import {Form, Field} from 'react-final-form';\nimport { Link, useResolvedPath } from 'react-router-dom';\nimport {useNavigate} from 'react-router-dom';\nimport {useState} from 'react';\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../../state';\nimport Spinner from '../../components/Spinner';\nimport { useSelector } from \"react-redux\";\nimport {AiOutlineClose} from 'react-icons/ai'\nfunction Login(props){\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const [errormsg, setError] = useState()\n    const [regError, setRegError] = useState(\"\");\n    async function onSubmit(values){\n        setLoading(true)\n        let email = values.email\n        let password = values.password\n        const loginTry = await axios.post(`${process.env.REACT_APP_APIURL}/auth/login`,{\n            email, password\n        }).catch(function (error){\n            if(error.response){\n                setError(error.response.data.error)\n                console.log(error.response.data.error)\n            }\n            setLoading(false)\n        });\n        const user = await loginTry\n        if (user){\n            dispatch(\n                setLogin({\n                  user: user.data.user.username,\n                  email: user.data.user.email,\n                  token: user.data.accessToken,\n                  cycle: user.data.user.cycle,\n                  avgLength: user.data.avgLength,\n                  periodStartDate: user.data.user.periodStartDate,\n                  periodEndDate: user.data.user.periodEndDate,\n                  previousPeriod: user.data.user.previousPeriod,\n                  isBleeding: user.data.user.isBleeding,\n                  canBleed: user.data.user.canBleed\n                })\n              );\n              navigate('/home')\n        };\n    }\n    const content = loading ? <Spinner /> : (\n        <section className='login-wrapper'>\n            <AiOutlineClose onClick={props.onShow} className='exit-button' />\n            <Form\n                onSubmit={onSubmit}\n                validate = {values => {\n                    const errors= {}\n                    if (!values.email){\n                        errors.email = 'Required'\n                    }\n                    if (!values.password){\n                        errors.password = 'Required'\n                    }\n                    return errors\n                }}\n                render = {({handleSubmit, form, submitting, pristine, values}) =>(\n                    <form onSubmit={handleSubmit}>\n                        <h1>Sign In</h1>\n                        <span className='message'>{errormsg}</span>\n                        <Field name='email'>\n                            {({input, meta})=> (\n                            <div className='email-input'>\n                                <input {...input} type='email' required />\n                                <label htmlFor='email' className='login-lable'>\n                                    <span className='login-span'>Email<small>*</small></span>\n                                </label>\n                                {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                            </div>\n                            )}\n                        </Field>\n                        <Field name='password'>\n                            {({input, meta}) => (\n                                <div className='password-input'>\n                                    <input {...input} type ='password' required></input>\n                                    <label htmlFor='password' className='login-lable'>\n                                        <span className='login-span'>Password<small>*</small></span>\n                                    </label>\n                                    {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                                </div>\n                            )}\n                        </Field>\n                        <div className='remember-me'>\n                            <input type='checkbox' id='remember' name='chkbox'></input>\n                            <label htmlFor='chkbox'>Remember Me</label>\n                        </div>\n                        <button type='submit' disabled={submitting}>Submit</button>\n                    </form>\n                )}\n            />\n        </section>\n    )\n    return content\n};\n\nexport default Login","import React, { useState } from 'react';\nimport Login from '../loginPage/Login';\nimport SignUp from '../signupPage/SignUp';\nfunction Index() {\n    const [loginOpen, setLogin] = useState(false)\n    const [newAccount, setAccount] = useState(false)\n    const openLogin = () =>{\n        setLogin(!loginOpen)\n    }\n    const openNewAccount = () =>{\n        setAccount(!newAccount)\n    }\n    const content = (\n        <section className='index-wrapper content'>\n            <h1>Welcome,</h1>\n            <p>You can use this simple web application to track your menstrual cycle. More features are being added soon. Please note this application is still in the early stages, as a result, the accuracy of the tracking is still being tweaked, and pages might be a little slow to load.</p>\n            <hr></hr>\n            <div className='login-button-container'>\n                <span>Already have an account? <button onClick={openLogin}>Login here</button></span>\n                <span className='signup'>or you can<button onClick={openNewAccount}>make one here</button></span>\n            </div>\n            {loginOpen &&\n                <div className='page-fade'>\n                    <Login onShow={openLogin} />\n                </div>\n            }\n            {newAccount &&\n                <div className='page-fade'>\n                    <SignUp onShow={openNewAccount} />\n                </div>\n            }\n        </section>\n    )\n  return content\n}\n\nexport default Index\n","import { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from \"moment\";\nimport { useMemo } from 'react';\n\nfunction ProfileCal(props) {\n    const localizer = momentLocalizer(moment)\n    const views = 'month'\n    console.log(props.event)\n  return (\n    <div className=\"profile-cal\">\n      <Calendar\n        localizer={localizer}\n        events={props.event}\n        startAccessor= {props.start}\n        endAccessor= {props.end}\n        views = {views}\n        // selectable = {false}\n      />\n    </div>\n  )\n}\n\nexport default ProfileCal\n","export class Event{\n    constructor(title, start, end, allDay){\n        this.title = title;\n        this.start = start;\n        this.end = end;\n        this.allDay = allDay;\n    }\n}\n\nexport class Events{\n    constructor(){\n        this.events=[]\n    }\n    newEvent(title, start, end, allDay){\n        this.events.push(new Event(title, start, end, allDay))\n    }\n    get allEvents(){\n        return this.events\n    }\n}\n\n","import {useState, useEffect} from 'react';\nimport Moment from 'moment';\nimport { DateRange } from 'react-date-range';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Nav from '../navbar/Nav'\nimport {useNavigate} from 'react-router-dom';\nimport { setLogout } from '../../state';\nimport { useDispatch } from 'react-redux';\nimport {fetchUserInfo} from '../../utils/fetchUserInfo'\nimport Footer from '../footer/Footer';\nimport ProfileCal from '../../components/ProfileCal';\nimport {Events } from '../../classes/events';\nconst Proflie = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userName = useSelector((state) => state.user)\n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const previousPeriod = useSelector((state) => state.previousPeriod)\n  const user = fetchUserInfo(email, token)\n  const [open, setOpen] = useState(false);\n  const [deleteBox, setDelete] = useState(false);\n  const [showPasswordChange, setPasswordChange] = useState(false)\n  const [deletedEmail, setDeletedEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmPassword] = useState('');\n  const [erroMsg, setErrorMsg] = useState('');\n  let periodEvent = new Events()\n  const [pEvents, setEvents] = useState(periodEvent.allEvents)\n  const checkUserInfo = async (user) => {\n    if (pEvents.length == 0){\n      for(const periods in previousPeriod){\n        let start = Moment(previousPeriod[periods].startDate)\n        let end = Moment(previousPeriod[periods].endDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n      if (periodStartDate && periodEndDate){\n        let start = Moment(periodStartDate)\n        let end = Moment(periodEndDate)\n        periodEvent.newEvent('Period Active', start, end, true)\n      }\n    }\n  }\n  const emailChange = (email) => {\n    setDeletedEmail(email.target.value)\n  }\n  const oldPasswordChange = (password) =>{\n    setOldPassword(password.target.value)\n  }\n  const newPasswordChange = (password) =>{\n    setNewPassword(password.target.value)\n  }\n  const confirmPassword = (password) =>{\n    setConfirmPassword(password.target.value)\n  }\n  const settingToggle = () =>{\n    setOpen(!open)\n  }\n  const openDeleteBox = () =>{\n    setDelete(!deleteBox)\n  }\n  const openPasswordChange = () =>{\n    setPasswordChange(!showPasswordChange)\n  }\n  const deleteAccount = () =>{\n    if (deletedEmail === email){\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/deleteuser`, {\n        email\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      dispatch(\n        setLogout()\n      )\n      navigate('/')\n    }\n  }\n  const changePassword = () =>{\n    if (newPassword == confirmNewPassword){\n      axios.post(`${process.env.REACT_APP_APIURL}/auth/changepassword`,{\n        email, oldPassword, newPassword\n      },{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n    }else(\n      setErrorMsg('New passwords do not match')\n    )\n  }\n  useEffect(() =>{\n    checkUserInfo(user)\n  }, [])\n\n  const content = (\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='profile content'>\n        <h1 className='welcome-text'>Hello {userName},</h1>\n        <div className='calander'>\n          <h2>Here is how you month looks</h2>\n          <ProfileCal\n            event= {pEvents}\n          />\n        </div>\n        <div className='account-settings'>\n          <button onClick={settingToggle}>Settings</button>\n          {open && \n          <div className='inner-account-settings'>\n                 <div className='setting-option'>\n         <button onClick={openPasswordChange}>Password Change</button>\n              {showPasswordChange &&\n                <form className='password-change' onSubmit={changePassword}>\n                  <div className='password-input'>\n                    <input type = 'password' value={oldPassword} onChange={oldPasswordChange}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>Old Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <div className='password-input'>\n                    <input type = 'password' value={newPassword} onChange={newPasswordChange}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>New Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <div className='password-input'>\n                    <input type = 'password' value={confirmNewPassword} onChange={confirmPassword}></input>\n                    <label htmlFor='password' className='login-lable'>\n                        <span className='login-span'>Confirm Password<small>*</small></span>\n                    </label>\n                  </div>\n                  <button type='submit'>Submit</button>\n                </form>\n              }\n            </div>\n            <div className='setting-option'>\n              <button onClick={openDeleteBox}>Delete Account</button>\n            </div>\n          </div>\n          }\n        </div>\n        {deleteBox &&\n        <div className='page-fade'>\n          <div className='warning-box'>\n            <h1>Please enter your email adress to delete your account.</h1>\n            <form onSubmit={deleteAccount} className='delete-account'>\n              <div className='email-input'>\n                <input type='email' value={deletedEmail} onChange={emailChange}></input>\n                <label htmlFor='email' className='login-lable'>\n                  <span className='login-span'>Email</span>\n                </label>\n              </div>\n              <button className='button' type='submit'>Delete</button>\n              <button className='button' onClick={openDeleteBox}>Cancel</button>\n            </form>\n          </div>\n        </div>\n        }\n      </section>\n      <Footer />\n    </div>\n  )\n  return content\n}\n\nexport default Proflie\n\n\n","import React from 'react'\nimport Nav from '../navbar/Nav'\nimport Footer from '../footer/Footer';\nimport {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Moment from 'moment';\nimport axios from 'axios';\nimport { setPeriod } from '../../state';\n\n\nfunction PeriodInfo() {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token)\n  const email = useSelector((state) => state.email)\n  const userInfo = useSelector((state) => state.previousPeriod)\n  const [removeDate, setRemove] = useState()\n  const [message, setMessage] = useState()\n  const [periodMessage, setPMessage] = useState()\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const optionChange = (event) =>{\n    setRemove(event.target.value)\n  }\n  const removePeriod = async () =>{\n    const res =  await axios.post(`${process.env.REACT_APP_APIURL}/user/removePeriod`,{\n      email, removeDate},{\n        headers: {'Authorization': `Bearer ${token}`},\n      })\n      if (res.status === 201){\n        dispatch(\n          setPeriod({\n            previousPeriod: res.data.previousPeriod\n          })\n        )\n        setMessage(res.data.message)\n      }\n    }\n    const userData = (date) =>{\n      if (date[0].endDate){\n        const start = date[0].startDate.getDate()\n        const end = date[0].endDate.getDate()\n        if (start != end){\n          const startDate = Moment(date[0].startDate).format()\n          const endDate = Moment(date[0].endDate).format()\n          if (userInfo.length != 0){\n            const dates = userInfo.map(function(element){return element;})\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: userInfo.length,\n            }\n            dates.push(period)\n            setDates(dates)\n          }else{\n            let period = {\n              startDate: startDate,\n              endDate: endDate,\n              count: 0,\n            }\n            let dates = [period]\n            setDates(dates)\n          }\n        }\n      }\n    }\n    const setDates = (dates) =>{\n      dispatch(\n        setPeriod({\n          previousPeriod: dates\n        })\n      );\n    }\n    const addPeriod = async () =>{\n      const sendDates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n        email, userInfo},{\n          headers: {'Authorization': `Bearer ${token}`},\n        }\n      )\n      const res = await sendDates\n      setPMessage(`${res.data.message}!`)\n    };\n    \n    useEffect(()=>{\n      userData(date)\n    },[date]);\n  const content =\n    <div className='page-wrapper'>\n      <Nav />\n      <section className='info content'>\n        <div className='logging-period'>\n          <h1>Do you have any more period(s) to log?</h1>\n          <span className='message'>{periodMessage}</span>\n          <DateRange\n              editableDateInputs={true}\n              showMonthAndYearPickers={false}\n              fixedHeight = {true}\n              onChange={item => setDate([item.selection])}\n              moveRangeOnFirstSelection={false}\n              ranges={date}\n              // scroll = {{enabled: true}}\n            />\n          <button className='button' onClick={addPeriod}>Add</button>\n        </div>\n        <div className='remove-period'>\n          <span className='message'>{message}</span>\n          <h2>Or would you like to remove some?</h2>\n          <fieldset>\n            <label htmlFor = 'periods'>Select a period to remove:</label>\n            <select name='periods' className='periods' onChange={optionChange}>\n              <option disabled selected>Select a date</option>\n              {userInfo.map((date, key) => <option value={key} key={date + key}>{`${Moment(date.startDate).format('MMMM Do YYYY')} - ${Moment(date.endDate).format('MMMM Do YYYY')}`}</option>\n              )}\n            </select>\n          </fieldset>\n          <button className='button' onClick={removePeriod}>Remove</button>\n        </div>\n      </section>\n      <Footer />\n    </div>\n\n  return content;\n}\n\nexport default PeriodInfo\n","import {useEffect, useState} from 'react';\nimport { DateRange } from 'react-date-range';\nimport { useDispatch } from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport Moment from 'moment';\nimport {setPeriod} from '../../state';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport Spinner from '../../components/Spinner'\nimport Waves from '../../components/Waves'\n\n\nconst AccountSetup = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [date, setDate] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const [isLoading, setLoading] = useState(false)\n  const userInfo = useSelector((state) => state.previousPeriod);\n  const email = useSelector((state) => state.email)\n  const token = useSelector((state) => state.token)\n\n  const userData = (date) =>{\n    if (date[0].endDate){\n      const start = date[0].startDate.getDate()\n      const end = date[0].endDate.getDate()\n      if (start != end){\n        const startDate = Moment(date[0].startDate).format()\n        const endDate = Moment(date[0].endDate).format()\n        if (userInfo.length != 0){\n          const dates = userInfo.map(function(element){return element;})\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: userInfo.length,\n          }\n          dates.push(period)\n          setDates(dates)\n        }else{\n          let period = {\n            startDate: startDate,\n            endDate: endDate,\n            count: 0,\n          }\n          let dates = [period]\n          setDates(dates)\n        }\n      }\n    }\n  }\n  const setDates = (dates) =>{\n    dispatch(\n      setPeriod({\n        previousPeriod: dates\n      })\n    );\n  }\n\n  useEffect(()=>{\n    userData(date)\n  },[date]);\n  const accountInfo = async () =>{\n    setLoading(true)\n    try{\n      const dates = await axios.post(`${process.env.REACT_APP_APIURL}/user/newuser`,{\n          email,\n          userInfo\n          },{\n            headers: {'Authorization': `Bearer ${token}`},\n          }\n          );\n          if (dates){\n            navigate('/Home')\n          }\n    }catch(err){\n      console.log(err)\n    }\n  }\n  const setup = isLoading ? <Spinner /> : (\n        <section className='setup-wrapper'>\n          <h1>When was your last few periods?</h1>\n          <p>Just select them below, and once your done hit next. Please try to make them as close as you can.</p>\n          <DateRange\n            editableDateInputs={true}\n            showMonthAndYearPickers={false}\n            fixedHeight = {true}\n            onChange={item => setDate([item.selection])}\n            moveRangeOnFirstSelection={false}\n            ranges={date}\n            // scroll = {{enabled: true}}\n          />\n          <button type='submit' className='nextButton' onClick={accountInfo}>Next</button>\n        </section>\n  )\n  return setup\n}\n\nexport default AccountSetup\n","import Datestrip from './Datestrip';\nimport { useDispatch,useSelector } from 'react-redux';\n\nconst Test = () => {    \n  const periodEndDate = useSelector((state) => state.periodEndDate)\n  const periodStartDate = useSelector((state) => state.periodStartDate)\n    const calendar = (\n      <div className='page-wrapper'>\n            <Datestrip\n                startValue = {periodStartDate}\n                endValue = {periodEndDate}\n            />\n      </div>\n    )\n    return calendar\n}\n\nexport default Test\n","import { BrowserRouter, Navigate, Routes, Route } from \"react-router-dom\";\nimport SignupForm from './pages/signupPage/SignUp'\nimport { useSelector } from \"react-redux\";\nimport Home from './pages/homePage/Home'\nimport Index from './pages/index/Index'\nimport Proflie from \"./pages/profilePage/Proflie\";\nimport PeriodInfo from \"./pages/periodInfo/PeriodInfo\";\nimport AccountSetup from \"./pages/accountSetupPage/AccountSetup\";\nimport Test from \"./components/Test\";\nfunction App() {\n    const isAuth = Boolean(useSelector((state) => state.token));\n    const newAccount = useSelector((state) => state.previousPeriod);\n    let isNew;\n    // function newAccountCheck(newAccount){\n    //     if (newAccount.length < 1){\n    //         isNew = true;\n    //     }else{\n    //         isNew = false;\n    //     }\n    // }\n    // newAccountCheck(newAccount)\n    return (\n        <BrowserRouter>\n            <Routes>\n                <Route path='/accountsetup' element={ <AccountSetup/>} />\n                <Route path='/signup' element={<SignupForm />} />\n                <Route path='/' element={<Index />} />\n                <Route path='/profile' element={ isAuth ? <Proflie /> : <Navigate to='/' />} />\n                <Route path='/periodinfo' element={isAuth ? <PeriodInfo /> : <Navigate to='/' />} />\n                <Route path='/home' element= {isAuth ? <Home /> : <Navigate to='/' />}/>\n                <Route path='/Test1' element= {<Test />} />\n            </Routes>\n        </BrowserRouter>\n);\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\nimport './styles/styles.css';\nimport App from './App';\nimport { configureStore, ConfigureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport authReducer from \"./state\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistStore(store)}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}