{"ast":null,"code":"var _jsxFileName = \"/Users/shrimpy/Desktop/Period_Tracker/period_tracker/src/components/pages/login/SignUp.jsx\";\nimport Signup from './SignUpForm';\nimport { Form, Field } from 'react-final-form';\nimport { redirect, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction submit(values) {// const navigate = useNavigate()\n  // window.alert(JSON.stringify(values,0,2))\n  // navigate = '/login'\n}\n\nconst SignUp = () => /*#__PURE__*/_jsxDEV(\"section\", {\n  className: \"login-wrapper\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Sign Up\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: submit,\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = 'Required';\n      }\n\n      if (!values.username) {\n        errors.username = 'Required';\n      }\n\n      if (!values.password) {\n        errors.password = 'Required';\n      }\n\n      if (!values.passwordconfirm) {\n        errors.passwordconfirm = 'Required';\n      } else if (values.password !== values.passwordconfirm) {\n        errors.passwordconfirm = 'Must match';\n      }\n\n      return errors;\n    },\n    render: _ref => {\n      let {\n        handleSubmit,\n        form,\n        submitting,\n        pristine,\n        values\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          children: _ref2 => {\n            let {\n              input,\n              meta\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n                type: \"email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"login-lable\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"login-span\",\n                  children: [\"Email\", /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 63\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 25\n              }, this), meta.error && meta.touched && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error\",\n                children: meta.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 1\n}, this); // function SignUp(){\n//     return(\n//         <Signup />\n//     )\n// };\n\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Signup","Form","Field","redirect","useNavigate","submit","values","SignUp","errors","email","username","password","passwordconfirm","handleSubmit","form","submitting","pristine","input","meta","error","touched"],"sources":["/Users/shrimpy/Desktop/Period_Tracker/period_tracker/src/components/pages/login/SignUp.jsx"],"sourcesContent":["import Signup from './SignUpForm'\nimport {Form, Field} from 'react-final-form';\nimport {redirect, useNavigate} from 'react-router-dom';\nfunction submit(values){\n    // const navigate = useNavigate()\n    // window.alert(JSON.stringify(values,0,2))\n    // navigate = '/login'\n}\nconst SignUp = () =>(\n<section className='login-wrapper'>\n<h1>Sign Up</h1>\n<Form\n         onSubmit={submit}\n         validate = {values => {\n            const errors = {}\n            if (!values.email){\n                errors.email = 'Required'\n            }\n            if (!values.username){\n                errors.username = 'Required'\n            }\n            if (!values.password){\n                errors.password = 'Required'\n            }\n            if (!values.passwordconfirm){\n                errors.passwordconfirm = 'Required'\n            }else if (values.password !== values.passwordconfirm){\n                errors.passwordconfirm = 'Must match'\n            }\n            return errors\n         }}\n         render = {({handleSubmit, form, submitting, pristine, values}) =>(\n            <form onSubmit={handleSubmit}>\n                <Field name='email' >\n                    {({input, meta}) => (\n                    <div className='email-input'>\n                        <input {...input} type= 'email' required/>\n                        <label htmlFor='email' className='login-lable'>\n                            <span className='login-span'>Email<small>*</small></span>\n                        </label>\n                        {meta.error && meta.touched && <span className='error'>{meta.error}</span>}\n                    </div>\n                    )}\n                </Field>\n            </form>\n            )}\n            />\n</section>\n)\n\n// function SignUp(){\n\n//     return(\n//         <Signup />\n//     )\n// };\n\nexport default SignUp"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,kBAApC;;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAuB,CACnB;EACA;EACA;AACH;;AACD,MAAMC,MAAM,GAAG,mBACf;EAAS,SAAS,EAAC,eAAnB;EAAA,wBACA;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA,eAEA,QAAC,IAAD;IACS,QAAQ,EAAEF,MADnB;IAES,QAAQ,EAAIC,MAAM,IAAI;MACnB,MAAME,MAAM,GAAG,EAAf;;MACA,IAAI,CAACF,MAAM,CAACG,KAAZ,EAAkB;QACdD,MAAM,CAACC,KAAP,GAAe,UAAf;MACH;;MACD,IAAI,CAACH,MAAM,CAACI,QAAZ,EAAqB;QACjBF,MAAM,CAACE,QAAP,GAAkB,UAAlB;MACH;;MACD,IAAI,CAACJ,MAAM,CAACK,QAAZ,EAAqB;QACjBH,MAAM,CAACG,QAAP,GAAkB,UAAlB;MACH;;MACD,IAAI,CAACL,MAAM,CAACM,eAAZ,EAA4B;QACxBJ,MAAM,CAACI,eAAP,GAAyB,UAAzB;MACH,CAFD,MAEM,IAAIN,MAAM,CAACK,QAAP,KAAoBL,MAAM,CAACM,eAA/B,EAA+C;QACjDJ,MAAM,CAACI,eAAP,GAAyB,YAAzB;MACH;;MACD,OAAOJ,MAAP;IACF,CAnBV;IAoBS,MAAM,EAAI;MAAA,IAAC;QAACK,YAAD;QAAeC,IAAf;QAAqBC,UAArB;QAAiCC,QAAjC;QAA2CV;MAA3C,CAAD;MAAA,oBACP;QAAM,QAAQ,EAAEO,YAAhB;QAAA,uBACI,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAA,UACK;YAAA,IAAC;cAACI,KAAD;cAAQC;YAAR,CAAD;YAAA,oBACD;cAAK,SAAS,EAAC,aAAf;cAAA,wBACI,sBAAWD,KAAX;gBAAkB,IAAI,EAAE,OAAxB;gBAAgC,QAAQ;cAAxC;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAO,OAAO,EAAC,OAAf;gBAAuB,SAAS,EAAC,aAAjC;gBAAA,uBACI;kBAAM,SAAS,EAAC,YAAhB;kBAAA,iCAAkC;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAlC;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADJ;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,EAKKC,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,OAAnB,iBAA8B;gBAAM,SAAS,EAAC,OAAhB;gBAAA,UAAyBF,IAAI,CAACC;cAA9B;gBAAA;gBAAA;gBAAA;cAAA,QALnC;YAAA;cAAA;cAAA;cAAA;YAAA,QADC;UAAA;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADO;IAAA;EApBnB;IAAA;IAAA;IAAA;EAAA,QAFA;AAAA;EAAA;EAAA;EAAA;AAAA,QADA,C,CA0CA;AAEA;AACA;AACA;AACA;;;KA/CMZ,M;AAiDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}