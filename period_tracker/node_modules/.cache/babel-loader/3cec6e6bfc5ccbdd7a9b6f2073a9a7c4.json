{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose'; //      \n\nvar charCodeOfDot = \".\".charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp( // Match anything that isn't a dot or bracket.\n\"[^.[\\\\]]+\" + \"|\" + // Or match property names within brackets.\n\"\\\\[(?:\" + // Match a non-string expression.\n\"([^\\\"'][^[]*)\" + \"|\" + // Or match strings (supports escaping characters).\n\"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" + \")\\\\]\" + \"|\" + // Or match \"\" as the space between consecutive dots or empty brackets.\n\"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\", \"g\");\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n\n    result.push(key);\n  });\n  return result;\n};\n\nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== \"string\") {\n    throw new Error(\"toPath() expects a string\");\n  }\n\n  if (keysCache[key] == null) {\n    /**\n     * The following patch fixes issue 456, introduced since v4.20.3:\n     *\n     * Before v4.20.3, i.e. in v4.20.2, a `key` like 'choices[]' would map to ['choices']\n     * (e.g. an array of choices used where 'choices[]' is name attribute of an input of type checkbox).\n     *\n     * Since v4.20.3, a `key` like 'choices[]' would map to ['choices', ''] which is wrong and breaks\n     * this kind of inputs e.g. in React.\n     *\n     * v4.20.3 introduced an unwanted breaking change, this patch fixes it, see the issue at the link below.\n     *\n     * @see https://github.com/final-form/final-form/issues/456\n     */\n    if (key.endsWith(\"[]\")) {\n      // v4.20.2 (a `key` like 'choices[]' should map to ['choices'], which is fine).\n      keysCache[key] = key.split(keysRegex).filter(Boolean);\n    } else {\n      // v4.20.3 (a `key` like 'choices[]' maps to ['choices', ''], which breaks applications relying on inputs like `<input type=\"checkbox\" name=\"choices[]\" />`).\n      keysCache[key] = stringToPath(key);\n    }\n  }\n\n  return keysCache[key];\n}; //      \n\n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== \"object\" || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2; // object set\n\n\n    if (current === undefined || current === null) {\n      var _ref; // recurse\n\n\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error(\"Cannot set a non-numeric property on an array\");\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      current[key];\n\n      var _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error(\"Cannot set a numeric property on an object\");\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = \"FINAL_FORM/form-error\";\nvar ARRAY_ERROR = \"FINAL_FORM/array-error\"; //      \n\n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n} //      \n\n\nvar fieldSubscriptionItems = [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"value\", \"visited\", \"validating\"]; //      \n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; //      \n\n\nfunction subscriptionFilter(dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n} //      \n\n\nvar shallowEqualKeys$1 = [\"data\"];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}; //      \n\n\nvar formSubscriptionItems = [\"active\", \"dirty\", \"dirtyFields\", \"dirtyFieldsSinceLastSubmit\", \"dirtySinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitting\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"]; //      \n\nvar shallowEqualKeys = [\"touched\", \"visited\"];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n} //      \n\n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = function (obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n};\n\nvar version = \"4.20.8\";\nvar configOptions = [\"debug\", \"initialValues\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"validate\", \"validateOnBlur\"];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === \"object\" && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== \"undefined\";\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error(\"No config specified\");\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error(\"No onSubmit function specified\");\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      asyncErrors: {},\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(function (errors) {\n          return setErrors(errors, true);\n        }));\n      } else {\n        setErrors(errorsOrPromise, false);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            if (state.fields[field.name]) {\n              state.fields[field.name].validating = false;\n              setError(error);\n            }\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var asyncRecordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors, wasAsync) {\n      if (wasAsync) {\n        asyncRecordLevelErrors = errors || {};\n      } else {\n        recordLevelErrors = errors || {};\n      }\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors(afterAsync) {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors, afterAsync ? asyncRecordLevelErrors // new async errors\n      : formState.asyncErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      if (afterAsync) {\n        formState.asyncErrors = asyncRecordLevelErrors;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    };\n\n    if (hasAsyncValidations) {\n      // async validations are running, ensure validating is true before notifying\n      state.formState.validating++;\n      callback();\n    } // process sync errors\n\n\n    processErrors(false); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors(true);\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== \"production\" && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === \"function\" ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]) || {};\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      }; // create initial field state if not exists\n\n      var field = state.fields[name] || {\n        active: false,\n        afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n        beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n        data: fieldConfig && fieldConfig.data || {},\n        isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n        lastFieldState: undefined,\n        modified: false,\n        modifiedSinceLastSubmit: false,\n        name: name,\n        touched: false,\n        valid: true,\n        validateFields: fieldConfig && fieldConfig.validateFields,\n        validators: {},\n        validating: false,\n        visited: false\n      }; // Mutators can create a field in order to keep the field states\n      // We must update this field when registerField is called afterwards\n\n      field.blur = field.blur || function () {\n        return api.blur(name);\n      };\n\n      field.change = field.change || function (value) {\n        return api.change(name, value);\n      };\n\n      field.focus = field.focus || function () {\n        return api.focus(name);\n      };\n\n      state.fields[name] = field;\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n\n        if (fieldConfig.initialValue !== undefined && (noValueInFormState || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n          runValidation(undefined, notify);\n        } // only use defaultValue if we don't yet have any value for this field\n\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case \"debug\":\n          debug = value;\n          break;\n\n        case \"destroyOnUnregister\":\n          destroyOnUnregister = value;\n          break;\n\n        case \"initialValues\":\n          api.initialize(value);\n          break;\n\n        case \"keepDirtyOnReinitialize\":\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case \"mutators\":\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case \"onSubmit\":\n          onSubmit = value;\n          break;\n\n        case \"validate\":\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case \"validateOnBlur\":\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error(\"Unrecognised option \" + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        resetModifiedAfterSubmit();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error(\"No callback given.\");\n      }\n\n      if (!subscription) {\n        throw new Error(\"No subscription provided. What values do you want to listen to?\");\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","charCodeOfDot","charCodeAt","reEscapeChar","rePropName","RegExp","stringToPath","string","result","push","replace","match","expression","quote","subString","key","trim","keysCache","keysRegex","toPath","undefined","length","Error","endsWith","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","res","call","TypeError","Number","setInRecursor","index","value","destroyArrays","_extends2","_ref","_result2","_result","numKeys","Object","keys","_final","map","numericKey","_result3","_array","existingValue","array","concat","splice","setIn","FORM_ERROR","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","modifiedSinceLastSubmit","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","dirtySinceLastSubmit","valid","dirty","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","shallowEqualKeys$1","filterFieldState","previousState","force","formSubscriptionItems","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","version","configOptions","tripleEquals","hasAnyError","convertToExternalFormState","hasSubmitErrors","hasValidationErrors","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","asyncErrors","resetWhileSubmitting","lastFormState","inBatch","validationPaused","validationBlocked","preventNotificationWhileValidationPaused","nextAsyncValidationKey","asyncValidationPromises","clearAsyncValidationPromise","changeValue","mutate","before","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","runRecordLevelValidation","setErrors","promises","errorsOrPromise","getValidators","validators","validator","runFieldLevelValidation","setError","errorOrPromise","promise","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","asyncRecordLevelErrors","fieldLevelErrors","wasAsync","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","afterAsync","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","hasSyncErrors","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","_safeFieldKeys$reduce","callDebug","notifying","scheduleNotification","beforeSubmit","afterSubmit","resetModifiedAfterSubmit","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","preventNotification","registerField","fieldConfig","haveValidator","silent","getValidator","noValueInFormState","initialValue","defaultValue","validatorRemoved","hasFieldSubscribers","lastOne","reset","restart","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","console","submitIsBlocked","resolvePromise","completeCalled","complete","resolve","subscribe","memoized"],"sources":["/Users/shrimpy/Desktop/Period_Tracker/period_tracker/node_modules/final-form/dist/final-form.es.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar charCodeOfDot = \".\".charCodeAt(0);\nvar reEscapeChar = /\\\\(\\\\)?/g;\nvar rePropName = RegExp( // Match anything that isn't a dot or bracket.\n\"[^.[\\\\]]+\" + \"|\" + // Or match property names within brackets.\n\"\\\\[(?:\" + // Match a non-string expression.\n\"([^\\\"'][^[]*)\" + \"|\" + // Or match strings (supports escaping characters).\n\"([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2\" + \")\\\\]\" + \"|\" + // Or match \"\" as the space between consecutive dots or empty brackets.\n\"(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))\", \"g\");\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = function stringToPath(string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === charCodeOfDot) {\n    result.push(\"\");\n  }\n\n  string.replace(rePropName, function (match, expression, quote, subString) {\n    var key = match;\n\n    if (quote) {\n      key = subString.replace(reEscapeChar, \"$1\");\n    } else if (expression) {\n      key = expression.trim();\n    }\n\n    result.push(key);\n  });\n  return result;\n};\n\nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== \"string\") {\n    throw new Error(\"toPath() expects a string\");\n  }\n\n  if (keysCache[key] == null) {\n    /**\n     * The following patch fixes issue 456, introduced since v4.20.3:\n     *\n     * Before v4.20.3, i.e. in v4.20.2, a `key` like 'choices[]' would map to ['choices']\n     * (e.g. an array of choices used where 'choices[]' is name attribute of an input of type checkbox).\n     *\n     * Since v4.20.3, a `key` like 'choices[]' would map to ['choices', ''] which is wrong and breaks\n     * this kind of inputs e.g. in React.\n     *\n     * v4.20.3 introduced an unwanted breaking change, this patch fixes it, see the issue at the link below.\n     *\n     * @see https://github.com/final-form/final-form/issues/456\n     */\n    if (key.endsWith(\"[]\")) {\n      // v4.20.2 (a `key` like 'choices[]' should map to ['choices'], which is fine).\n      keysCache[key] = key.split(keysRegex).filter(Boolean);\n    } else {\n      // v4.20.3 (a `key` like 'choices[]' maps to ['choices', ''], which breaks applications relying on inputs like `<input type=\"checkbox\" name=\"choices[]\" />`).\n      keysCache[key] = stringToPath(key);\n    }\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== \"object\" || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error(\"Cannot set a non-numeric property on an array\");\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      current[key];\n          var _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error(\"Cannot set a numeric property on an object\");\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = \"FINAL_FORM/form-error\";\nvar ARRAY_ERROR = \"FINAL_FORM/array-error\";\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      modifiedSinceLastSubmit = field.modifiedSinceLastSubmit,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = [\"active\", \"data\", \"dirty\", \"dirtySinceLastSubmit\", \"error\", \"initial\", \"invalid\", \"length\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitError\", \"submitFailed\", \"submitSucceeded\", \"submitting\", \"touched\", \"valid\", \"value\", \"visited\", \"validating\"];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== \"object\" || !a || typeof b !== \"object\" || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys$1 = [\"data\"];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = [\"active\", \"dirty\", \"dirtyFields\", \"dirtyFieldsSinceLastSubmit\", \"dirtySinceLastSubmit\", \"error\", \"errors\", \"hasSubmitErrors\", \"hasValidationErrors\", \"initialValues\", \"invalid\", \"modified\", \"modifiedSinceLastSubmit\", \"pristine\", \"submitting\", \"submitError\", \"submitErrors\", \"submitFailed\", \"submitSucceeded\", \"touched\", \"valid\", \"validating\", \"values\", \"visited\"];\n\n//      \nvar shallowEqualKeys = [\"touched\", \"visited\"];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n});\n\nvar version = \"4.20.8\";\n\nvar configOptions = [\"debug\", \"initialValues\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"validate\", \"validateOnBlur\"];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === \"object\" && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== \"undefined\";\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      modifiedSinceLastSubmit = _ref.modifiedSinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    modifiedSinceLastSubmit: modifiedSinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error(\"No config specified\");\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error(\"No onSubmit function specified\");\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      asyncErrors: {},\n      dirtySinceLastSubmit: false,\n      modifiedSinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      resetWhileSubmitting: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var preventNotificationWhileValidationPaused = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(function (errors) {\n          return setErrors(errors, true);\n        }));\n      } else {\n        setErrors(errorsOrPromise, false);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 0 || validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            if (state.fields[field.name]) {\n              state.fields[field.name].validating = false;\n              setError(error);\n            }\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var asyncRecordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors, wasAsync) {\n      if (wasAsync) {\n        asyncRecordLevelErrors = errors || {};\n      } else {\n        recordLevelErrors = errors || {};\n      }\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors(afterAsync) {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, recordLevelErrors, afterAsync ? asyncRecordLevelErrors // new async errors\n      : formState.asyncErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      if (afterAsync) {\n        formState.asyncErrors = asyncRecordLevelErrors;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    };\n\n    if (hasAsyncValidations) {\n      // async validations are running, ensure validating is true before notifying\n      state.formState.validating++;\n      callback();\n    } // process sync errors\n\n\n    processErrors(false); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors(true);\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.modifiedSinceLastSubmit = !!(formState.lastSubmittedValues && // Object.values would treat values as mixed (facebook/flow#2221)\n    Object.keys(safeFields).some(function (value) {\n      return safeFields[value].modifiedSinceLastSubmit;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== \"production\" && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !(validationPaused && preventNotificationWhileValidationPaused)) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  };\n\n  var resetModifiedAfterSubmit = function resetModifiedAfterSubmit() {\n    return Object.keys(state.fields).forEach(function (key) {\n      return state.fields[key].modifiedSinceLastSubmit = false;\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true,\n            modifiedSinceLastSubmit: !!formState.lastSubmittedValues\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === \"function\" ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]) || {};\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation(preventNotification) {\n      if (preventNotification === void 0) {\n        preventNotification = true;\n      }\n\n      validationPaused = true;\n      preventNotificationWhileValidationPaused = preventNotification;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      }; // create initial field state if not exists\n\n      var field = state.fields[name] || {\n        active: false,\n        afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n        beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n        data: fieldConfig && fieldConfig.data || {},\n        isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n        lastFieldState: undefined,\n        modified: false,\n        modifiedSinceLastSubmit: false,\n        name: name,\n        touched: false,\n        valid: true,\n        validateFields: fieldConfig && fieldConfig.validateFields,\n        validators: {},\n        validating: false,\n        visited: false\n      }; // Mutators can create a field in order to keep the field states\n      // We must update this field when registerField is called afterwards\n\n      field.blur = field.blur || function () {\n        return api.blur(name);\n      };\n\n      field.change = field.change || function (value) {\n        return api.change(name, value);\n      };\n\n      field.focus = field.focus || function () {\n        return api.focus(name);\n      };\n\n      state.fields[name] = field;\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        var noValueInFormState = getIn(state.formState.values, name) === undefined;\n\n        if (fieldConfig.initialValue !== undefined && (noValueInFormState || getIn(state.formState.values, name) === getIn(state.formState.initialValues, name)) // only initialize if we don't yet have any value for this field\n        ) {\n          state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n          runValidation(undefined, notify);\n        } // only use defaultValue if we don't yet have any value for this field\n\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined && noValueInFormState) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        var hasFieldSubscribers = !!state.fieldSubscribers[name];\n\n        if (hasFieldSubscribers) {\n          // state.fieldSubscribers[name] may have been removed by a mutator\n          delete state.fieldSubscribers[name].entries[index];\n        }\n\n        var lastOne = hasFieldSubscribers && !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        state.formState.resetWhileSubmitting = true;\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n\n    /**\n     * Returns the form to a clean slate; that is:\n     * - Clear all values\n     * - Resets all fields to their initial state\n     */\n    restart: function restart(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      api.batch(function () {\n        for (var name in state.fields) {\n          api.resetFieldState(name);\n          state.fields[name] = _extends({}, state.fields[name], {\n            active: false,\n            lastFieldState: undefined,\n            modified: false,\n            modifiedSinceLastSubmit: false,\n            touched: false,\n            valid: true,\n            validating: false,\n            visited: false\n          });\n        }\n\n        api.reset(initialValues);\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n      preventNotificationWhileValidationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case \"debug\":\n          debug = value;\n          break;\n\n        case \"destroyOnUnregister\":\n          destroyOnUnregister = value;\n          break;\n\n        case \"initialValues\":\n          api.initialize(value);\n          break;\n\n        case \"keepDirtyOnReinitialize\":\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case \"mutators\":\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case \"onSubmit\":\n          onSubmit = value;\n          break;\n\n        case \"validate\":\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case \"validateOnBlur\":\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error(\"Unrecognised option \" + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        resetModifiedAfterSubmit();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n        var resetWhileSubmitting = formState.resetWhileSubmitting;\n\n        if (resetWhileSubmitting) {\n          formState.resetWhileSubmitting = false;\n        }\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          if (!resetWhileSubmitting) {\n            formState.submitFailed = false;\n            formState.submitSucceeded = true;\n          }\n\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values);\n      resetModifiedAfterSubmit(); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error(\"No callback given.\");\n      }\n\n      if (!subscription) {\n        throw new Error(\"No subscription provided. What values do you want to listen to?\");\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}